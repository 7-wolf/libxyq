#include "txtPet.h"

ccc_txt_instance_cpp(txtPet);

void txtPet::init(eMod pet, const std::string& name)
{
	_pet = &_tables.at(pet);
	_pet->name = name;
}

void txtPet::insert(const ulong& small, const ulong& big, const ulong& dialog)
{
	_action.clear();
	txtAction::insert(_action, small, big, dialog);
// 	auto& head = _action;
// 	head.insert(std::make_pair(eAct::Small, small));
// 	head.insert(std::make_pair(eAct::Big, big));
// 	head.insert(std::make_pair(eAct::Dialog, dialog));
	_pet->heads.push_back(_action);
}

void txtPet::insert(const ulong& atk, const ulong& atk2, const ulong& suffer, const ulong& magic, const ulong& def, const ulong& dead)
{
	_action.clear();
	txtAction::insert(_action, atk, atk2, suffer, magic, def, dead);
	_pet->sounds.push_back(_action);
}

void txtPet::insert(int offx, int atk1, int atk2, int atk3, int atk4, int magic)
{
	_point.offx = offx;
	_point.atks[0][0] = atk1;
	_point.atks[0][1] = atk2;
	_point.atks[1][0] = atk3;
	_point.atks[1][1] = atk4;
	_point.magic = magic;
	_pet->points.push_back(_point);
}

void txtPet::insert(const std::vector<int>& jj1, const std::vector<int>& jj2, const std::vector<int>& jj3, const std::vector<int>& jj4)
{
	_pet->jinjies.push_back(jj1);
	_pet->jinjies.push_back(jj2);
	_pet->jinjies.push_back(jj3);
	_pet->jinjies.push_back(jj4);
}

void txtPet::insert(const std::vector<int>& jj1, const std::vector<int>& jj2)
{
	_pet->jinjies.push_back(jj1);
	_pet->jinjies.push_back(jj2);
}

void txtPet::insert(const std::vector<int>& jj)
{
	_pet->jinjies.push_back(jj);

}

void txtPet::insert(const ulong& color, const ulong& stand, const ulong& walk, const ulong& fight, const ulong& go, const ulong& atk, const ulong& atk2, const ulong& magic, const ulong& def, const ulong& suffer, const ulong& dead, const ulong& back)
{
	_pet->colors.push_back(color);
	_action.clear();
	txtAction::insert(_action/*, stand, walk*/, fight, go, atk, atk2, magic, def, suffer, dead, back, true);
	_pet->actions.push_back(_action);
	_action.clear();
	txtAction::insert(_action, stand, walk);
	_pet->actionMaps.push_back(_action);
}



txtPet::txtPet()
{
	sPet pet;
	for (int e = (int)eMod::ePet0; e <= (int)eMod::ePetEnd; ++e)
	{
		_tables.insert(std::make_pair((eMod)e, pet));
	}


	init(eMod::e¾ÞÍÜ, "¾ÞÍÜ");
	insert(0xAD983A7D, 0x2D8CFBA2, 0x3F9317BB);
	insert(0xB353520A, 0xB353520A, 0x6B003B08, 0x70967DFB, 0xCB86A7BC, 0xB2C22F53);
	insert(65, 6, 6, 6, 6, 4);
	insert(0x00001000, 0xD69D74DA, 0x7B66FAF3, 0xD69D74DA, 0xB0E02259, 0xE325DA76, 0xE325DA76, 0xFA163BDB, 0x77254EFE, 0xFBAECC68, 0xF15D9B13, 0x200B54D8);
	init(eMod::e´óº£¹ê, "´óº£¹ê");
	insert(0xA1D1788D, 0xC39E889A, 0x12F27887);
	insert(0x7ECA9465, 0x7ECA9465, 0xBAA6B61C, 0xA161E49B, 0xEBE264EF, 0x33EE1350);
	insert(65, 4, 4, 4, 4, 4);
	insert(0x00001001, 0x4E4577E9, 0x545A24CA, 0x4E4577E9, 0x1EBD486A, 0xB0E742C3, 0xB0E742C3, 0x7247C2AF, 0x73E169FD, 0xC1BE763B, 0x302D0DC2, 0x62117CB2);
	init(eMod::e»¤ÎÀ, "»¤ÎÀ");
	insert(0xB3000CA6, 0x1B6CEF18, 0xA8B839FB);
	insert(0x8B212CF4, 0x8B212CF4, 0x5CD0FBA4, 0xA2E16086, 0x688CC488, 0x1E76F7C5);
	insert(65, 5, 5, 5, 5, 4);
	insert(0x00001002, 0x03A423A7, 0xA260CA8C, 0x03A423A7, 0xF3F328AA, 0x98D7F621, 0x98D7F621, 0x3190BBAD, 0xADB19915, 0x3A42F93B, 0xAC48C200, 0x11497564);
	init(eMod::eÊ÷¹Ö, "Ê÷¹Ö");
	insert(0x30283E25, 0x7D06D3B0, 0xE3B6336F);
	insert(0xD7A73A16, 0xD7A73A16, 0x14E539B2, 0xC4EB3CF9, 0x56FA5025, 0x63740E5E);
	insert(90, 5, 5, 5, 5, 4);
	insert(0xBE4F5219, 0x21E267D5, 0x3ED84216, 0x21E267D5, 0x8D2A74DC, 0x7C76C905, 0x7C76C905, 0x64704A76, 0xB53BD551, 0x4B2CACB9, 0xEC260188, 0xC545C3AD);
	init(eMod::e¶ÄÍ½, "¶ÄÍ½");
	insert(0x1DF9E861, 0x06B0A60D, 0xFC840EA4);
	insert(0x6432CEA3, 0x6432CEA3, 0xB18B79D3, 0x588E5E89, 0xDFE944FC, 0x21973440);
	insert(60, 11, 11, 11, 11, 4);
	insert(0x00001004, 0xB59A19B8, 0x32907688, 0xB59A19B8, 0xE0811AE9, 0x9E8D1971, 0x9E8D1971, 0x7316CFAB, 0x061A19DD, 0x701232A0, 0x93371DC2, 0xD0317D6C);
	init(eMod::eÇ¿µÁ, "Ç¿µÁ");
	insert(0x90B8EAEA, 0x326CC5C6, 0xD206038F);
	insert(0xEB085E1A, 0xEB085E1A, 0x30891C35, 0xC7069628, 0x4653753A, 0xBA423BCB);
	insert(60, 4, 8, 4, 8, 4);
	insert(0x00001005, 0x4E1EC463, 0xFD851096, 0x4E1EC463, 0xB5D068D4, 0xF26D871D, 0xF26D871D, 0x53BF0175, 0x8A23ACE1, 0x593AE526, 0xAC6D8056, 0x4C4D7913);
	init(eMod::eº£Ã«³æ, "º£Ã«³æ");
	insert(0x82B64797, 0x5786AD5A, 0xC9D5AC2C);
	insert(0x5ECC5AA7, 0x5ECC5AA7, 0xF08351EB, 0x5C94D8A4, 0xD877A6E3, 0x31F70A10);
	insert(53, 2, 2, 2, 2, 4);
	insert(0x26C2375D, 0xA9AD0013, 0xE7CF4AE4, 0xA9AD0013, 0x4E7C228F, 0x6DED4692, 0x6DED4692, 0x2876985B, 0x88EA2E9A, 0x96819157, 0xA7B082F6, 0xC68F26D1);
	init(eMod::e´óòùòð, "´óòùòð");
	insert(0xCD03B9B4, 0x90ECA422, 0x6A827437);
	insert(0x400298AB, 0x400298AB, 0xD1B4A948, 0x6354C9B9, 0xB8E7DC5D, 0xCBF3C1D6);
	insert(70, 4, 4, 4, 4, 4);
	insert(0xA28871AD, 0xDBA9BE37, 0x10614BC6, 0xDBA9BE37, 0x60B2E461, 0xC7766014, 0xC7766014, 0x1F19F135, 0x3105EDD1, 0x154302AE, 0x49258F6E, 0x71B0F3F3);
	init(eMod::eÉ½Ôô, "É½Ôô");
	insert(0xA5D4465C, 0xED08D563, 0x670D2012);
	insert(0xC5FAE987, 0xC5FAE987, 0x4D1E8AB2, 0x01020223, 0xABAB2922, 0x383D2CC0);
	insert(80, 4, 7, 4, 7, 4);
	insert(0x57958970, 0xE8A7D963, 0xAEF0806F, 0xE8A7D963, 0xF873A07A, 0x85C0B736, 0x85C0B736, 0x33F4E27D, 0x5A0B27DE, 0x0FC45589, 0x73D332F0, 0xBBD02E25);
	init(eMod::eÒ°Öí, "Ò°Öí");
	insert(0xDF608E1D, 0x087F188A, 0xBD2DBF43);
	insert(0x6479B43D, 0x6479B43D, 0xDDD145C1, 0x996D24E3, 0xD8C4FBC8, 0x0B9460D3);
	insert(77, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x0AEF634B, 0x5034A927, 0x99EE8435, 0x5034A927, 0xCC7BCA94, 0xA5A50DD2, 0xA5A50DD2, 0x91505EF2, 0x7012CFD1, 0xC8406125, 0x4E6D5EF5, 0x646D4779);
	insert(0x00000000, 0x935A0CD1, 0xFB2601B1, 0x935A0CD1, 0x0884EBEE, 0xD53C5B82, 0xD53C5B82, 0x0FD9040B, 0xBE265EC9, 0x39D2948C, 0x77FA9DC1, 0xA19CA69F);
	init(eMod::e÷¼÷Ã¹Ö, "÷¼÷Ã¹Ö");
	insert(0x7D0A4C59, 0xE358B4CA, 0xFB588E74);
	insert(0x30D01B42, 0x30D01B42, 0x4A3D871E, 0x1F34766A, 0x2EC6DDFB, 0xD438D76C);
	insert(89, 7, 7, 7, 7, 4);
	insert(0x1CCF29E1, 0x780D4A9C, 0x15CD81CA, 0x780D4A9C, 0xB3680C5C, 0x9364D8B3, 0x9364D8B3, 0xC2E23DBB, 0x9CC5A01C, 0x8B36F832, 0x7D2932FA, 0x1E9F18B9);
	init(eMod::eÑòÍ·¹Ö, "ÑòÍ·¹Ö");
	insert(0xB6D11E31, 0xCD722FCC, 0xA3D8CF41);
	insert(0x95FC915C, 0x95FC915C, 0x463A9D7C, 0x46296C68, 0x9E9EF723, 0x1312C9DC);
	insert(116, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x00001011, 0x8EE3FB9A, 0x1F263139, 0x8EE3FB9A, 0xA5797713, 0xE8104475, 0xE8104475, 0x833BB968, 0xD463B910, 0xE4042BBF, 0x7098C324, 0xA356F086);
	insert(0x00000000, 0x6E2E511A, 0xDC42DDF1, 0x6E2E511A, 0x664C13EA, 0x3A707D5C, 0x3A707D5C, 0xF6708D29, 0x9CBDEC33, 0x37521F80, 0xFE13F049, 0xC2DD7E0D);
	init(eMod::e¸òó¡¾«, "¸òó¡¾«");
	insert(0xEA73096F, 0xFF46A6F0, 0xABB5D563);
	insert(0x4C165A31, 0x4C165A31, 0x23E23AA1, 0x176FC8F3, 0x5D984EEC, 0x55595EDF);
	insert(50, 4, 4, 4, 4, 4);
	insert(0x5188D3B1, 0xDF976C1E, 0x81D749BE, 0xDF976C1E, 0x46014800, 0x42D2F569, 0x42D2F569, 0x23C8A844, 0x2A6693A5, 0xBFC9CB38, 0x0A308336, 0xC738CE07);
	init(eMod::eÀÏ»¢, "ÀÏ»¢");
	insert(0xABF4C334, 0x06B92734, 0x2BBE6961);
	insert(0x79D4BAA1, 0x79D4BAA1, 0x3E9FC323, 0x48B2F4AF, 0x65FB00E1, 0x26E14A56);
	insert(84, 4, 4, 4, 4, 4);
	insert(0x00001013, 0x21CE1B76, 0x8D53D7DD, 0x21CE1B76, 0x00D5D25E, 0x129FA3B0, 0x129FA3B0, 0x24DA5D75, 0x9A17F3E3, 0x76E60111, 0x8FDAD586, 0x631A8D70);
	init(eMod::eºÚÐÜ, "ºÚÐÜ");
	insert(0x391491B5, 0x716CAC43, 0x6F826A9A);
	insert(0xFDDF821C, 0xFDDF821C, 0xA83E671A, 0xB7C8C112, 0xD6C27F0F, 0x1D412B66);
	insert(44, 4, 4, 4, 4, 4);
	insert(0x00001014, 0x3CEC1591, 0x58AA587E, 0x3CEC1591, 0x3A6A8611, 0x155EB9F4, 0x155EB9F4, 0x065141A6, 0x65B88023, 0xD70C8074, 0xD5760E7A, 0xB4A71E6F);
	init(eMod::e»¨Ñý, "»¨Ñý");
	insert(0x8B6165CA, 0x866ABD8C, 0xC9829481);
	insert(0xBB5CDCB8, 0xBB5CDCB8, 0x6F4BEF8A, 0xB12ACE46, 0x9CFB4DFA, 0xB55A93DA);
	insert(60, 4, 4, 4, 4, 4);
	insert(0x04919945, 0xDE984023, 0x09C07E77, 0xDE984023, 0xF3B3EB13, 0x82F8B86A, 0x82F8B86A, 0x9733022E, 0x539ED20F, 0x0C34D10D, 0x363E98F7, 0x83EFA1C7);
	init(eMod::eÅ£Ñý, "Å£Ñý");
	insert(0xC12CEA44, 0x0A969C5A, 0xF5108507);
	insert(0x9D320962, 0x9D320962, 0x37233806, 0x7484E6BC, 0x02E2463B, 0xBF7D399A);
	insert(130, 9, 9, 9, 9, 4);
	insert(0x557EBB0E, 0xF58E06E8, 0x5274F324, 0xF58E06E8, 0x0CBE58B2, 0x7FBB3BAC, 0x7FBB3BAC, 0xB3ED5B24, 0x1CD638BF, 0x51A98BB9, 0x5C0510BA, 0x1BA51C92);
	init(eMod::eÐ¡ÁúÅ®, "Ð¡ÁúÅ®");
	insert(0x3C45F1BC, 0x4CE7BFFF, 0x3AE8E649);
	insert(0x2F14A4D8, 0x2F14A4D8, 0xB5BEDC46, 0x40DD0B8F, 0xD3705824, 0x5EDD780A);
	insert(100, 5, 5, 5, 5, 4);
	insert(0x00001017, 0x6821177C, 0x993C5C2C, 0x6821177C, 0x509DC995, 0xA82A5097, 0xA82A5097, 0xF704761A, 0x36D24BDA, 0x89D04FDB, 0x06F06887, 0x1ACF94DF);
	init(eMod::eÒ°¹í, "Ò°¹í");
	insert(0x6F35B36B, 0x62663668, 0x5F37AE22);
	insert(0x4055E59F, 0x4055E59F, 0x250B0D6A, 0xDF8B4002, 0xEEC9978B, 0x77A49BEF);
	insert(90, 5, 5, 5, 5, 4);
	insert(0xF1715BBE, 0xD117595B, 0x6579BFB5, 0xD117595B, 0x57A214CF, 0xC1B24BAC, 0xC1B24BAC, 0x5DF30CB8, 0x8754CB1D, 0x2A479CCC, 0xED88294F, 0x2DE7F9C4);
	init(eMod::eÀÇ, "ÀÇ");
	insert(0x6242A2EC, 0x3C920EEA, 0x6EA6C37F);
	insert(0xC5A7004A, 0xC5A7004A, 0xBAC4BDED, 0xE50E1812, 0x1C554554, 0xA16A8716);
	insert(80, 4, 4, 4, 4, 4);
	insert(0x27DE564B, 0xA94BB647, 0xCB14A5E2, 0xA94BB647, 0x918799AC, 0xAE415B39, 0xAE415B39, 0xD1C83AD0, 0x64537853, 0x2C78498A, 0xF6739CAE, 0x757CF83D);
	init(eMod::eÏº±ø, "Ïº±ø");
	insert(0xDC7C4250, 0xFF844C07, 0xA309B1F5);
	insert(0x21760FD3, 0x21760FD3, 0x5EA0E3BD, 0xD8383940, 0x636F0879, 0x4B365C66);
	insert(60, 7, 7, 7, 7, 4);
	insert(0xE65A0536, 0xDB68BB03, 0x2A203B1F, 0xDB68BB03, 0x9659E556, 0x1F28A466, 0x1F28A466, 0x319A8AE7, 0x7EA8FA68, 0x6926B8F8, 0x496FBB1E, 0x4A87F03B);
	init(eMod::eÐ·½«, "Ð·½«");
	insert(0x24D3F0A1, 0x4970522D, 0xC15BCAD3);
	insert(0x1CE391E5, 0x1CE391E5, 0x4E645E12, 0xA3CAC91A, 0x4F09B147, 0xAA889174);
	insert(110, 5, 5, 5, 5, 4);
	insert(0xD8F30F4F, 0x60888D2F, 0x3E952AAA, 0x60888D2F, 0x81405885, 0x78846A4D, 0x78846A4D, 0xF42D8D95, 0x94A5917C, 0xFFD5F67A, 0xF296010A, 0x5637A867);
	init(eMod::e¹êØ©Ïà, "¹êØ©Ïà");
	insert(0xEC1CEB45, 0xAA3785D1, 0x935EEC21);
	insert(0x9DBA0780, 0x9DBA0780, 0xA00A4B9C, 0xF206A9FF, 0xD06FC13E, 0x17288A4D);
	insert(99, 6, 6, 6, 6, 4);
	insert(0x71713126, 0x51C20B00, 0x53BB423C, 0x51C20B00, 0x9424825C, 0xACBDB9E5, 0xACBDB9E5, 0xD3B754A3, 0x6DCF1F37, 0x19953EFC, 0x433AD572, 0xF9050B96);
	init(eMod::eÍÃ×Ó¹Ö, "ÍÃ×Ó¹Ö");
	insert(0x3A19399F, 0xC9B56A98, 0x2F144964);
	insert(0x89398A2B, 0x89398A2B, 0x97DD0A4F, 0x76216B7B, 0x00BC041B, 0xB7084C08);
	insert(35, 10, 10, 10, 10, 4);
	insert(0x93BC42AE, 0x6EEFA438, 0x46242998, 0x6EEFA438, 0xEE01BAB5, 0x441588C8, 0x441588C8, 0xCF321F12, 0xED788B3D, 0xFC527CFF, 0x8053E23C, 0x129D50D3);
	init(eMod::eÖ©Öë¾«, "Ö©Öë¾«");
	insert(0x0E91A957, 0xE67F149E, 0xE148FC17);
	insert(0x607AB12C, 0x607AB12C, 0x3C8B61C2, 0x3779278C, 0xB7C4F37E, 0x18438DD8);
	insert(75, 5, 5, 5, 5, 4);
	insert(0x6764A282, 0x74606705, 0x1D855A0D, 0x74606705, 0x9C8327C0, 0x1B7B7194, 0x1B7B7194, 0x32201898, 0x86E1FD99, 0x295D6DC9, 0xB6E6CA75, 0x3ABB3170);
	init(eMod::eºÚÐÜ¾«, "ºÚÐÜ¾«");
	insert(0x57BDB8F9, 0x79CEA1EA, 0x3DAAEC8C);
	insert(0xEDC3AC88, 0xEDC3AC88, 0xFD0A88B9, 0x3153B22B, 0xBD2A5A47, 0x68DCE11E);
	insert(85, 6, 6, 6, 6, 4);
	insert(0x1AE6CFEC, 0x578A6F8A, 0x91E7D789, 0x578A6F8A, 0xD0E587C7, 0x32B2BAE6, 0x32B2BAE6, 0x996F50B4, 0x18A8B240, 0xFB40C501, 0xFADE22F3, 0xA6907BF4);
	init(eMod::e½©Ê¬, "½©Ê¬");
	insert(0xE079A778, 0xF481072B, 0x12F1D6D1);
	insert(0x012C6699, 0x012C6699, 0xB149D557, 0x82FCE63C, 0xF2A1F298, 0x1735D3C7);
	insert(60, 4, 4, 4, 4, 4);
	insert(0x82BEA88C, 0x76A5ABFD, 0x87D5CA4D, 0x76A5ABFD, 0x28E149C0, 0xF9321464, 0xF9321464, 0x2A8EE07C, 0x2FB5322A, 0x178626C1, 0x5723F6F9, 0x2E5A460F);
	init(eMod::eÅ£Í·, "Å£Í·");
	insert(0x6DB89271, 0xCDD130C4, 0x1777351E);
	insert(0xC7A48221, 0xC7A48221, 0x7926F7EE, 0xAE63759E, 0xBBC4A1FE, 0xC9108779);
	insert(72, 8, 8, 8, 8, 4);
	insert({ 0 }, { 0, 1 });
	insert(0xE5188970, 0xE6E7DE44, 0x7F2ABF21, 0xE6E7DE44, 0xCB5FE03A, 0x75D7E3ED, 0x75D7E3ED, 0x3C4FE166, 0x052D9E0F, 0xA85E8726, 0x4CBBEA5A, 0x04FE166F);
	insert(0x00000000, 0xEF5E5215, 0xAFF57351, 0xEF5E5215, 0x602DCB23, 0x7D011E42, 0x7D011E42, 0x239B8456, 0x8B8273AD, 0xF5F422A2, 0x2233295C, 0xFB57A089);
	init(eMod::eÂíÃæ, "ÂíÃæ");
	insert(0x37AB66AF, 0xA5C7D24B, 0xA8737330);
	insert(0x70896CEB, 0x70896CEB, 0xF32FAB3A, 0x2E89E4D6, 0x2190FDCA, 0x205F1F2C);
	insert(86, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0, 1 });
	insert(0xC96F6BA8, 0xB350A5B4, 0x99AC3A10, 0xB350A5B4, 0xA9A520DF, 0x17A0338A, 0x17A0338A, 0xC1717E79, 0xFB352928, 0xD55B8806, 0xA7C43DF4, 0x2FAB5EF8);
	insert(0x00000000, 0x1FBDD393, 0x9F57D026, 0x1FBDD393, 0x81604323, 0x6DEB11CE, 0x6DEB11CE, 0x2B672E76, 0x6B9F50F6, 0x6621AC39, 0x50B2FE99, 0x02DA2B1D);
	init(eMod::eÀ×ÄñÈË, "À×ÄñÈË");
	insert(0x24359F3E, 0xA7EE2B7B, 0x682F5D07);
	insert(0x889ADB49, 0xF3DC6441, 0x9412D9A5);
	insert(0xC0FED30C, 0xC0FED30C, 0x59F2433F, 0xE1069F55, 0xA6D109A7, 0xDAE4099B);
	insert(80, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001029, 0x398BFB4F, 0x1BD4E973, 0x398BFB4F, 0x36C3648C, 0x7F34308B, 0x7F34308B, 0xF8BFB2A0, 0x9C7493B4, 0x88F6B7E8, 0xEDA2F6A8, 0x7B496468);
	insert(0x00000000, 0xD2286C28, 0x0EEDC147, 0xD2286C28, 0xB0F41230, 0xF9CFFFED, 0xF9CFFFED, 0x149556A1, 0x229D72AE, 0xAFFA205D, 0x0738AAE2, 0xE717D6AC);
	insert(0x00001529, 0x20393E62, 0xD309B2D8, 0xE3FB3536, 0x9134A8D8, 0x6C7DE28C, 0xA4462E00, 0x9F6B6DCE, 0xA8E9E56A, 0x5B455BAB, 0x3AA0420A, 0x1281D163);
	insert(0x00000000, 0x72EFFC7B, 0xBAD79452, 0x62232EF8, 0x93264A89, 0xE02ADFEE, 0x8F9C7339, 0xCF3811EE, 0xC3CCD0A6, 0x771AE37F, 0x51836F3F, 0x63294502);
	insert(0x00000000, 0x593879B6, 0x0B696995, 0x7E0ABF25, 0xFD61A5D5, 0x3282FAD7, 0x28F477A3, 0x7A02444F, 0x78F5F786, 0x1D9FFB3A, 0x82C48D61, 0xDB4A7B9C);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7869DD13, 0x840082DF, 0x66FB57C3, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eºûµûÏÉ×Ó, "ºûµûÏÉ×Ó");
	insert(0x63FB33ED, 0xF3307792, 0x99F2D6C7);
	insert(0x34E3FA38, 0xAE5074AB, 0x74DE4984);
	insert(0x4C0C508D, 0x4C0C508D, 0xE0208A70, 0x5D78E81A, 0xF51C4BBD, 0xEF6BDFD2);
	insert(112, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x00001030, 0x316273BC, 0xD72C8A4B, 0x316273BC, 0x5F5F1594, 0xE432C378, 0xE432C378, 0xB09F33ED, 0xD5D3DBA9, 0x3A071AEE, 0xE70BF9D2, 0x9ED8185E);
	insert(0x00000000, 0x40267F4C, 0xA07F8533, 0x763FC6A0, 0xC3FF9F5A, 0x1E9603F8, 0x1EA96EB3, 0x61AC2D26, 0xB092EA64, 0x067A5102, 0x924D044A, 0x14FD2FF7);
	insert(0x00001530, 0xC2706484, 0x3B94DD75, 0x2650E888, 0x0CE94E26, 0x9CEC2F11, 0x6C6014D6, 0xC02B82E7, 0x0D213513, 0x73D1482D, 0x8638B519, 0x50F0456B);
	insert(0x00000000, 0xB1248728, 0x42EAEA18, 0xE8C34CF6, 0x4E74E508, 0x756C092F, 0x2960E331, 0xB800C204, 0x40042FC0, 0xA83F8BE3, 0xB7D63C57, 0x9D510116);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7D9E57FC, 0x00130A0F, 0xBB5DDE0E, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¹Å´úÈðÊÞ, "¹Å´úÈðÊÞ");
	insert(0xA50A1D29, 0x05E04219, 0xDBE940E7);
	insert(0x07470E5F, 0x169DF68B, 0x7AB4492A);
	insert(0xAB099CAF, 0xAB099CAF, 0xC310E17D, 0x2626293E, 0x82A962F2, 0x8D63F17B);
	insert(100, 8, 8, 8, 8, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x9042F2BD, 0xD9C108BF, 0x8BF68D5D, 0xD9C108BF, 0x4790ACDD, 0x9B35CE8D, 0x9B35CE8D, 0xC944B9F3, 0xE383DE59, 0x5CF6B96E, 0x8C952FFD, 0xEF6DC8B6);
	insert(0x00000000, 0x1F671C28, 0xAE550681, 0x1F671C28, 0x6BD99577, 0x3F236395, 0x3F236395, 0x79B54409, 0x5281057F, 0x6F641ACC, 0xDCE5D149, 0x329DB69D);
	insert(0x00001531, 0xB31DD3FE, 0xDA3BC474, 0x1798EA00, 0x2C2FA1CA, 0x7291F291, 0x1FE9B187, 0xC658307A, 0xB4613104, 0xCC7353FA, 0xE04C80B3, 0xD6A29350);
	insert(0x00000000, 0xD4A3D645, 0x7F86B00D, 0xC9B014AF, 0x3DD12FDA, 0xBB273790, 0x81759ED1, 0xB2F424B6, 0xCC6FFADD, 0xAC661546, 0xB19A5E7A, 0xC8C8D162);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xECA68574, 0x88A585B9, 0xF4DE90D7, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e°×ÐÜ, "°×ÐÜ");
	insert(0xA03A62ED, 0x49DCC4AE, 0xA8AE532E);
	insert(0xB47F2149, 0xDDB1C111, 0x14FA4D9B);
	insert(0xDD7BCED0, 0xDD7BCED0, 0x6884C4F3, 0x743F5F41, 0x852BE2F3, 0x7FA3877B);
	insert(50, 4, 4, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x0AEF634B, 0x24F343D2, 0x41D12500, 0x24F343D2, 0x1A43CBEE, 0x881F5EB3, 0x881F5EB3, 0x3E1A5B78, 0x1AEAF718, 0xE08BBB1A, 0x6429E0B5, 0x71786293);
	insert(0x00000000, 0x308185DC, 0xC5220058, 0x308185DC, 0x34814E10, 0x24BEFE0C, 0x24BEFE0C, 0xE950CCDE, 0xE69E56FC, 0x7BED95E0, 0x86793301, 0x6DD97782);
	insert(0x00001532, 0xD7BF0EE0, 0x2F767DF8, 0x456ED9AE, 0xC2E91BB6, 0x36221458, 0x8F754AB3, 0x69F0C9F3, 0x87074A6D, 0x67374C54, 0x9D440DE2, 0x87999917);
	insert(0x00000000, 0x3467E1FD, 0x32EAE52C, 0xBBA680CA, 0xA491FFD4, 0xE712AD2E, 0x41B3F4C0, 0x32A8AEB7, 0xA7103857, 0xD5B07CA4, 0xBC8D6645, 0x54A9B2A1);
	insert(0x00000000, 0xA5423925, 0x91AD81A4, 0x2EEA632F, 0x043DDF48, 0xDF7AC4D6, 0x16137F88, 0xEA437C36, 0x96524F4A, 0x4CBA461B, 0xCE8A12A8, 0xBD43CECA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x48DB4B22, 0x5EC0E760, 0xA8EE7F08, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eºÚÉ½ÀÏÑý, "ºÚÉ½ÀÏÑý");
	insert(0xC55C704D, 0xF447F3CB, 0xBEE87DE0);
	insert(0xD58C883C, 0x4F942965, 0x17979901);
	insert(0xFA86E964, 0xFA86E964, 0xE27C986E, 0x66FB1BD6, 0xBFF2077C, 0x9D295444);
	insert(113, 13, 13, 13, 13, 4);
	insert({ 0 }, { 0, 4 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x46083877, 0x759DB60F, 0x1679382A, 0x759DB60F, 0xA75F0C8E, 0x388A4093, 0x388A4093, 0x1E4B0077, 0x28365622, 0xD0C5FFC8, 0x5A9BF84E, 0x487E44A6);
	insert(0x00001533, 0xBF3AC969, 0x95FBDF17, 0xFA5075B4, 0x94258F07, 0x5DE2E1D7, 0x18B4A333, 0x20E38EFD, 0x3655BA0F, 0x6F9C7D69, 0xE5768F24, 0xDFD6A089);
	insert(0x00000000, 0x568B725F, 0xCB580FB4, 0xC7F4096B, 0x01E2F6F9, 0x14912994, 0x02D4F692, 0x62AED9B4, 0xD1F403A2, 0x1C2E6B9E, 0x334042CC, 0xA0CFA057);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x123E5270, 0x56493E7A, 0x7EEDB37D, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x266C5FE5, 0x5EBE3941, 0x266C5FE5, 0x00000000, 0xBDC9DB09, 0xBDC9DB09, 0x7DAC4B6A, 0x3A904439, 0xE88E7F50, 0x3887EEDE, 0x00000000);
	init(eMod::eÌì±ø, "Ìì±ø");
	insert(0xE3A356D4, 0xF7159B8A, 0xB836DAF9);
	insert(0xB56ECBA9, 0x338A1A07, 0xF14B1666);
	insert(0xE66A09D4, 0xE66A09D4, 0x8FB8105E, 0x98BDEC63, 0x7204C597, 0x15EE1250);
	insert(70, 8, 8, 8, 8, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001034, 0x2CC4FE10, 0x98071CDB, 0x2CC4FE10, 0xCB876EC4, 0xC5676415, 0xC5676415, 0x46AB1AA0, 0xB9448E01, 0x768E814C, 0xFF7C5F7C, 0xAF19411C);
	insert(0x00000000, 0xEEBB6DE7, 0xBFB98901, 0xEEBB6DE7, 0x0F9596C7, 0xD5ED0DF6, 0xD5ED0DF6, 0x89B38274, 0x5551FC0E, 0xD5DE240A, 0xA6DC5D44, 0x986CB277);
	insert(0x00001534, 0x93150846, 0x5F4DDF7F, 0x263409F7, 0xCF9C6012, 0xE8E36824, 0x35D94E14, 0x941C1119, 0x1F48EF9F, 0xCF984CBD, 0xAF1B4B61, 0xF348F490);
	insert(0x00000000, 0x76D984D5, 0xCA5278E8, 0xEBD9E26C, 0xFB0B8556, 0x16E3EA8E, 0x3A438D62, 0x2480FBE9, 0x7950EA94, 0x8A00FC84, 0x1E69C9C5, 0xE14247A2);
	insert(0x00000000, 0xF7A04CD7, 0xCAA3CD18, 0xDD00D038, 0xC87D7F43, 0xAD7A902A, 0x658DFAD7, 0xA51E6D05, 0xA6ED255E, 0x96FE55C2, 0x8728E103, 0x002FDFCA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7528DFD0, 0x763FEFE7, 0x1FBD9899, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÌì½«, "Ìì½«");
	insert(0x2B1FC562, 0x78F204D8, 0xF333F834);
	insert(0xFE5AED33, 0x1BA73176, 0x4C12C540);
	insert(0x25768A7E, 0x25768A7E, 0xD00A21C0, 0xFA65A447, 0x4A991AB9, 0x9243A8D6);
	insert(58, 4, 9, 4, 9, 4);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x15934BF7, 0x04C8C142, 0x2D8893D1, 0x04C8C142, 0x9395B542, 0xE513139F, 0xE513139F, 0xB70488BD, 0xC5C3FCC4, 0x884B84CA, 0x9648321B, 0x83DD6605);
	insert(0x00001535, 0x236C7E78, 0x7D069CD3, 0xB90ED478, 0x2F969199, 0xAF5E9D11, 0xD191238C, 0x38A3BA7A, 0xF8941B27, 0x666FA5FF, 0x7AFD84CB, 0x369154B8);
	insert(0x00000000, 0xE21D438D, 0x552EAF9A, 0xD23301B9, 0xE4EBC336, 0xB46C8172, 0x9B5875EE, 0xB45F1A21, 0x9E478081, 0xEE404F3B, 0xA04A8792, 0x7345E462);
	insert(0x00000000, 0x51C04FE9, 0x13302548, 0xBBCC16DF, 0xAD9C865A, 0x8EC9BD35, 0x355FC178, 0xCA0F2175, 0xA5CEB0A1, 0xBD1824C4, 0x9FDC474F, 0x81E5AAD5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBE65728F, 0xB2854590, 0x9B29E8FC, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eµØÓüÕ½Éñ, "µØÓüÕ½Éñ");
	insert(0x8CA33C58, 0x2C7C0D0E, 0xE65B948A);
	insert(0xDB8EDC6F, 0xAF801569, 0xB9FB91B0);
	insert(0x5D97C9C5, 0x5D97C9C5, 0x2C771689, 0xFB70519D, 0x71182F7C, 0x66001C2F);
	insert(117, 7, 7, 7, 7, 4);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x3CBCA9E9, 0x12807229, 0x7F8C00C3, 0x12807229, 0xA4FAC284, 0x3D5634A3, 0x3D5634A3, 0x1A6B6FFB, 0x8F487B17, 0x5B13FA1C, 0xDF5D2760, 0xDC53E015);
	insert(0x00001536, 0x6B19D682, 0x9F9298AB, 0x103A0FFA, 0x0A0351C4, 0xAF2C4C75, 0x72A69AC3, 0x958AC02C, 0xC4F27046, 0x28533A4E, 0x602C6BA1, 0x112726F1);
	insert(0x00000000, 0xC59FC250, 0x740B2EEC, 0x758FE6D8, 0xE3451268, 0x941FC7A4, 0x637D9C6F, 0xFBB4FD56, 0xB760E037, 0xCDD6507A, 0xE411D031, 0x22671C0F);
	insert(0x00000000, 0x736760B3, 0x5CDEF6F4, 0x24261D7F, 0xE70D6D3D, 0x17665192, 0xD3E28906, 0x32E859EF, 0xA7CACBB3, 0xA4188017, 0xC073FD07, 0xDC1B8BCD);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA91A54B2, 0x5E3D1399, 0x37697F1F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x03068882, 0x605FB01B, 0x03068882, 0x1F4402B0, 0x5AC50CEA, 0x5AC50CEA, 0xCCEDD5F8, 0x488F9433, 0x4489B84F, 0x1E9C38EE, 0x3610D67A);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7A8C772C, 0x7A8C772C, 0xDDBA60F9, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e·ç²®, "·ç²®");
	insert(0xC19E85CA, 0x2AE672A0, 0x382053A7);
	insert(0xA081F972, 0x1562D6BB, 0x0D747F00);
	insert(0x8EAE2CC2, 0x8EAE2CC2, 0x4BA9F4EB, 0xD96F85E5, 0x840E0DC7, 0x030B96AD);
	insert(50, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x0297434F, 0xF879501E, 0x788F12EB, 0xF879501E, 0xBBEDAA2D, 0x9383411F, 0x9383411F, 0x71146663, 0xB478D85B, 0x129ACE33, 0x972CDC33, 0xDE07832C);
	insert(0x00001537, 0x21E83685, 0x5D4A0DA2, 0xE6944AFD, 0x4975EB93, 0xAB730806, 0x1C3519F4, 0x421CDC1C, 0xDD0ABC12, 0xE91519F9, 0x0B4D5B60, 0x3CD25C40);
	insert(0x00000000, 0x100DC708, 0xF9E48C6F, 0x19F7D70C, 0xA773386B, 0x29B8E4D0, 0xC9B579C3, 0x579292FB, 0x6B01FE15, 0x314A86A4, 0x08593D0B, 0x354E676B);
	insert(0x00000000, 0x7461360D, 0xE277F8F4, 0xBAEAA6D1, 0xA891F58F, 0x83F444A2, 0x61E56853, 0xF32E8EAD, 0xB4986B9B, 0x1691550D, 0x6508E3BC, 0x40B9F376);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x13E62D29, 0xEA7E19AD, 0x0FE6FD88, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e·ï»Ë, "·ï»Ë");
	insert(0xA9E3213B, 0x23870ED4, 0xCE1D8427);
	insert(0xC2C70463, 0x5F75075C, 0x8217B8DC);
	insert(0xF929E848, 0xF929E848, 0xAC79C045, 0x85A29FAA, 0x339C7F08, 0x2FD73CF5);
	insert(92, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x1F769E85, 0x2DD87623, 0xA9027E94, 0x2DD87623, 0x05E61447, 0x6B914BF3, 0x6B914BF3, 0x0B5E6653, 0x22883068, 0xA3DA2B3C, 0x0DDF2430, 0xBA8F0528);
	insert(0x00000000, 0xBF90783B, 0xCB7B1B20, 0xBF90783B, 0xCF8F5168, 0x8A1F82A6, 0x8A1F82A6, 0x68260D8D, 0xB744D6BA, 0x88D490D8, 0xD87111EC, 0xF015A44A);
	insert(0x00001538, 0x8AE90761, 0xDA528ED1, 0x0CC023FE, 0xE441F928, 0xB9144194, 0x531998EA, 0x441E6903, 0xBED32A52, 0x0CF889CA, 0x2FC72F35, 0x8F6C98E0);
	insert(0x00000000, 0xF0F800BF, 0x6B3050DA, 0x6A19B804, 0xF55DAC54, 0x64A74BBD, 0x2B004490, 0xB282F7D0, 0xB9DFCCCA, 0xDF71ECA7, 0x6FEE0CDE, 0x2A0AEC73);
	insert(0x00000000, 0x519D5917, 0xFE804156, 0x7D91B644, 0xAF5D7B92, 0xFC9CEFAA, 0xB2EAFE77, 0xC746F784, 0x08FD84B8, 0xC90E04F1, 0x005AF99F, 0x1C4BF4DB);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x84406F3C, 0xA0C0A40E, 0x4F4A5C60, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eòÔÁú, "òÔÁú");
	insert(0xD11D19BB, 0xF40767A3, 0xE092C49C);
	insert(0x3DE0EC5F, 0x01B5CA10, 0x6562E4B2);
	insert(0x48E2E9B6, 0x48E2E9B6, 0xB110C206, 0x74CAE693, 0x377E9665, 0xC67244CD);
	insert(77, 4, 4, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0xFDA93552, 0x034598C3, 0x1C37C867, 0x034598C3, 0xB157E173, 0xC01BC830, 0xC01BC830, 0x110072C0, 0x213AE16A, 0x5FE3F3C2, 0x01846532, 0x9401351B);
	insert(0x00000000, 0xA695F1EA, 0x87DAD062, 0xA695F1EA, 0x60E2FE6A, 0xACD1EEF4, 0xACD1EEF4, 0x48BDE373, 0xBE9F2A37, 0x1948F4DF, 0x5D452A49, 0x45467A84);
	insert(0x00001539, 0xA3DA0874, 0xC3D151FF, 0x48915E95, 0x768EC51E, 0xF823CB5B, 0xA815AA97, 0x77FAB65D, 0x644C7AD6, 0x48971844, 0x79423CC9, 0xA800B980);
	insert(0x00000000, 0x61192DC4, 0x4A8D4D2C, 0x20E5B4BF, 0x8057EF18, 0x769F42A3, 0x3541248B, 0xD3CF4F30, 0xD3F721DD, 0x2C3E37A2, 0xA447C9C9, 0x59F09DEB);
	insert(0x00000000, 0x50C1D1B8, 0x85E8E3E8, 0xA552B800, 0x32361ABC, 0xFAC1004A, 0x65554FC5, 0xB923763C, 0xBAE033EB, 0x073143DE, 0xFD6B9032, 0x8F1A7E57);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x30C6F4C7, 0x4D803032, 0x15900F1C, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÓêÊ¦, "ÓêÊ¦");
	insert(0x8326B8FA, 0x01265B89, 0x5BAB5E62);
	insert(0x970D69AB, 0x27D380F8, 0x67E3B916);
	insert(0xDD119292, 0xDD119292, 0x56FDB829, 0x0071B681, 0x683A60EB, 0xD504FCDD);
	insert(88, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x00001040, 0x59B3FCAD, 0x0B510184, 0x59B3FCAD, 0x5D111514, 0x408DE185, 0x408DE185, 0xA9847201, 0x113B69E8, 0xBC1BD809, 0xE8142660, 0xB8EE866B);
	insert(0x00001540, 0x80607671, 0x7D912078, 0x18EF6634, 0x670544A4, 0x7E79FDC4, 0xADCAF1D3, 0xFC49420C, 0xC3C6CB3F, 0xC1476207, 0xBF6028A3, 0x989F5AB2);
	insert(0x00000000, 0x9670C666, 0x2295A2DC, 0x2DB97952, 0xD4758CD0, 0x0A771A69, 0x879B0739, 0x530CFEA0, 0x997CB8C1, 0x565988A0, 0x7FC8DBDB, 0x2295A2DC);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x95C26E4F, 0xE212E9C3, 0xA45D4B32, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÈçÒâÏÉ×Ó, "ÈçÒâÏÉ×Ó");
	insert(0xF5A6C5EE, 0x1D5EF06C, 0xCDE92089);
	insert(0x5A7B589D, 0x61631DC2, 0x6FC80832);
	insert(0xB1C8C52E, 0xB1C8C52E, 0x9B8508DA, 0x15B85A36, 0xF9538E32, 0xEFB6D5D0);
	insert(50, 3, 3, 3, 3, 4);
	insert({ 0 }, { 0, 4 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x5D0164EE, 0xA2C8444D, 0x85BD39BA, 0xA2C8444D, 0x9300895F, 0xDD102EC4, 0xDD102EC4, 0x07FF0EF2, 0xE436F2B8, 0x27F8E12A, 0x04EB45F5, 0x1988B88C);
	insert(0x00001541, 0x2F00B37A, 0xEB6AEEF4, 0xF80DD9AD, 0x4198CF0C, 0x01197058, 0x81042AE4, 0x504C8CCA, 0xF8B7009E, 0x28D1CE66, 0x132F1FB6, 0x647F99DD);
	insert(0x00000000, 0xC12C81CA, 0x580794D1, 0xB4323647, 0x51A5BF1A, 0xF4B861D9, 0x145BA64B, 0x17537C8C, 0x9237965D, 0x4EA4E8E0, 0x32CCB8F3, 0x06123BD5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x2BF4CCE0, 0x65F5A965, 0xB6EED6FA, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x03E06944, 0xD9195BCE, 0x03E06944, 0xF84BA110, 0x7E9C3C50, 0x7E9C3C50, 0xC4FFF856, 0xDC72D73F, 0xA0D951B1, 0x2FBC9E75, 0x9F428467);
	init(eMod::eÜ½ÈØÏÉ×Ó, "Ü½ÈØÏÉ×Ó");
	insert(0xF5AF49BD, 0xA686FF51, 0x9F3CAA62);
	insert(0x05629025, 0xE02D2612, 0xD8D7F589);
	insert(0x30C812A6, 0x30C812A6, 0x65F4B9CC, 0xFAF37D2B, 0xE5B6C674, 0xEC120158);
	insert(100, 2, 2, 2, 2, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x3FD4AE5E, 0x5DAD549B, 0x2FEF7615, 0x5DAD549B, 0xB4028C57, 0x3A696908, 0x3A696908, 0x8260E356, 0xDA0F8408, 0x14EFDFC9, 0x0C5137A5, 0x92425E67);
	insert(0x00000000, 0xB43F2577, 0xEC795EAC, 0xB43F2577, 0x5B2A2A3C, 0xE3743FF6, 0xE3743FF6, 0x666E547D, 0x886383EE, 0x60EF4DD7, 0xB9AE1DBE, 0xCCDA3718);
	insert(0x00001542, 0x2206E612, 0xF96AFF61, 0x5A4AB7D0, 0x96BC94AC, 0x71C7FAC0, 0x080F22AE, 0xA0B65C4E, 0x5D9AB3E1, 0x4F65A668, 0x91C59A1F, 0x00EE18C8);
	insert(0x00000000, 0x88039B5A, 0xD8E75FB4, 0xFC93FE17, 0xB1ABD7F3, 0xE7527DDE, 0x4B0B38A2, 0xCB6D7FCA, 0xFC2C0A43, 0xF46A1607, 0xB66F315B, 0x84C8C223);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x4FF04ACC, 0x85B7D239, 0x42052A70, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÑ²ÓÎÌìÉñ, "Ñ²ÓÎÌìÉñ");
	insert(0xEDB096B7, 0x7D314BCB, 0x79D8BFB0);
	insert(0x2287BA3A, 0x3D23BB40, 0xD5CCD377);
	insert(0x88DFAFEA, 0x88DFAFEA, 0x2C37140C, 0xFBFECF7B, 0x67085B43, 0x22C4EC59);
	insert(90, 4, 4, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x366AE543, 0xE3E15EAC, 0xA3545B8E, 0xE3E15EAC, 0xAC61B31B, 0x1E2DDE33, 0x1E2DDE33, 0xB2D419B5, 0xA8FF07E2, 0x678383BC, 0xF781FFDE, 0xF8B8CD2B);
	insert(0x00000000, 0x0F12BC80, 0xEEAC554F, 0x0F12BC80, 0x41890659, 0xB62B5D4D, 0xB62B5D4D, 0xE516D9F4, 0xC6A9D45D, 0x25F95B6C, 0x4571340F, 0xB525E60E);
	insert(0x00001543, 0x533DE9F7, 0xFBA6389C, 0x0F27607E, 0x447F4F60, 0xD019B465, 0x61626CF7, 0xD8817986, 0xB40DB275, 0x96C9C11E, 0x38DDF499, 0x913D7AE5);
	insert(0x00000000, 0x5AC4DDCF, 0xFAEE3F9D, 0xF128405E, 0xFD8AE7A0, 0x2DBDA2A9, 0x756D402A, 0x17F2991C, 0x2499EE14, 0x7D645673, 0xAFE6EDA0, 0xC8C13E26);
	insert(0x00000000, 0xD462D477, 0xD2FC5207, 0x255F30FE, 0xDF743588, 0x2BF7C971, 0x7E263138, 0x861E1C4A, 0xDEB3D40A, 0xDF1D6AB3, 0x89FC46EE, 0x7465C9DE);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF1AEBDCD, 0x95C4BD51, 0xADE34BBC, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐÇÁéÏÉ×Ó, "ÐÇÁéÏÉ×Ó");
	insert(0x2D07ACA5, 0xB4B2CE74, 0x79053E58);
	insert(0x0D637B35, 0xE0798D11, 0x6A0687F4);
	insert(0x4B9FC5B5, 0x4B9FC5B5, 0xA8F05421, 0xF7B04010, 0xE0753261, 0x5BD1C3CD);
	insert(90, 9, 9, 9, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001044, 0x265B5E90, 0x58B7A942, 0x265B5E90, 0x38B89F32, 0x9CCED9F3, 0x9CCED9F3, 0xF7545337, 0x3E4A6073, 0x420A8983, 0xD949630E, 0xC3B4C09E);
	insert(0x00000000, 0x39ADB536, 0x2C5DBF70, 0x39ADB536, 0x067611C4, 0x352C795F, 0x352C795F, 0x9F443300, 0x4EEF5E37, 0x0A0DD41A, 0x8F7A3B54, 0x29D8C951);
	insert(0x00001544, 0x9DB4E74E, 0xEBB561D8, 0x75E24AAD, 0x243B09A1, 0xB2A69A57, 0xE160F4FD, 0xCD464FE7, 0x68B373FD, 0x2D167267, 0xC50D683C, 0xB4302144);
	insert(0x00000000, 0x980253AF, 0x66501D93, 0x4582CE4D, 0x3916EE0A, 0xA7D22776, 0x37E3E3E1, 0x2F25B66C, 0x9E8F265D, 0x8BAC6040, 0xE10EA214, 0xCE9ED092);
	insert(0x00000000, 0xC21FB81B, 0x9723D7E4, 0xC847F079, 0x9DA5A2C7, 0x8814CBF4, 0x6575B5A0, 0xE70CC6CB, 0xC5187EB9, 0xADA8FF44, 0x1077BD08, 0x54AA0696);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9F8C999C, 0x46735EF7, 0xEE51C201, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÓÄÁé, "ÓÄÁé");
	insert(0x2B7B7347, 0x04E257A3, 0xB9FAFFE0);
	insert(0x49C7656D, 0x99C9B06E, 0x58E84AA3);
	insert(0x72A5714A, 0x72A5714A, 0x7F7FE12F, 0x4BB63A82, 0xABAB2922, 0x9B9E49CB);
	insert(66, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x9042F2BD, 0xB3084DB8, 0x3935CD44, 0xB3084DB8, 0x1D63E822, 0x035A0A13, 0xB0202D02, 0xBDA45060, 0x59925669, 0x61FC976E, 0xF959E09C, 0x677F12B6);
	insert(0x00000000, 0x0D3666CE, 0x3B9976E1, 0x0D3666CE, 0xAFF30D5A, 0x0E840F22, 0xE216ABA8, 0xD77B2B80, 0x383B59A9, 0x60668D07, 0xF233781D, 0xFA65730B);
	insert(0x00001545, 0x5990A7C9, 0xFC648705, 0x7F878E9F, 0x3D0C212C, 0x4C3A025E, 0xEC458690, 0x2039517D, 0x46F3A9D8, 0x7406D186, 0x5DD590DF, 0x3C7CABBD);
	insert(0x00000000, 0x675A3EB8, 0xF4EBF7BC, 0x86E57BA3, 0x794960BC, 0xD23214A7, 0xE517E5FA, 0xF8CA728E, 0x4821CD36, 0x08880976, 0xC6683731, 0x61858561);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xCE0B75AF, 0x40E93AA4, 0x704E7698, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¹í½«, "¹í½«");
	insert(0xE3DB5D8A, 0x4647B146, 0xE84A1BD5);
	insert(0x7166C4B0, 0x9B5056BC, 0x7EC96CE3);
	insert(0x257B1BBA, 0x7367F92D, 0xD83F2F50, 0x2E4AD8BD, 0xABAB2922, 0x5466C5FF);
	insert(90, 12, 12, 12, 12, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001046, 0xBEAED63A, 0x12D27416, 0xBEAED63A, 0x41669A49, 0x097183AC, 0x2E013607, 0xA62F51EA, 0x3C35328F, 0x3E11F5D1, 0x4D08C336, 0xCA724CAE);
	insert(0x00000000, 0xDA85C9A1, 0x7C38BBAE, 0xDA85C9A1, 0xDE9481C1, 0x475C0DFD, 0x24B8DE46, 0x08D5A386, 0x18F49463, 0xC5F4E924, 0x96CB1D39, 0x1B01CEC8);
	insert(0x00001546, 0x275E43D0, 0xCB75BA5A, 0x6ED55801, 0xBD7075E0, 0xC19D1009, 0xE16C41AF, 0xFAB026B1, 0xE7E5E555, 0x8609FB4C, 0x890EFD9F, 0xE82EED34);
	insert(0x00000000, 0x4AA66287, 0xF685DFAD, 0x41225AA1, 0x0A7AC5E6, 0x90EA6D01, 0xCAF17D5B, 0xA88CA530, 0x09194066, 0x3E1168D4, 0x16C2B307, 0x3567D770);
	insert(0x00000000, 0x01BC27CA, 0x7C4018B6, 0xB0F76191, 0xE7F3C5A3, 0x6F4CDCDA, 0x600B8E33, 0x819CF008, 0xF590C5D7, 0x4C897EEA, 0xEFA9096A, 0x1D33D134);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA7228FD9, 0x9B8D3851, 0x1A1BC07F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÎüÑª¹í, "ÎüÑª¹í");
	insert(0x523C25F2, 0xE276EEEE, 0x4847A23B);
	insert(0x104B7ED0, 0x7A6D1196, 0x8F07C67F);
	insert(0x8877C021, 0x5AAB57AF, 0xB776A1D2, 0x0A92893B, 0xEE46BA84, 0x271EA0C7);
	insert(50, 4, 4, 6, 6, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001047, 0xA9B78CF6, 0x1708205C, 0xA9B78CF6, 0xA32D6CF3, 0x57EDEA8E, 0xD58C431F, 0x3C9B8403, 0x249719A0, 0x9E9C0CEA, 0xBFD770E7, 0xA3C61281);
	insert(0x00000000, 0xDE22B5AC, 0x077CC044, 0xDE22B5AC, 0x176BFBC0, 0xD6031BB0, 0xBD096363, 0x00000000, 0x00000000, 0xD7BC9A02, 0x1E92C127, 0xC467B6CB);
	insert(0x00001547, 0xEF26063C, 0x573B321A, 0xCE0F146C, 0xCE5EB1D9, 0x267C5264, 0x6A6AA6B2, 0xAB400A93, 0xFA455F90, 0x73C8493D, 0xAA1D0068, 0xAD7C34B3);
	insert(0x00000000, 0xD7516360, 0xB7F88174, 0x204E5379, 0x5E368AFF, 0x1E89D22D, 0xA030CBD3, 0xBC2F170A, 0x255C1645, 0xD7BDA0A1, 0xE6DB5633, 0xB3FE5C26);
	insert(0x00000000, 0xE7751553, 0x9AF63F59, 0xED36DA6F, 0x532B44D3, 0xD7AE33AA, 0x9011564E, 0x5305EC86, 0x5E04729B, 0x0641BB9C, 0x9F746920, 0x6CEA2B3E);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x2285828C, 0xBFC6C6E2, 0xE5305297, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¾»Æ¿Å®æ´, "¾»Æ¿Å®æ´");
	insert(0xE2FB23F9, 0xF371BECC, 0xE0038C5B);
	insert(0x575F5122, 0x4DAF7A6B, 0x4F8AF53E);
	insert(0xC69E37E7, 0xC69E37E7, 0xCD056677, 0xC72BDF69, 0xABAB2922, 0x467012A9);
	insert(39, 8, 8, 8, 8, 4);
	insert({ 0 }, { 0, 4 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x73386347, 0x3F6E1130, 0x1EF025D1, 0x3F6E1130, 0xC7F51159, 0xEC6F79F4, 0xFE35FA3C, 0x799965C4, 0x7B9277F9, 0x54C4481A, 0x05AE6D51, 0x3DAC290B);
	insert(0x00001548, 0x1DF3EFF8, 0xAF851642, 0x1B5425E6, 0xE6E208F4, 0x1EF2E640, 0x677663D1, 0x2856C7A1, 0xCD97E37C, 0x658ECFB8, 0xFECD9387, 0x9B4B998E);
	insert(0x00000000, 0x72755EC0, 0x61723C50, 0x79F863A9, 0x66DFEB44, 0xDE802E9E, 0xD40473AA, 0x91616888, 0xA4304300, 0xE70A1E04, 0xAC1F8F8C, 0xBC439551);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x41C451D9, 0x6FACB0B1, 0xDD92CFED, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x340AE6C3, 0x6DF7AE9E, 0x340AE6C3, 0x1A931B54, 0xA4E1AB81, 0x83667587, 0x9D771342, 0xF2B8FE7E, 0x91097C06, 0x7D5E7924, 0x426B3C28);
	init(eMod::eÂÉ·¨Å®æ´, "ÂÉ·¨Å®æ´");
	insert(0x49E3AF4D, 0x9F5BB257, 0xA2DFFD74);
	insert(0xFDF5DD4E, 0x33E14781, 0xB0A284B9);
	insert(0x5BD8137D, 0x90FFAA7E, 0x6FB1927E, 0xC72BDF69, 0xABAB2922, 0xFDA90688);
	insert(80, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x85CFD988, 0x82A55C83, 0xBFECF819, 0x82A55C83, 0x48D6EF3F, 0xD163F10A, 0x09B2BF29, 0x749ADF96, 0x4D6C7DA4, 0x96C1B363, 0x42D246FE, 0x741BA2DB);
	insert(0x00000000, 0x93AF956A, 0x596B5505, 0x93AF956A, 0x5B85C52C, 0x8A8204C5, 0x37C3B528, 0xCF851323, 0x937F1557, 0x3EF42F82, 0xA0C89C6D, 0xFCADE736);
	insert(0x00001549, 0x6275654E, 0xD2A7D7F7, 0xCFFC5B11, 0x1CB46D32, 0xC0FBA16A, 0x63A7D355, 0x19BBEFC4, 0x8FC7C545, 0x1B8CD1D4, 0x790FEFD1, 0xE615A62B);
	insert(0x00000000, 0x8951A17F, 0x357080CE, 0xA8BBA5AF, 0x04228ACE, 0xBEA4CEE1, 0x94E88DA5, 0xF34B0717, 0xB9030661, 0x93B5B64F, 0xA03BFE61, 0x5955BDDA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xFFAAE034, 0xBBE99333, 0x3D2A8762, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁé·ûÅ®æ´, "Áé·ûÅ®æ´");
	insert(0xE04223AA, 0x9BDF74F8, 0x07107B2E);
	insert(0x18F4D8E6, 0xAFA2C78F, 0x2ABCBBB1);
	insert(0xC69E37E7, 0xC69E37E7, 0x80CBBACF, 0xFBA099F0, 0xABAB2922, 0x00000000);
	insert(47, 10, 10, 11, 11, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0xB922A4F8, 0x1108DE67, 0xE1E4E409, 0x1108DE67, 0xFF96E442, 0x98D77093, 0x04FC365D, 0x6D780273, 0x1BE201F8, 0x2C707784, 0xA37FA080, 0xC0B35574);
	insert(0x00000000, 0x47667B41, 0x6428D20E, 0x47667B41, 0x958666EF, 0x002F299E, 0xE35272F5, 0xFF83343D, 0xB5922D2B, 0x75C58990, 0x091FC4BB, 0xB1A77CFA);
	insert(0x00001550, 0x1F56240E, 0x32811A70, 0x1F56240E, 0xB0A1E3E5, 0xD6E49319, 0x7BAD3CB7, 0x545C89D4, 0x6E281AD5, 0x07454B56, 0x35642349, 0xB7DC7BDE);
	insert(0x00000000, 0xF1DB39D7, 0x81508729, 0xF1DB39D7, 0x9E6B9F72, 0x602E6A71, 0x2DD22E8B, 0x2CE5F575, 0x1DA88A39, 0x423B2698, 0x03995EAB, 0x12A4D257);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xFCEE38C1, 0x33C79A93, 0xE3FD7084, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e´óÁ¦½ð¸Õ, "´óÁ¦½ð¸Õ");
	insert(0xBAB53438, 0x803AC4BA, 0x936F0B3F);
	insert(0x5E3A7173, 0x23491143, 0xA3319022);
	insert(0xBC86BD0A, 0xBC86BD0A, 0x5B58AAB2, 0xCB7EF3D1, 0xABAB2922, 0x4A973C8E);
	insert(130, 6, 9, 6, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0xE94D96A9, 0xE3587E7B, 0xE2DD30D1, 0xE3587E7B, 0xC73FB514, 0x3E0F197F, 0x3E0F197F, 0x07E7D554, 0x8C14660A, 0x15BC238B, 0x67C20DC7, 0xF3161927);
	insert(0x00000000, 0x297291AB, 0x1BF62956, 0x297291AB, 0xD0B45A03, 0x0EC8D421, 0x0EC8D421, 0x3190913C, 0x7AC6AF48, 0x32E6398F, 0x720E9752, 0x9271D2EB);
	insert(0x00001551, 0xE096B9B6, 0x9B1D1514, 0xC875C4BE, 0x02F7CD64, 0x12706211, 0xE185B5C8, 0x6B659F88, 0x5B9F487A, 0x5E86E30F, 0x233FC460, 0xBD653956);
	insert(0x00000000, 0xB922E0AA, 0x8702BF5B, 0x062C6302, 0xEB60CB0E, 0xDFC04681, 0x0C5EBE6E, 0x8DA59241, 0x0F470034, 0x081F6EC9, 0x35B27501, 0x24DA5E7C);
	insert(0x00000000, 0x4E4CD739, 0x9652FE7A, 0x927A5888, 0x64026916, 0xD126F791, 0xE8A2AB2D, 0x3B84D325, 0xD49AB61F, 0x5CA7CBB9, 0xF43D4685, 0x980897E1);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x1C562FE4, 0xAB649391, 0x4676514F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÎíÖÐÏÉ, "ÎíÖÐÏÉ");
	insert(0x1DEE9FAF, 0x0FD7CCBD, 0x70A11319);
	insert(0x61634205, 0xC59FEED1, 0x52822010);
	insert(0xFBEB1A24, 0xFBEB1A24, 0x949AF0BA, 0x3F09D227, 0xABAB2922, 0x8E03476E);
	insert(57, 4, 4, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001052, 0x77338BEE, 0xA0F8A0DD, 0x77338BEE, 0x88920353, 0xF8A2C37A, 0xF8A2C37A, 0xA9B9E763, 0xFD266883, 0xFBC04019, 0x0402FE3E, 0xEB9F3B5E);
	insert(0x00000000, 0xC8ED6E7E, 0x8F188EBA, 0xC8ED6E7E, 0xFB118871, 0xF7FBF315, 0xF7FBF315, 0xC45BDCE4, 0xDC47CD72, 0xDA15135C, 0x2E7BCAFF, 0x5D6F09D8);
	insert(0x00001552, 0x2D88FD84, 0x6C3F15EC, 0x2D88FD84, 0x83538E76, 0xBCD4820C, 0xACD59062, 0x8F04916C, 0x064F72E1, 0xAAD6F9F0, 0x0CC89F7F, 0xD9A71892);
	insert(0x00000000, 0x8D47A766, 0x5BC344C9, 0x8D47A766, 0x73B59DB0, 0x7E903BF4, 0x77BFE81B, 0xD10262FB, 0x11E8BFA5, 0x3F4F2417, 0x2AAB7C03, 0x37CB1508);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA2467825, 0x8AD0EFCB, 0x70F5ED80, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁéº×, "Áéº×");
	insert(0x8C05FBA0, 0x4A9A53AC, 0xBF49EAA2);
	insert(0x9B5EFDA5, 0x2EB49559, 0xF856DDA8);
	insert(0xF40B5A22, 0xF40B5A22, 0x2921D342, 0x68D2E918, 0xABAB2922, 0xD4AE1744);
	insert(95, 9, 9, 9, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0xF3DB1F51, 0x31288244, 0x4F069C43, 0x31288244, 0x7CC8F05D, 0x96C4B1C9, 0x96C4B1C9, 0x111982BE, 0x69C24857, 0x691C0877, 0xC46C607E, 0xFF1C3C72);
	insert(0x00000000, 0x0F78511B, 0x9779BD2D, 0x0F78511B, 0x4FE203F4, 0x86E25522, 0x86E25522, 0x441A3452, 0x86E86CE1, 0xCA329530, 0xFA80332B, 0x0E24D48E);
	insert(0x00001553, 0xC88AB042, 0xCB26BF39, 0xB15E456E, 0xDE8086CE, 0x73AAF3C5, 0x172D80CC, 0x812AE416, 0xE6A9C9B1, 0x0E98BCB1, 0x009DC258, 0xEAB51B1B);
	insert(0x00000000, 0x2E6D49C0, 0xAFE019CD, 0xDE7444FE, 0xE1E2C862, 0x42EBD4F6, 0x6B161494, 0xBA5F8264, 0xEEF4081E, 0x76E6E34E, 0xAABC1DC8, 0x268E5F06);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9B5B839B, 0x4F211B8E, 0x788DBF99, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÒ¹ÂÞÉ², "Ò¹ÂÞÉ²");
	insert(0xDCB316A5, 0x2FF488AD, 0x3483A111);
	insert(0xCEA91403, 0x63642CBA, 0x77DC22AF);
	insert(0x3EA3E751, 0x3EA3E751, 0x6FB1927E, 0x786704FE, 0xABAB2922, 0xE6EA6169);
	insert(61, 9, 9, 9, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0xEBD934C0, 0x9CE06363, 0xFE85E201, 0x9CE06363, 0x343886A2, 0x0F828F02, 0x0F828F02, 0xBA44D9F1, 0xE7CD4487, 0xBE6B93F3, 0xABDB5874, 0x7A864C26);
	insert(0x00000000, 0xD990BF34, 0x60C67EB9, 0xD990BF34, 0x107A023E, 0xAA489C53, 0xAA489C53, 0x8F98250F, 0xF5B12CF7, 0x14EF9AAF, 0x052E4576, 0x8621A5BA);
	insert(0x00001554, 0x9FB38604, 0xA33EA09B, 0xF42A579E, 0x04F157F1, 0x5355C202, 0xF8E3BC67, 0x3B1B850E, 0xB4575348, 0xF8BEAF49, 0x64EDA875, 0xC5A45B35);
	insert(0x00000000, 0xADCF452A, 0x05C99857, 0xC97EF417, 0xCDE33981, 0x05615F0E, 0xE9D4D28E, 0x1121AD9F, 0x49C52ECD, 0x65DBF59F, 0xFA77D099, 0x929A14D6);
	insert(0x00000000, 0x8243A7E6, 0x7A87E214, 0xADC1F64D, 0x46E3D588, 0xB5BC63C9, 0x6CAC86AB, 0x3F407A0D, 0xA742208D, 0x321B51FE, 0x981108DC, 0x94227A0A);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA36D6A7C, 0xD16718C6, 0x35EDC3DD, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÑ×Ä§Éñ, "Ñ×Ä§Éñ");
	insert(0xDEE937E2, 0xC0DF0BB3, 0xB70F9CFF);
	insert(0x51AA95E8, 0xFFB30D11, 0x189C10BE);
	insert(0x759B85BE, 0x759B85BE, 0x115FFA08, 0xD9C65F31, 0xABAB2922, 0x4DFCE28B);
	insert(100, 11, 11, 11, 11, 4);
	insert({ 0 }, { 0, 5 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0xD2A8C9CC, 0xE41E0CE2, 0x81A85EA4, 0xE41E0CE2, 0x32425E55, 0xF26C7F04, 0xF26C7F04, 0x53542E8E, 0xE65C789C, 0x6C28FDAE, 0x3C4585B9, 0x0A86F471);
	insert(0x00001555, 0x9F3AE035, 0x08F54545, 0xEA21D521, 0x47CD2810, 0x895C18AB, 0x1CEFC73C, 0x8983AA04, 0x79E11A39, 0x4EAC2194, 0xF6C02A88, 0x32EA9C0B);
	insert(0x00000000, 0x6CE03673, 0x29646894, 0x204E1063, 0x99D4FAFD, 0x2327B8D6, 0xBB223177, 0x3B13B79D, 0x95C37C43, 0x2863F762, 0xC21E54AE, 0x2592CDA1);
	insert(0x00000000, 0x238C1BD5, 0x6E36E60E, 0xD0EF4613, 0xAB879488, 0x7B0B3810, 0xA90307F3, 0x02649602, 0x3AA4D2D4, 0xBA7DF8C4, 0x55227EC5, 0x6C9BF6D6);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xE941964F, 0x3ED806B0, 0xEAE5E3F4, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0xAD793A2C, 0x0862F4FA, 0xAD793A2C, 0x6CBCB59E, 0xA17BA606, 0xA17BA606, 0xF62A21D5, 0xD12893EF, 0x55E9D89B, 0xEE8F4DD9, 0xF3BC1861);
	init(eMod::eÊÉÌì»¢, "ÊÉÌì»¢");
	insert(0xBC672A71, 0x001A739A, 0xF72EA501);
	insert(0xF2C12D8C, 0x664D0D94, 0x0E8D35A3);
	insert(0x07E34C4C, 0x07E34C4C, 0xD01EAC55, 0x019B0A72, 0xABAB2922, 0x52B98C51);
	insert(70, 5, 6, 5, 6, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001056, 0xAC1EE358, 0x116C8AA0, 0xAC1EE358, 0xA63AA400, 0xB2C9C2C1, 0xB2C9C2C1, 0x85305C40, 0x39F636C7, 0x59C6F27E, 0x9F90B311, 0xE3980AE5);
	insert(0x00000000, 0x1B07AA53, 0xB076C110, 0x1B07AA53, 0x3449865D, 0xCD60CB7C, 0xCD60CB7C, 0xF57C2F84, 0x6F3CBF51, 0xAD6F908F, 0x384E1C4F, 0x40F7E457);
	insert(0x00001556, 0xD3A37CF0, 0xCBBB2541, 0x4B31B9DB, 0x88628ABC, 0xBD29FB7A, 0x43D13A6E, 0x5AE86B6D, 0x8605C3B4, 0x21F41A63, 0x934DB2E8, 0x975D1C9F);
	insert(0x00000000, 0xF327989C, 0x4D7D667E, 0x758BFB21, 0x2584DF5A, 0xBD5742C8, 0x751361A0, 0xAEA13FC5, 0x1C2037A3, 0x001D862E, 0x1EC365E8, 0x19E6A518);
	insert(0x00000000, 0x994C5596, 0x1F6A3AA7, 0x09742776, 0xC0B6CA6A, 0xC4E76188, 0xE46F9305, 0xABCBC705, 0x80F7C4D6, 0x8967F12E, 0xB5783A03, 0x5BB9AE9A);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x476FAFA7, 0x6C9ECA36, 0x5E882E5A, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÒ°Öí¾«, "Ò°Öí¾«");
	insert(0x0A05B822, 0x6FF278EE, 0x91818070);
	insert(0x8356BCC8, 0x8CFBF7CA, 0xBB7354EB);
	insert(0x6479B43D, 0x6479B43D, 0xDDD145C1, 0x996D24E3, 0xD8C4FBC8, 0x0B9460D3);
	insert(50, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0, 5 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x00001057, 0xB6CE5945, 0x05BFFE67, 0xB6CE5945, 0x98AEB8E6, 0x7D2E2675, 0x7D2E2675, 0x88FA74F5, 0xBAD48A9F, 0x44EED87A, 0xC58184A3, 0xEE1937AB);
	insert(0x00001557, 0x91BB8E60, 0x292706E6, 0x27AE027B, 0x977F1043, 0xFAE66519, 0x1FAF1415, 0x14835218, 0x2CC0C44E, 0x69308A69, 0x17A99AF2, 0x6FF0EF15);
	insert(0x00000000, 0x9B807FAB, 0xE049DC54, 0x6732F04F, 0x10EB7807, 0xF36AED64, 0xA3428DB1, 0xA775FA1D, 0x0FC0C135, 0x272C1EC2, 0x2BF711C4, 0xF7DF280A);
	insert(0x00000000, 0x686562D4, 0xFE6AA039, 0x80A1DB6F, 0x7643F690, 0x37250FD4, 0xA0F63C4F, 0xF473E6A2, 0xEFB41A2C, 0x02074FCD, 0x4B153D00, 0x42EF0217);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0DAC8410, 0x0B0890CB, 0x9676F109, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x15274EAE, 0xA765DE53, 0x15274EAE, 0xDF5C8BC7, 0xC6E17937, 0xC6E17937, 0xDF0B08E7, 0x604CEAF5, 0x885D699C, 0xAAA3BDB2, 0xB82EFED7);
	init(eMod::eÊóÏÈ·æ, "ÊóÏÈ·æ");
	insert(0xC01B0A96, 0x2FFD0CF6, 0x4FFE22D8);
	insert(0x4058F6F2, 0x0E8A2F73, 0x7F884D37);
	insert(0xF344CED7, 0xF344CED7, 0xDD4C6313, 0x59A0C7D8, 0xABAB2922, 0xBB6D9B51);
	insert(75, 8, 8, 8, 8, 4);
	insert({ 0 }, { 0, 5 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0xC4DAEDE4, 0xA9634C86, 0x96D1C377, 0xA9634C86, 0xDCD0D49B, 0x92A345BC, 0x92A345BC, 0x89F2C157, 0x8B6B0959, 0xF18EA112, 0x6A620EE1, 0x20BF03E1);
	insert(0x00001558, 0xE48308FC, 0xF13F6EF1, 0x89A1831C, 0xE0DFA185, 0x078A8E44, 0x98A18E75, 0x3CDD35E9, 0x0B818F11, 0x88D3286C, 0x95ECB854, 0xB9B7EBDB);
	insert(0x00000000, 0x8A0E7653, 0x0CFB3919, 0x81432EEA, 0xE1FED58E, 0x433B070C, 0x83B37126, 0x1842937F, 0x2E396D1F, 0xF1819C25, 0x316180AF, 0xC1186D08);
	insert(0x00000000, 0xDEE37B84, 0x87A5A35D, 0x85505628, 0xEF854675, 0x9D2A7E57, 0xEAF59E67, 0xD18BA7E2, 0x8E05C9C3, 0xA3A77DEA, 0xFE54D0DC, 0xB89A7C9B);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA1239E33, 0xB3EA50AA, 0x149316B4, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x8C74B098, 0x4BBA23CE, 0x8C74B098, 0xE2A1511A, 0x159DAC6E, 0x159DAC6E, 0x6E9B6833, 0xE3CD5F8B, 0x8FCCF76B, 0xDDE6D3C3, 0xD53C3861);
	init(eMod::e°Ù×ã½«¾ü, "°Ù×ã½«¾ü");
	insert(0x96AFF285, 0x8F377E02, 0x18886385);
	insert(0xD0C8C11A, 0xA56931AA, 0xE6721E60);
	insert(0x9DE91CFC, 0x9DE91CFC, 0x7305EDDD, 0x0FE2D1B2, 0xABAB2922, 0x3B5E0E8F);
	insert(90, 9, 9, 9, 9, 9);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x69614BED, 0xC5355942, 0xE08B8AE8, 0xD06B21E5, 0xFB85C851, 0xF46A3BD3, 0xF46A3BD3, 0xE158DF15, 0xB8218F5C, 0x19ABD8D8, 0x6A3BECB3, 0x7DEECEBD);
	insert(0x00000000, 0x659E004B, 0xC59D3C2D, 0x659E004B, 0xD798EE17, 0x705C2C61, 0x705C2C61, 0x4A4E11B8, 0x7D64C952, 0x3FA41F9D, 0x9F2B2398, 0x091F0290);
	insert(0x00001559, 0x358DCB43, 0x54FB5E1C, 0xAB6204D0, 0x6F6B53A9, 0xA2159882, 0xE5365183, 0x23087F63, 0x7E435160, 0x78DC8F28, 0x40C65332, 0x44A1F1A2);
	insert(0x00000000, 0x695C5BF5, 0xEF83C192, 0x8043BC29, 0x29696F70, 0x494C4595, 0xC62B1385, 0xA1A959E0, 0x0F211C03, 0x1EF5586E, 0x4954B2BA, 0xCFA4C4B0);
	insert(0x00000000, 0xAFA9C2EC, 0x4E2E6307, 0x5E86A3C9, 0x18A40FC8, 0x6053E629, 0x4C30BDF1, 0x01CD4680, 0xBC6E1317, 0xCD43714F, 0x90A7C6B8, 0xDB7CFDE0);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x097E838C, 0x00000000, 0x00DE2347, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÌ¤ÔÆÊÞ, "Ì¤ÔÆÊÞ");
	insert(0xFB368388, 0x24C4114C, 0x7AC3A8B7);
	insert(0xCABBCC20, 0xAA349A7E, 0x9FEA2B83);
	insert(0x50F77A33, 0x50F77A33, 0x23713968, 0x5510EF01, 0xABAB2922, 0xD4BE1670);
	insert(75, 3, 3, 7, 7, 4);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x89CB2B8C, 0x33724BBA, 0xBF5C0DE2, 0x33724BBA, 0x23E1528D, 0x516D204C, 0xF467075C, 0x5E583382, 0x7B8F63CF, 0xA9F3D17A, 0x156E6008, 0x85D31BA5);
	insert(0x00001560, 0xB13667B0, 0x4194B6ED, 0x4B1AAA96, 0x7E3F0677, 0xC6E67E4F, 0xD04BFDC1, 0xB73151F2, 0xFA3ED116, 0xD00BAF62, 0xB01111D9, 0x2BE58ED4);
	insert(0x00000000, 0x5F1AC730, 0xB62295AB, 0x5F06113B, 0x9F080530, 0xA9729279, 0x2D2B73A7, 0x8841F709, 0x12B329D4, 0xC8079911, 0xFBCEB0CF, 0xB2F769A1);
	insert(0x00000000, 0x48CD3EC1, 0x4BE21568, 0x683CA512, 0x17F712C3, 0xE8B8F7CB, 0x5145536E, 0x46F38E3C, 0x5A09ABF2, 0xB0D7EB0B, 0xD88ACCAE, 0xC2BFB549);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x46702722, 0x01B2151D, 0x4614738E, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eºìÝàÏÉ×Ó, "ºìÝàÏÉ×Ó");
	insert(0xAD0EA485, 0x678D3BEF, 0xC772C514);
	insert(0x4A1D90BB, 0x19800FE4, 0x180576C5);
	insert(0x0B544177, 0xB372630F, 0x72A906FF, 0x5BFE9565, 0x72A906FF, 0x00000000);
	insert(55, 9, 9, 8, 8, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3 }, { 2, 3 });
	insert(0x1B790B81, 0xE49FB4CA, 0xA7E4E9E5, 0xE1B0D0A5, 0x2686C3FB, 0x329EAA42, 0x91B22697, 0x805E0A09, 0x091F0978, 0xD55C7155, 0x43B54C2F, 0x11C1703C);
	insert(0x00000000, 0xEAF10B72, 0xD550D618, 0x7B0A1F4E, 0xF138AA84, 0xBBDF5342, 0x47574289, 0x2204F904, 0x682964C5, 0x90BA74AC, 0xC3A84CA6, 0xB5725C69);
	insert(0x00001561, 0x0E997872, 0x0780CEE2, 0x21EC36BA, 0xC5891CD4, 0x6E9BCD5C, 0xA125C0D9, 0xEED1B474, 0x7D0DD03D, 0xBC4D1C53, 0xF0DCFC91, 0x425E4207);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xB7FD0CC5, 0x00000000, 0x6E719AB2, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁú¹ê, "Áú¹ê");
	insert(0x93916DC7, 0x661758CD, 0x29A4A68B);
	insert(0x771BE319, 0xE0656D44, 0x3798DEC5);
	insert(0x71E696DC, 0x71E696DC, 0x82C78C10, 0xB7ADF42D, 0xABAB2922, 0x83DC8475);
	insert(80, 12, 12, 9, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0xB9057571, 0x6CEAFF1E, 0x04D2CF27, 0x6CEAFF1E, 0xC567B951, 0xB53C6620, 0xBC7A1CFE, 0x7D57961D, 0x0369B033, 0xE4FB6A85, 0xE1E529BC, 0x4F8D3BA7);
	insert(0x00000000, 0xCD3B36BB, 0x71D71E7D, 0xCD3B36BB, 0xF519CF79, 0xFC7CDE80, 0x5D943CF7, 0xA5B6937F, 0x86E86CE1, 0xE9458DBB, 0xFA5D6246, 0x6D220A91);
	insert(0x00001562, 0xA599AEE0, 0xE38771B9, 0x2933FC41, 0x06C0B25B, 0xA120218F, 0x0707FAF0, 0xDCA6D558, 0x02DC061B, 0xDE2011E4, 0xD82E5536, 0x7A833B4A);
	insert(0x00000000, 0x7B925FC8, 0x918FF89D, 0x55A49A1D, 0x93DABA9C, 0x341A1652, 0xE5F8FFDE, 0xDBD74492, 0x028D8B27, 0xBEA6CF04, 0x41C11874, 0xE8B052B8);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x731B65CD, 0xCC34C56C, 0x2320B6F5, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÒõÑôÉ¡, "ÒõÑôÉ¡");
	insert(0x745485EC, 0xFABAA53C, 0x29FADBA2);
	insert(0x424AC904, 0xD40FD213, 0x1F63B17E);
	insert(0x97DDF348, 0x97DDF348, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(70, 10, 10, 2, 2, 4);
	insert({ 0 }, { 0, 4 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x00001063, 0x6037DEBD, 0xA173E35D, 0x6037DEBD, 0xBF06CDDA, 0x430F60E2, 0xA6C14C68, 0xBE1F3734, 0x39ECEBFD, 0x176BA0DE, 0xA52AB815, 0xC6CD4775);
	insert(0x00001563, 0x1AFDC3F6, 0x50362472, 0x5AF2702C, 0xA2E4424F, 0x84312A1F, 0x90C5A543, 0xDED79EF9, 0x38396F6C, 0x57DF88DF, 0xE27750EF, 0x45F9345B);
	insert(0x00000000, 0xE63B72EF, 0x1C6F39EB, 0xC0594A8A, 0x44725BE1, 0xC655D248, 0x869D47B6, 0x0711C9BC, 0x8C95DEFC, 0xC71F9600, 0xFBE7F244, 0x6298BEB3);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9AE21560, 0x079D1EE6, 0xC883C02F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x02C87FEC, 0xCE00B5B0, 0x02C87FEC, 0x19840C7F, 0x330A8E5E, 0x962E6989, 0x9B051B28, 0xA0D65E72, 0xF4DA81F4, 0xF86ED999, 0x19840C7F);
	init(eMod::e»ú¹ØÊÞ, "»ú¹ØÊÞ");
	insert(0xB2768F45, 0x9344867F, 0x18662B0C);
	insert(0x356C7A50, 0x18A2200A, 0x811DF376);
	insert(0xAA37562A, 0xAA37562A, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(70, 7, 7, 8, 8, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001064, 0x179128CC, 0x03AC1684, 0x179128CC, 0x31EF6204, 0x696D3908, 0xBA1288EA, 0x9ADE59B3, 0xA43A2E28, 0xB9673740, 0xEB325945, 0x59B8A4F0);
	insert(0x00000000, 0xF03CB9B8, 0xD39A52B6, 0xF03CB9B8, 0x6562B6BA, 0xF9E032B2, 0x6720DA19, 0xC096B89E, 0x6EB3D66F, 0x00B24564, 0x97B8B8A4, 0x55E9BB3B);
	insert(0x00001564, 0x3C4007F5, 0x9CE1B447, 0xB8678BB6, 0x729B428B, 0xF16E2546, 0xFE2F0DCE, 0x92117A35, 0xF65B08C3, 0x414CCFB2, 0x3076BA30, 0x6A043734);
	insert(0x00000000, 0xF2EA1BC3, 0xE46A6184, 0x66E097D4, 0xC50FDA15, 0x2D9F0E3B, 0xE2FF8FCD, 0x5E8E0238, 0x0C7B1194, 0x35719C69, 0x45C599AD, 0xCED3968E);
	insert(0x00000000, 0xEDB6C5FC, 0xA4FA706C, 0x66957D7A, 0x39CBCDF2, 0x332FCFB2, 0xD42F8DA6, 0xBF57DF7F, 0x90255B0C, 0x38B5089B, 0x6245307A, 0x4E5C0A4A);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x2B134D98, 0x3BE331A5, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e»ú¹ØÄñ, "»ú¹ØÄñ");
	insert(0x6853513E, 0xCE2E6380, 0x6238418C);
	insert(0x90563C9F, 0xCC60E5F8, 0xF588F5AD);
	insert(0xD279B0C7, 0xD279B0C7, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(56, 5, 6, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001065, 0x316AFE01, 0x52F9A65C, 0x316AFE01, 0x90F91721, 0xE2EECCC1, 0x138B00BF, 0x48DC6D1E, 0xF32491EF, 0x701A42E0, 0x300243F8, 0x958B00C4);
	insert(0x00000000, 0xD16F0139, 0x757BACE3, 0xD16F0139, 0x1DEFAAD0, 0x879AA020, 0x2D11203E, 0x1F9F342E, 0x88EEC7BD, 0x20EF6B7D, 0x32894C56, 0xCB089AEB);
	insert(0x00001565, 0x7FBF3FBC, 0x557E8420, 0x1C2392B6, 0xDA6ACD74, 0x3D0B6105, 0x3030BC6E, 0xAEACFDEF, 0x32AC0E25, 0x444DC98A, 0xFFB5760E, 0x631DFF0D);
	insert(0x00000000, 0x86BEF83A, 0x6CF13BFF, 0x006A893A, 0x6885D06C, 0xB00918E0, 0xF9A2D92F, 0xAD51D1D3, 0xBF06D5B4, 0x6FD7F234, 0xAA6CAFFF, 0x79366637);
	insert(0x00000000, 0x1C98B510, 0x34F8BB34, 0xC01ED510, 0x5C7A882C, 0xDF08379C, 0x4F1DCEEB, 0xE5C7D18C, 0x987C0D8F, 0x11CDFE55, 0xF050C69A, 0xDC0D5F87);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x6346E4D2, 0x00000000, 0xB8E00D09, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e»ú¹ØÈË, "»ú¹ØÈË");
	insert(0xC9A17DF0, 0x72AA73A3, 0x22D979E5);
	insert(0x029820FC, 0xA14FE521, 0x74C8DA04);
	insert(0x04AE10A2, 0x04AE10A2, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(87, 5, 5, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001066, 0xC27A35D2, 0x92173C08, 0xC27A35D2, 0x92173C08, 0x523AD9CB, 0x523AD9CB, 0xA77320BF, 0xF1F94BD5, 0x5049497C, 0x08280268, 0x48A4505B);
	insert(0x00000000, 0xB1108478, 0xF788602C, 0xB1108478, 0xF788602C, 0x516A9751, 0x516A9751, 0x738AD6CE, 0xF347E911, 0xB224E4D4, 0x3DF10CB9, 0x21897844);
	insert(0x00001566, 0xE05C3F97, 0x36F172ED, 0xC7EDA495, 0xE3E7268D, 0x14DE8746, 0x9864B2F1, 0x95EAFF9B, 0x5026BD9F, 0xD3EAE52F, 0xDB2916BF, 0xD9AB0FE6);
	insert(0x00000000, 0x9AC1969F, 0x995D926E, 0xEF2AF51F, 0xEEF86490, 0x9D79966C, 0x1B74F66D, 0x87240F3C, 0xF225CDEF, 0x70C9065C, 0x6AB996E5, 0x33832208);
	insert(0x00000000, 0xE2E72F59, 0x79061DDB, 0x567B4519, 0x00E3DB78, 0x82BBA616, 0x395380C6, 0x959AC4B3, 0x688C0F73, 0x51570829, 0xF1BBB49D, 0x94107020);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xC4C0E792, 0x2374B0F8, 0xD2C4DEF2, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁ¬åó³µ, "Á¬åó³µ");
	insert(0x6311F6B5, 0x064A508B, 0xB2B06815);
	insert(0x5B266F16, 0x46474602, 0x64D4DCE4);
	insert(0xA6C9EDFC, 0xA6C9EDFC, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(55, 3, 3, 3, 3, 5);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x00001067, 0x7482435E, 0x9F0EA2F8, 0x294CEE11, 0x9F0EA2F8, 0xD2B4BAD3, 0x2D425A5B, 0x8B01138F, 0xE8AD2FB2, 0x4C43CCFD, 0xF59B0FEC, 0xB93523EE);
	insert(0x00001567, 0x16B3E177, 0xD65888F9, 0xEDE79D1B, 0x92AC68E8, 0x1E0A19F3, 0xB63376EE, 0xC8B21F9A, 0xE15EDC19, 0xC3CFDBBF, 0x82ABE37B, 0xE622FC91);
	insert(0x00000000, 0x639A3CD0, 0x89C32F37, 0x4855D505, 0x2FC03212, 0xD64D0170, 0xB3305C85, 0x35E7C606, 0xD473C1AE, 0x3F5CB06A, 0x78E5196B, 0x7C4582FA);
	insert(0x00000000, 0x3F9690B7, 0xF62EB02F, 0x05B30C39, 0xFD977902, 0x23F9A218, 0x6064D57C, 0xA4ED552F, 0x44FCF5F0, 0xA6CEF28B, 0xFB24EDA7, 0x4B5EE4D0);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x8C3F954D, 0x1DECDCB0, 0xB0848BFB, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e°ÍÉß, "°ÍÉß");
	insert(0x7211A04B, 0x7228F80D, 0x5B2272A2);
	insert(0x4830D9AC, 0x1FA85CCB, 0xDB6BC86C);
	insert(0x14FCA451, 0x26F4BFE1, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(65, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001068, 0xE636B06F, 0xF1665619, 0xE636B06F, 0x23E46DF2, 0x68308FF7, 0x1DB6DE6F, 0xC2EE1383, 0xA7FAE263, 0x6AF9DF07, 0x5578A329, 0xAE332833);
	insert(0x00000000, 0xE5806D4F, 0xED6A93A8, 0xE5806D4F, 0x17DEDE57, 0xE8F3D105, 0xE8F3D105, 0xD55E73C6, 0xE92B9875, 0x2ADD1492, 0xA7ECFCFD, 0x50AEEEEA);
	insert(0x00001569, 0xFAA2148A, 0xBABC11FD, 0x7A7EF4C7, 0x6E93E040, 0xB5421C20, 0xB5F77ED3, 0x08939F8B, 0x048A0E39, 0x42A25B91, 0x6E6B0CD6, 0xB56AD372);
	insert(0x00000000, 0x62F29527, 0x29E98226, 0xB73A2598, 0xE7E4A2D2, 0x4BA5FF1A, 0xD7990680, 0x6DC1B4DF, 0x0AFA82C0, 0x0C9239DA, 0x543F3110, 0x98949BBF);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF90E825A, 0x00000000, 0xF7901BA1, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e°ö¾«, "°ö¾«");
	insert(0xDAAED84D, 0x3D61BEBA, 0xB1979CB5);
	insert(0x8E7FDE48, 0x9C4F4F05, 0x8D65D1C6);
	insert(0x8045A8FF, 0x8045A8FF, 0x52CDFED8, 0xC00E7A61, 0xABAB2922, 0x00000000);
	insert(65, 5, 5, 7, 7, 7);
	insert({ 0 }, { 0 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x00001069, 0x24FE9D58, 0xAD42BA6B, 0x24FE9D58, 0x56B29D6B, 0x4EE2B9DC, 0xFD08B18D, 0xD2A54E5B, 0xCE125302, 0xF5FE9E40, 0x07570236, 0x6A602D51);
	insert(0x00001569, 0x31454554, 0x494B0DD5, 0xA96DF03A, 0x50DB2F65, 0x8CFE363B, 0x34E9C79F, 0xF0677AD8, 0x0A8B52DB, 0x7A78E890, 0x42900F8B, 0x2E750AFA);
	insert(0x00000000, 0x2B30520D, 0x1B8544A0, 0xEE7EE57F, 0x1FAF4B1B, 0x3F121C87, 0xD2238B8A, 0x9DFE0B66, 0xC20C9884, 0xF3E3E636, 0x2A69F4E4, 0x93D65B4B);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5DA14093, 0x87A988A6, 0x1A5BCF97, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eöÞÈË, "öÞÈË");
	insert(0xB288965B, 0xDCA5D6A5, 0x5A7D1D79);
	insert(0x76D75D59, 0x2C03DE10, 0x28958C68);
	insert(0x2A06235C, 0x2A06235C, 0xD4BB65DC, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(77, 6, 8, 7, 7, 17);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001070, 0xE2807954, 0xAAD26B18, 0xE2807954, 0xDE138F5E, 0xE4697EB6, 0xB2C6B54B, 0x3625263A, 0xC6153D40, 0x6B3EF2B9, 0xF0F01E69, 0xFF8E8A7F);
	insert(0x00000000, 0x427A9519, 0x8E9AB5C9, 0x427A9519, 0x1E2540EF, 0xF0EB1315, 0x4050ADB1, 0x2BAE353F, 0x1257756D, 0x9633A1FF, 0xB17A0D7A, 0x5E5C6F08);
	insert(0x00001570, 0x78ED4C3F, 0x930A30A2, 0x964D1EF1, 0x01D4B3DC, 0x640F12DD, 0x4DD6DDDA, 0x55462CFE, 0x3692E598, 0x7A35C54B, 0x8FE89A5D, 0x51768776);
	insert(0x00000000, 0x0E964E2F, 0x1EAE31D6, 0x1B5790E0, 0x8051E578, 0xB9295A75, 0xE7DAEA0A, 0x1E9F260E, 0xE33C142F, 0xA97D144C, 0x2EC50D51, 0x3F3E73BF);
	insert(0x00000000, 0x53E54FB8, 0x4103BBAE, 0xC30E9C64, 0xD0DF8ED8, 0xBBF0D5E5, 0x233E123F, 0xD171ED1C, 0x51E67BF4, 0x0E3002E6, 0xA7E04BA3, 0x210D0B0C);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x04697234, 0xD4CE6708, 0x22A67114, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e±ÌË®Ò¹²æ, "±ÌË®Ò¹²æ");
	insert(0x45FB4FA3, 0x01987AF6, 0xE8E3E7EF);
	insert(0x78263198, 0x448C6BD1, 0xD7EC25CB);
	insert(0x69DECDF8, 0x69DECDF8, 0xF679A695, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(67, 10, 10, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001071, 0x2CC27C0E, 0x480AFDA4, 0x2CC27C0E, 0xF81B9F3D, 0x735A4452, 0xF2102877, 0x27DD9BD6, 0x94037442, 0x6B988A83, 0xC487753D, 0x68CD0C4C);
	insert(0x00000000, 0x63EF7648, 0xA43982AB, 0x63EF7648, 0xE41CD597, 0x4C4AF499, 0xB9CEAC45, 0x50E526FB, 0xB6B2A0D3, 0xA455BFA1, 0x02F57258, 0x61142020);
	insert(0x00001571, 0x1EDA1CD8, 0xA7E11652, 0x7996D4FD, 0xC2B09D04, 0x41B0D9DE, 0xAAB58620, 0x185A3FA7, 0x240C4935, 0xC7080258, 0x1B8CB1C7, 0x3995294F);
	insert(0x00000000, 0xB1FCF9BC, 0x347DEDB7, 0x024B4816, 0x5D5521EF, 0xF907D38F, 0x007F3C3C, 0xA2CC594D, 0xAF99B5D7, 0xBFE47349, 0x23CDF937, 0x373E458B);
	insert(0x00000000, 0x4062C921, 0x0DBF706C, 0xC6633DC8, 0x0728D23A, 0x8C5CA69A, 0xAB3E1CA6, 0xE6881018, 0x48F2CE34, 0xB142DBE7, 0x69761652, 0x00730EDA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xD161263B, 0x20739B2F, 0x283B0731, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e½õÃ«õõ¾«, "½õÃ«õõ¾«");
	insert(0xE49549D0, 0x2CBD658C, 0x35C88896);
	insert(0xFBE50E8E, 0x6882B54D, 0x20A129D9);
	insert(0xE46E5E7E, 0xE46E5E7E, 0x1D818A78, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(66, 7, 7, 5, 5, 4);
	insert({ 0 }, { 0, 5 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x00001072, 0xC768A820, 0xDFF4FD6A, 0xC768A820, 0xC02E6F3B, 0x5320BA18, 0xE0755693, 0x260AE8F1, 0x359676E1, 0x12A9E525, 0x8D7FF839, 0xAAECCF22);
	insert(0x00001572, 0x99544991, 0x8CFB251C, 0xD34BE63C, 0xFC3D1D87, 0xEC43AC2B, 0x5AC32BC4, 0x8ABFBDBB, 0x75E66AF1, 0x4DC8DCA5, 0xADEAB1FE, 0xA354A140);
	insert(0x00000000, 0x9DF80203, 0x29D2A239, 0xF5452BCE, 0xB98310C8, 0x566EB6DE, 0x14F072A3, 0xBDDD2CC8, 0x9893D7B8, 0xFB322308, 0x73AB8FF6, 0x59F66DD6);
	insert(0x00000000, 0xFA9FBC54, 0x7E4C7C91, 0x00D8BA03, 0x324F2BF5, 0x4AB6FE65, 0xAA3530C1, 0xAF8A8AF0, 0xD780D9F0, 0x49FE65F2, 0x7FA538F2, 0x2C2A62E8);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x460B1EB7, 0xBD210400, 0xB390A1FD, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0xB18C9EE6, 0xAA708449, 0xB18C9EE6, 0xAA708449, 0x9DD6164F, 0xC36121D8, 0x47B24D87, 0xCB9493F3, 0x6B4F63A6, 0xE671B4B0, 0xA5441CAF);
	init(eMod::eÇ§ÄêÉß÷È, "Ç§ÄêÉß÷È");
	insert(0x39F807E5, 0xAB2ED147, 0x879899EC);
	insert(0x5B3E9AC6, 0x389718FA, 0x9CEE85F2);
	insert(0x0986D0F7, 0x0986D0F7, 0x6642FAB0, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(74, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x00001073, 0x511FF3AD, 0x376DF52C, 0x511FF3AD, 0xDB3ABB96, 0x8D034242, 0x8D034242, 0x38206D0D, 0x312D4B23, 0xBCEE8584, 0x9829C1EE, 0x5181966E);
	insert(0x00001573, 0xA14F4A62, 0xEF00BB2C, 0xA14F4A62, 0xA4AC72C1, 0xE5E4A1F8, 0xC0B4DE3E, 0xB4F3EE56, 0x8C0E8FD0, 0x6E54D4E3, 0x7AC3FD14, 0x48D305B6);
	insert(0x00000000, 0x2FE148ED, 0xCB167002, 0x2FE148ED, 0xD112B947, 0x28D4057B, 0x320D7BB6, 0xF2558A57, 0x4EE14352, 0xEB0B92FA, 0x9221732F, 0xC51BEDE0);
	insert(0x00000000, 0x6269EE72, 0x1B41E74C, 0x6269EE72, 0xE75B86A1, 0x39629D8B, 0xE8A88379, 0x27882B73, 0xDC63F7E0, 0x5AE4D413, 0xB20D06E2, 0x2E505C04);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xED9F3561, 0x4B65B5D9, 0xC2746881, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÏ¬Å£½«¾ü, "Ï¬Å£½«¾ü");
	insert(0xB0F27967, 0xE87D7BE8, 0xBAE75C40);
	insert(0xDB8B5108, 0x87CCFBC2, 0x4045D281);
	insert(0x26F4BFE1, 0x26F4BFE1, 0x7C3CA212, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(80, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001074, 0xF4714CEA, 0xBE8D9F87, 0xF4714CEA, 0xEEBB57B4, 0x5D6B20D2, 0x4A38AD27, 0x7F17A414, 0x36D92EF0, 0x35539450, 0xA5D5C808, 0xA4BA5176);
	insert(0x00000000, 0xA86A8F7F, 0x54E43640, 0xA86A8F7F, 0x67406E9B, 0x5458DCB5, 0xCE13C203, 0x0F7B3DF2, 0x6EC38C62, 0xAC0C8A3D, 0xF900EE6C, 0xCFB46686);
	insert(0x00001574, 0xB1156F73, 0xEFC00198, 0xCDF6AC47, 0xCFFE9FB9, 0xC2F24E06, 0xFEE95AAF, 0x9D7F2AD0, 0x968FE790, 0xCE559EB3, 0xB56C293E, 0xFE38B1E6);
	insert(0x00000000, 0xB92BC047, 0xD77B1FCB, 0x55BA7290, 0x10209E45, 0xF03CBB7C, 0xBA23FAF3, 0xB0C627DF, 0x16FEE4F8, 0x6119DD21, 0x78DAF314, 0x79082997);
	insert(0x00000000, 0x1BE701AF, 0x32729B84, 0x0B467805, 0x04CADE02, 0xD7869449, 0xED814C74, 0x6B90DA5D, 0x84CE041D, 0xDE7C806E, 0xF9125935, 0xB8EE57F4);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF7543FD0, 0x201657B3, 0x6F29FDF0, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÏ¬Å£, "Ï¬Å£");
	insert(0x3ACA3DA0, 0x40391D43, 0x0D905862);
	insert(0x67F3C026, 0x104306B5, 0x6B1D603C);
	insert(0x26F4BFE1, 0x26F4BFE1, 0x7C3CA212, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(71, 10, 10, 6, 6, 4);
	insert({ 0 }, { 0, 4 }, { 1, 3 }, { 1, 2, 3 });
	insert(0x00001075, 0xC7DEA5CC, 0x6173D3FA, 0xC7DEA5CC, 0x4C22E015, 0x124F43E7, 0x5D7AC9A2, 0x3A9902F8, 0xD7A458DD, 0xE27709A8, 0xCB6D3B5F, 0x7D445145);
	insert(0x00001575, 0x6C15BE14, 0xFC69F32B, 0x48D01363, 0x605E3B33, 0xF3B7CF02, 0xD9A93462, 0x14B17887, 0xE43DCAE8, 0xD5D87FC7, 0x162C35E1, 0x9DCB7A5A);
	insert(0x00000000, 0xE538108A, 0x335FFC4E, 0x2625CDBF, 0x3086BBC0, 0x08DB608F, 0x5F269463, 0x66DAD328, 0x3B79CA55, 0x74110487, 0x9D54C470, 0xBA9BB39B);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9870F7A2, 0x93324EFF, 0xB8DC68BA, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x7A718D3D, 0x5DA38E0D, 0x7A718D3D, 0x8441340B, 0x2802C64B, 0x78A35328, 0x80827189, 0xC8D6682A, 0x7DE55BEC, 0x1F6DFA52, 0x44E50377);
	init(eMod::e»ú¹Ø³µ, "»ú¹Ø³µ");
	insert(0xC9A17DF0, 0x72AA73A3, 0x22D979E5);
	insert(0x04C8EF50, 0x04C8EF50, 0x4E6C91E0, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(79, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x00001076, 0xD40A955B, 0x23A6B22B, 0xD40A955B, 0x23A6B22B, 0x2645C2B3, 0x1542FECB, 0x74EACCE2, 0x5436236D, 0xDA1E6B20, 0x46DD9B84, 0x6B02069E);
	insert(0x00000000, 0x30A031D6, 0x7ABB5867, 0x30A031D6, 0x7ABB5867, 0x4CBF8E96, 0x4CBF8E96, 0x22D00FF6, 0x6FB5288D, 0x2775FCCC, 0xA81A6456, 0x36CEDB8E);
	init(eMod::eºùÂ«±¦±´, "ºùÂ«±¦±´");
	insert(0xECBF79F6, 0x3A745390, 0xDDFFBC85);
	insert(0xED21E5BD, 0xE4D1C361, 0x1BE9CEAF);
	insert(0xF7FFA50A, 0xF7FFA50A, 0x8BD51EF7, 0xE4BDA1F8, 0xABAB2922, 0x00000000);
	insert(90, 7, 7, 6, 6, 4);
	insert({ 0, 1 }, { 0, 1, 2 }, { 3, 5 }, { 3, 4, 5 });
	insert(0x63999FC7, 0xC77749A6, 0x599D9243, 0x64D2F296, 0xD514597D, 0x76FC8299, 0x12146B13, 0xAA0CE148, 0x95DB6FB6, 0x74F2939F, 0x2BCEF41B, 0x17B0247D);
	insert(0x00000000, 0x2C61BE3D, 0x9E7D076D, 0x6C359915, 0xBEF64509, 0xFDC292F8, 0x1ACA499E, 0x96F813AE, 0x3B66453C, 0x451AE40D, 0xAF54DB30, 0xA0960AB1);
	insert(0x00000000, 0x95F1BC5E, 0x548E9E05, 0x7823D2D1, 0xB48B2693, 0x79C272B3, 0x0807A41B, 0x0246720C, 0x7F6FDBD2, 0x55A12BA4, 0x03957043, 0x8BAE2FCA);
	insert(0x00001577, 0x586B462C, 0x0B5EB183, 0xCFE3DEDF, 0x36A02292, 0x78C89358, 0xA7F1FBD6, 0x3B330253, 0x3C255AE9, 0xB06E3A58, 0x6D8A1791, 0x9FA21AAB);
	insert(0x00000000, 0x6248E3FA, 0x9C5F7508, 0x6DB73E8B, 0xEB58968D, 0x8BDF4DD0, 0x3C4DA2B6, 0x75235EB5, 0xB1C85DFD, 0x0CDC5E4A, 0xC2BEE775, 0xD646089F);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xD0D575AC, 0x5B5CBDE0, 0x74252756, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÃ¨Áé, "Ã¨Áé");
	insert(0x4877C0E7, 0xDCF4C65B, 0x43D79120);
	insert(0x94160141, 0x8698D7A6, 0x150D7488);
	insert(0x2A06235C, 0xC2152ECF, 0x82C78C10, 0x54B8E946, 0x9888D80D, 0x00000000);
	insert(64, 5, 5, 5, 5, 4);
	insert({ 0, 1 }, { 0, 1, 2 }, { 3, 5 }, { 3, 4, 5 });
	insert(0x00001079, 0xC5A58467, 0x6E4AF049, 0xED255792, 0xA7F7AFEA, 0x754D0168, 0xC141E9D0, 0x7D1B15DC, 0x7FD521EB, 0x53BA1CA0, 0xC1BB091E, 0x2C2108E4);
	insert(0x00000000, 0x2FA8BF28, 0xDE181E26, 0xCEB930FC, 0x7F45C7D3, 0x7502F4F2, 0x3892D237, 0x9B1E867C, 0xF2AB6B97, 0x68185371, 0x4C69BB5C, 0xBE74942A);
	insert(0x00000000, 0x89B3D5D3, 0x9DF766DD, 0x252F04BA, 0x4C2AF322, 0x5CC125FA, 0x0DF5B0E4, 0xB9E809A5, 0x56A8D4D5, 0x20DE9268, 0x4E7D70E5, 0xF2A8B303);
	insert(0x00000000, 0x25C3C6CC, 0x2AFCEB20, 0x5D711007, 0x0580F3FE, 0x99BBA06B, 0xAAC73D6E, 0xD497ABF5, 0xFD1349E1, 0x44AA7C09, 0x78FECA83, 0x32130E88);
	insert(0x00000000, 0xA7E7E30F, 0x8607DE8D, 0x0B3A5C39, 0x8EE3E528, 0xBF1E5A84, 0x641B4F74, 0x3994517B, 0x330947B0, 0x52563893, 0x075363C6, 0x8D446568);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xD9219E61, 0xD622C86A, 0xC1F5FE1E, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÃ¨ÁéÈË, "Ã¨ÁéÈË");
	insert(0x8DC67AD2, 0xC5B785D6, 0x59A1378C);
	insert(0xB1CE2D78, 0xF808B6DE, 0x55F596EF);
	insert(0x9D6AE7DB, 0x9D6AE7DB, 0x03D2BB85, 0x04E5D1C0, 0x9888D80D, 0x00000000);
	insert(40, 4, 4, 2, 2, 4);
	insert({ 0, 1 }, { 0, 1, 2 }, { 3, 5 }, { 3, 4, 5 });
	insert(0x00001078, 0x66CEC074, 0x8C47DA98, 0x6623BA7B, 0xB3BC6AF1, 0x9ADAA7FE, 0x445416D9, 0x4C8CBDEE, 0x5ED1D628, 0x7AD5B326, 0x9AED2889, 0x9109CB8C);
	insert(0x00000000, 0x197F43E1, 0x57320086, 0x19F7718E, 0x7A9CD33C, 0xDAA5FD71, 0x5E90E616, 0xB989251D, 0x63C23C1F, 0xD4307215, 0x79CDBAB9, 0xAFDA4E03);
	insert(0x00000000, 0xEF4BB370, 0xE69856AC, 0x9CAFDA7F, 0x166786E0, 0x0098A72C, 0x6636FD25, 0xE6BADDD3, 0xE276E26C, 0x574EA80C, 0x48FB581C, 0x03372DB2);
	insert(0x00001578, 0x0BD69BBD, 0x82EC8664, 0x78256C28, 0xCAD8AE33, 0xB6A0F272, 0xE2244B5C, 0xD7ADADFC, 0xC42F5315, 0x1610F435, 0xAC426AF0, 0xAA29C1A9);
	insert(0x00000000, 0x7A5DF2FD, 0xB0E8A165, 0xEC9B0AEA, 0x852B6490, 0xD339585F, 0x702BAF11, 0xA12B4BDC, 0xC5471B0A, 0x16211A4F, 0x9EC6702C, 0x43EB47E6);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xAD5A8508, 0x1A0E8CEB, 0xDA3A2696, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¿ñ±ª, "¿ñ±ª");
	insert(0x007411E9, 0x51DD0C75, 0xB58A25B2);
	insert(0x7DE142E6, 0x9CE69D03, 0xA7154AB2);
	insert(0x79D4BAA1, 0x79D4BAA1, 0x3E9FC323, 0x48B2F4AF, 0x65FB00E1, 0x26E14A56);
	insert(60, 6, 6, 6, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001080, 0x9D574574, 0xD1966358, 0x7650B053, 0x462F51D8, 0xCB3623DA, 0xE5D9241B, 0x04E784FA, 0x80B72700, 0x647A0B83, 0x609605BA, 0x7B8F9EA7);
	insert(0x00000000, 0xF09E0071, 0x5F6E2E0D, 0xC91653B0, 0x2436819D, 0x126599F1, 0xF380FD75, 0xC75A4DD8, 0xB047483B, 0x7D787597, 0x0A65CD8F, 0xB323264F);
	insert(0x00001580, 0xC9A778BE, 0xE27E0F07, 0x4C2863D5, 0xE4C9CECB, 0x87EA8781, 0x598F2E29, 0xB83FD89C, 0x47D85C84, 0x0A77DD67, 0x438491B0, 0x5ADFBAD2);
	insert(0x00000000, 0x88904B4D, 0x3B6BEBA5, 0x322350DC, 0xC905D51B, 0x31DA7076, 0x514F5FE2, 0x0EB37F84, 0x54CFFF9A, 0xF14E0073, 0xC886D0D5, 0xA66BDA03);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF709454A, 0xF8B6FF97, 0xC0021BB9, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¿ñ±ªÈË, "¿ñ±ªÈË");
	insert(0x0D17D382, 0x5ADE76FE, 0xE544351B);
	insert(0x2E77E22D, 0x299E9267, 0xAED39D9A);
	insert(0x2A06235C, 0x2A06235C, 0xBB6F0444, 0xCB7EF3D1, 0xABAB2922, 0x00000000);
	insert(90, 2, 5, 3, 6, 4);
	insert({ 0, 1 }, { 0, 1, 2 }, { 3, 5 }, { 3, 4, 5 });
	insert(0x00001081, 0x263F3B50, 0xDDED951B, 0xC23F4BE2, 0x4B48D396, 0x6DA3F82F, 0x4B54CF50, 0x113285C3, 0x7684ADE1, 0x3D7440B7, 0x321D93B7, 0xD6985217);
	insert(0x00000000, 0x0D96505C, 0xE6200B25, 0xEA8628BD, 0xC114D3C8, 0x7AB878DD, 0x9C9CBA04, 0xEFA51000, 0xAFD927D8, 0x68E474BF, 0xCD8A8A52, 0x117E5AB0);
	insert(0x00000000, 0x42CBF7FD, 0xED900591, 0x8BA088AE, 0x0F0E6B1E, 0x3AD8B8A8, 0x48E8F1DD, 0x4F35ABAA, 0xB4330B66, 0x704BD83B, 0x1850FB34, 0x37D5833B);
	insert(0x00001581, 0xE9E47BF8, 0x2A1B8C69, 0xE9E47BF8, 0xEA42D997, 0x910E8FDF, 0x3DC7DB59, 0xC04E7031, 0xA960269A, 0x4D2FA042, 0x5D2CDD31, 0x500AEF2F);
	insert(0x00000000, 0x031727F7, 0xEF87A8AA, 0x031727F7, 0xF894CD68, 0x00000000, 0x2C3F4457, 0x7A1779B5, 0xF19004F0, 0xBD79A6D5, 0xE21A32F7, 0xBC29D3AA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xEB29D8FB, 0x4CC37FE1, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ«×Ó¾«, "Ð«×Ó¾«");
	insert(0x22FC262A, 0x455347A8, 0xE2C0E97B);
	insert(0xBEBE2DE2, 0x7E4C42CB, 0xA9492BBC);
	insert(0xF344CED7, 0x29CD3B6F, 0xA2AB5128, 0x271CD452, 0xABAB2922, 0x00000000);
	insert(60, 7, 7, 4, 4, 4);
	insert({ 0, 1 }, { 0, 1, 2 }, { 3, 5 }, { 3, 4, 5 });
	insert(0x00001082, 0xBA7D48D7, 0x64DC0FBC, 0x41C7F53D, 0xD7F44511, 0x29C847D4, 0x58B231CB, 0x93538640, 0x2A50F0AE, 0x65F2E157, 0xBFDF1A30, 0x145C407A);
	insert(0x00000000, 0x717C51A3, 0x8626BE8B, 0xF3ED4E51, 0x36A1EE2A, 0xC40B14F2, 0x7206B355, 0xA966C9A6, 0x255D0384, 0x162812C9, 0x89A61E55, 0xA818B79A);
	insert(0x00000000, 0x7F0F1BB9, 0xCD0846B7, 0x021AFA79, 0xB8937FD7, 0x4CD923B6, 0x257BB6CD, 0x301FABAA, 0x695F02C3, 0xA830561E, 0x26777BCC, 0x0C5C5684);
	insert(0x00001582, 0xC433446F, 0xD48ACEB0, 0x95FBDCDD, 0x3295E9E7, 0xBB5D5C67, 0xD5FDDCC6, 0xC9EAA7FD, 0x8007428F, 0x33DE7412, 0x80535B44, 0x3D6CAB31);
	insert(0x00000000, 0x4E827754, 0xF9044ED0, 0xAB7F802C, 0xAB796DF9, 0x8F463BC3, 0x9D66E6B1, 0x16141572, 0xBDF99F86, 0xC05C6A43, 0xAC4626EE, 0xDBC4C106);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x76FDB3C1, 0x99DE926C, 0xDE8FEB67, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e»ìãçÊÞ, "»ìãçÊÞ");
	insert(0x2624AA5D, 0xFD5D97F4, 0x966AD1A1);
	insert(0x75271272, 0x7AE84C6F, 0x780FB38A);
	insert(0xF344CED7, 0xF344CED7, 0xA7719E36, 0xCE871E51, 0xABAB2922, 0x2D15A805);
	insert(56, 4, 4, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001083, 0xB2528581, 0x79208A5C, 0x21380C46, 0x4CBC3FD7, 0x0F49DDA2, 0x0F49DDA2, 0xDBD75951, 0xA0B2A4C0, 0x92BF8A49, 0x5E30118C, 0x22AB96CF);
	insert(0x00000000, 0x2999EB12, 0xCAC18E35, 0xBB9D974A, 0x59279788, 0xC4DB1C7F, 0xC4DB1C7F, 0x93F9FB81, 0xC1D5E833, 0x4984A865, 0x91F20606, 0x9FCB7CB3);
	insert(0x00001583, 0xB6C7E183, 0x2EF50C0F, 0x87E78098, 0x2E8D1286, 0x4C5B3EE1, 0x9749DC26, 0x9F328A5A, 0x44EC58A8, 0xCEA78367, 0x11D32EF5, 0x39F7B0C1);
	insert(0x00000000, 0xC7C133B9, 0x3BCDB53C, 0x86C42A1E, 0xAB7B4719, 0x85702C4A, 0x847933E3, 0xDC88B49F, 0x6D48043D, 0x1E8FDE56, 0x492F9AA1, 0xD2924B0D);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0DF86B03, 0x3EA4065A, 0xA6EDA0A1, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e»­»ê, "»­»ê");
	insert(0x5FF60C89, 0xD0D5C17E, 0x2565C19F);
	insert(0x8EBBBD08, 0xBEC6885C, 0x76554054);
	insert(0x9B576594, 0x9B576594, 0x83F3883A, 0x3F09D227, 0x9079243B, 0x00000000);
	insert(80, 6, 6, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001085, 0x947BA25A, 0x9358CF65, 0x947BA25A, 0x9358CF65, 0x14257647, 0xCA851961, 0x984B7989, 0xB48CAEA6, 0x0AA5F60F, 0x8E0167B2, 0x9358CF65);
	insert(0x00000000, 0xEBCB6424, 0x25A1C181, 0xEBCB6424, 0x25A1C181, 0xF9812ADB, 0xA4D613ED, 0x698F0258, 0xAB82D9CD, 0xA0199A08, 0x44E16B54, 0x25A1C181);
	insert(0x00001585, 0xBAEE2ABE, 0x87508114, 0xD32574C5, 0x42260944, 0x20CA6389, 0xCAA9C35B, 0x0F2B0078, 0x710D687A, 0x9E3606F9, 0x9C793FC3, 0x8B61EDBB);
	insert(0x00000000, 0xA5387256, 0x5A8CE8EB, 0x987932C9, 0x549EAE57, 0xB0766B67, 0x1688D53E, 0x42B6F092, 0x1ABA2BA8, 0x7476CDF0, 0x81B6D4D2, 0x5ABBBD65);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9FDBFC64, 0xA017274E, 0xC0F17B1B, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¤Ã¼Áéºï, "³¤Ã¼Áéºï");
	insert(0x6CD0A68C, 0xED53371C, 0xD3A40262);
	insert(0x9FA88D38, 0x060B8DB4, 0x990F4826);
	insert(0x72FE4A7D, 0x72FE4A7D, 0xB41F1836, 0x7E10D0DB, 0xABAB2922, 0x1D14F825);
	insert(99, 10, 10, 10, 10, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001086, 0xDD227A4C, 0x6FCDED81, 0xDD227A4C, 0x4C43D1FD, 0x44E17604, 0x44E17604, 0x812A0527, 0x84A834AA, 0x9ACB32D6, 0x54DD9B88, 0x9AE30565);
	insert(0x00000000, 0xD1827A03, 0xEC658253, 0x80F714F5, 0x76437D38, 0x1F374744, 0x1F374744, 0xBEE70945, 0x146ABA49, 0xCE8FA4C7, 0x664CB9DF, 0x9471B9C4);
	insert(0x00001586, 0xD0889100, 0xDEE20947, 0x4D9B1187, 0xC14B977D, 0xCC76F2F8, 0x0CE73800, 0xF74A6D83, 0xD7CC08FF, 0xA7EF454A, 0x2BD4447D, 0x79AB1D7B);
	insert(0x00000000, 0xA04E0801, 0xA7102F86, 0x6A23896E, 0x6E76ACA8, 0xD51F4EC0, 0x879BDDFD, 0x618921C2, 0x27A28AEE, 0x425AF14F, 0xDDB553F1, 0x0512386F);
	insert(0x00000000, 0xE03D0029, 0x5EBE9C44, 0xB1A037C7, 0x1A5D4986, 0x1970FA1D, 0x3A3687F2, 0xD7FFAFA2, 0x512D7DD2, 0x8031118C, 0x1DE75941, 0x30F1EB6F);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x8866E34A, 0xF58576FB, 0x3D697D14, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¾ÞÁ¦ÉñÔ³, "¾ÞÁ¦ÉñÔ³");
	insert(0xC8DA49A9, 0x520D9528, 0x78647E78);
	insert(0x018EA183, 0x4A4A014E, 0x137F323A);
	insert(0x48E84E42, 0x48E84E42, 0xB41F1836, 0x27DE0D11, 0xABAB2922, 0x1D14F825);
	insert(100, 7, 7, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001087, 0xD920BF09, 0x20AE4BF5, 0xD920BF09, 0x015EB5F0, 0x09A070E7, 0x09A070E7, 0xB26FBCC9, 0x4BE0E734, 0x1711C384, 0x473EAB27, 0x998957FB);
	insert(0x00000000, 0xE4D66B65, 0xCF546A8F, 0xE4D66B65, 0x1BDCBE4A, 0xB51551E5, 0xB51551E5, 0x396F1FF2, 0x319D2CC8, 0x7C671298, 0xF5BE6DE3, 0xE6C00596);
	insert(0x00001587, 0x06B8518E, 0x99E3C537, 0xE03B4CB5, 0x039BDA0E, 0x3F197B49, 0xA8CBBA47, 0x1CCCD4F9, 0xCD453A51, 0x6CF30E59, 0x71C43236, 0xB224A947);
	insert(0x00000000, 0x29519167, 0x0CD5AF90, 0x9AA419BC, 0x83FA33A7, 0x14D63E3B, 0xA8F2C40E, 0x18F60D89, 0x95C22BD5, 0x23FD3878, 0x6240BB61, 0x5A0A2D79);
	insert(0x00000000, 0x74C8444E, 0x61B2BA5C, 0x2326D947, 0x1680DEA0, 0x27CD2802, 0xF969D00B, 0x20997909, 0x751597BB, 0xD4C85679, 0xB637EF96, 0xA9B4C00B);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xB4CBFD3F, 0x061C6FA0, 0x0E11D3D6, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐÞÂÞ¿þÀÜ¹í, "ÐÞÂÞ¿þÀÜ¹í");
	insert(0xF1738910, 0xA0FA8D38, 0xA79D1138);
	insert(0xF939992C, 0x1D5E937A, 0x1C18BBC4);
	insert(0xBF8DA456, 0xBF8DA456, 0x6FB1927E, 0xC72BDF69, 0xABAB2922, 0x00000000);
	insert(80, 5, 5, 4, 4, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001088, 0xD70E1A23, 0x9B9A0E1B, 0x3090F808, 0x4C5B945B, 0x2D8299C3, 0xF1A954D7, 0x13910678, 0x28E437E2, 0xBAEBEAEA, 0x73729299, 0xA2D6BF8C);
	insert(0x00000000, 0xA4C0E43E, 0xF7A1DCBD, 0x7A997853, 0xBCFAAF4B, 0x91FF9026, 0xF797BADE, 0x6F20622A, 0xADD0D660, 0x02C428F0, 0xA1CD1366, 0x21F6388D);
	insert(0x00001588, 0x19AF45FA, 0x2F6A0446, 0x554EBB15, 0xA49270BA, 0x9B7DF1FC, 0x73A017D3, 0x9224DF59, 0x20E37E1A, 0xE2700BF7, 0xC9CE3035, 0xD50E9C97);
	insert(0x00000000, 0x307B4F17, 0xB5BFE9B5, 0x895B9F2A, 0x28D77EED, 0xCA4D305D, 0xA07CCF46, 0x3AE7FB97, 0xA5C4C839, 0x223C5F00, 0x39AD557F, 0x4BA65826);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x78DDAF3A, 0xB85132AF, 0xD87018BE, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÌÙÂûÑý»¨, "ÌÙÂûÑý»¨");
	insert(0x0B13B2CE, 0x07D0DC47, 0x0D782089);
	insert(0xCF8279AC, 0xF5A58149, 0xB01BAE4E);
	insert(0xCE93C455, 0xCE93C455, 0x1D818A78, 0xD9C65F31, 0xABAB2922, 0x00000000);
	insert(60, 4, 4, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001089, 0x6C4BB701, 0xE5778E97, 0xC970B8D0, 0x07F93745, 0xC5D94B46, 0xC1611D6D, 0xAB486FA3, 0xE2B2445B, 0x0983D50D, 0x17B4A850, 0x30F1C9E2);
	insert(0x00000000, 0x9713AC00, 0x71C31F62, 0x0C69D45B, 0xCAA3C6B1, 0xFB3087B7, 0xB637A64A, 0x646B9D18, 0x02430E4E, 0x34A68B81, 0x42DC8482, 0xBE2EEF6E);
	insert(0x00001589, 0xFB7B4EA4, 0x0363158B, 0x7118D645, 0xDC43CAD3, 0xBD71D80C, 0xC7954921, 0x170A3BB0, 0x7DCFA008, 0xDE1E53D4, 0x21C0D609, 0xDF83BE8C);
	insert(0x00000000, 0x8FE758DA, 0x8E1AB998, 0x223BBD1A, 0x28AC29E4, 0x6F23CB20, 0x6A1ECB48, 0x67E29EFB, 0x19FFD049, 0xDC307B8A, 0xBE647FBF, 0x3FCB3BCC);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x63503FE9, 0x75FC6569, 0x0D2DDA7A, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eò×ÆøÑý, "ò×ÆøÑý");
	insert(0xC13F272A, 0xDD34FDF2, 0x3382B99C);
	insert(0xD08C301F, 0x05C2D7FA, 0xA7EB4FFE);
	insert(0xEBFCB989, 0xEBFCB989, 0x82C78C10, 0x55AE0BEC, 0xABAB2922, 0x00000000);
	insert(99, 6, 6, 7, 7, 4);
	insert({ 0 }, { 0, 1 }, { 2 }, { 2, 3 });
	insert(0x00001090, 0xB689F8D4, 0x5E9E8FEE, 0xA3F8CD7E, 0x684F4026, 0x00C49F8D, 0xCC95E5AB, 0x1C793841, 0x2BBB9C11, 0xC110AF0A, 0xC3968B7E, 0x39F1D105);
	insert(0x00000000, 0xE4ECC415, 0x0863C7A9, 0x9C209C27, 0xA8D0419D, 0x32E923D4, 0xD275BEF7, 0x6C150CCC, 0x4DC302C0, 0x417C8CEA, 0x6CC05E1B, 0xFBA3B6C2);
	insert(0x00001590, 0xB7008671, 0xF4DD7911, 0x304CE44C, 0x49DD3B77, 0x9D9B1084, 0x481691FA, 0x244C4F16, 0x887522C9, 0x61A67852, 0x92234C89, 0xE3E61F8E);
	insert(0x00000000, 0xEBD49A95, 0xC763D297, 0xB926F635, 0xA513CA4F, 0xE1D5B5D7, 0x64538440, 0xBD3BDD2A, 0x39A7EFDE, 0xC1E4932D, 0x37CF49EC, 0x8A7A9D3E);
	init(eMod::eÐÞÂÞ¿þÀÜÑý, "ÐÞÂÞ¿þÀÜÑý");
	insert(0xFF6EB365, 0x0EBC029C, 0xAD07D8A2);
	insert(0x21808A04, 0x10C6D8CE, 0xA87B7E1C);
	insert(0x0E116FA5, 0x0E116FA5, 0xEC0CE1A4, 0xC72BDF69, 0xABAB2922, 0x00000000);
	insert(77, 6, 6, 9, 9, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001091, 0x8BE06586, 0x81C678B3, 0x32FC3B00, 0x658404D2, 0x33C182E9, 0x55B54077, 0x4C07FFA1, 0x22CAE42D, 0xF712F34F, 0xB9A4F860, 0x7E7E7120);
	insert(0x00000000, 0x9D78DA2B, 0x6BAC03BC, 0x5942C648, 0xEB155B54, 0x190C9114, 0x14716C76, 0x87BD3F23, 0x6C778517, 0x9829749E, 0x81C8BEE1, 0xACAA9120);
	insert(0x00001591, 0x9ADB6CAC, 0xE3026E8A, 0xE3884664, 0x6783BDA7, 0xEADFBA86, 0x577EEC90, 0x0BA257CC, 0xB87C4198, 0xF361F1D2, 0xEC3103E4, 0xCFC70F6F);
	insert(0x00000000, 0xADB211E7, 0xC0F39C55, 0xD565D8ED, 0x24CE0BB8, 0x3401A187, 0xCBD9CBE2, 0x6D63DDF0, 0xD1DB1510, 0x20F20B5A, 0xED249538, 0xED499864);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x59A2D761, 0x9488874F, 0xA419DBA6, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e½ðÉíÂÞºº, "½ðÉíÂÞºº");
	insert(0x6701D105, 0xB3A2A9E0, 0xD00C9DA9);
	insert(0x073C81E6, 0x44C0FAB2, 0xFEA664CC);
	insert(0x027E9843, 0x027E9843, 0xF679A695, 0xCB7EF3D1, 0x3AD3E536, 0x00000000);
	insert(103, 6, 6, 6, 6, 4);
	insert({ 0, 1 }, { 0, 2 }, { 3, 4, 6 }, { 3, 5, 6 });
	insert(0x00001092, 0x7B1F88D8, 0x289299C4, 0x37955920, 0xD2B03C99, 0x9C711EDD, 0xC028769E, 0xD49CA003, 0x784F490F, 0xEC96354B, 0x15FBF580, 0xD2737498);
	insert(0x00000000, 0x5BC15465, 0xFA58A97F, 0x676E4514, 0x4DE355A1, 0xF03453FF, 0x025E7649, 0xA1592F3C, 0x5DAA3352, 0xE661D1C4, 0x1B2DB29F, 0x1BD399D4);
	insert(0x00000000, 0xD02C9BD6, 0x2C59F696, 0x732E0F1D, 0x116F3ABE, 0x28C3863E, 0xE4F58375, 0x2C4131C8, 0xD9BD4C2E, 0x7A0641C6, 0x6F486F5F, 0x99D24D07);
	insert(0x00001592, 0x6BF3CC00, 0xF4973A76, 0x2D9806FA, 0x73625A2A, 0x704A7CEC, 0x0F176911, 0xB0D90BEA, 0xD6CD3ADC, 0x61C5BCE3, 0x1CE650E4, 0x026319C9);
	insert(0x00000000, 0x97999AC2, 0xACC99864, 0x87F218DD, 0x3C24D4EA, 0x9FE8463B, 0xC4C1B226, 0xC75421CE, 0x34CF819C, 0x97B03DD9, 0xE0E766CF, 0x0BFBBE37);
	insert(0x00000000, 0x9FAD6A2E, 0x48DFA598, 0x5B9E5132, 0x51A6BC9D, 0xF42354A0, 0xAEA12116, 0x474252D5, 0x729DA8B5, 0xBD8610DF, 0x90BF1DCA, 0xE7E9C4F7);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xBE8A540E, 0xA74E47D4, 0xC9C5C1A7, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÂüÖéÉ³»ª, "ÂüÖéÉ³»ª");
	insert(0x0C0EC59C, 0x3AEAC686, 0xA9BF2A70);
	insert(0x10F50864, 0x917F4983, 0x3290F1E8);
	insert(0x04FD7D2D, 0x04FD7D2D, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(84, 4, 4, 5, 5, 4);
	insert({ 0 }, { 0, 1 }, { 2, 3, 5 }, { 2, 4, 5 });
	insert(0x00001093, 0x45ACDEDF, 0x26C83C18, 0x45ACDEDF, 0x727FCE05, 0x9798EC46, 0xDCCF7313, 0x1036684B, 0xE8EF1966, 0x3BDD0DBF, 0xBD77FD79, 0x8BF01F13);
	insert(0x00000000, 0x86A626ED, 0x0699441B, 0x86A626ED, 0xAA7B8B16, 0x8A1C124A, 0x32A77033, 0x99D3C540, 0xD8916BD6, 0xEBF703E7, 0x9D2A42ED, 0xD215CA34);
	insert(0x00001594, 0xD4400E10, 0x0A22889E, 0x886801BB, 0xD8E30A74, 0x25240D95, 0x4697E1B3, 0x72B459C4, 0xD759BDC3, 0x8EBF1E45, 0x09B3229A, 0xADCE3DE2);
	insert(0x00000000, 0x7CA20CA1, 0xFDFA6E29, 0xA8A06D0A, 0x3ECB3CA8, 0x6DFA0E5A, 0x968F42FA, 0x5DC3F9DB, 0xE9B35388, 0x36250678, 0xDB66A6FF, 0x491AE351);
	insert(0x00000000, 0x1A909869, 0x27245037, 0x9155E9F8, 0xDBD4E18D, 0xC669E354, 0xDAE12A06, 0x67AD1BAD, 0x8021033D, 0x35DDA6FD, 0x5CF179D4, 0x89D5F2F3);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xB7FF1E5A, 0x3B8ECB7D, 0xEA292149, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶ÅÝÅÝ, "³¬¼¶ÅÝÅÝ");
	insert(0x6EC5F31C, 0x5D49C79F, 0xD6DBEF71);
	insert(0xA3BD4A03, 0xD8942965, 0xF1B999FA, 0x3027F161, 0x06BB2040, 0x5270E9A3);
	insert(109, 10, 10, 18, 18, 4);
	insert({ 0 }, { 1 });
	insert(0x00001094, 0xC3C3CE08, 0xC3C3CE08, 0x574EEAB7, 0x7A11D093, 0x362FA40A, 0x812BC457, 0x06C69364, 0x7B14D8E7, 0xC27E40BA, 0x0F97BAFB, 0x2EC505F0);
	insert(0x00001094, 0x90C49784, 0x9502C70B, 0xE2D684A7, 0x5A488708, 0x578E4E20, 0xEA07D23E, 0x31FE8589, 0x1025669C, 0x3413F529, 0xC1F40330, 0xAFEE30DC);
	init(eMod::e³¬¼¶´óÐÜÃ¨, "³¬¼¶´óÐÜÃ¨");
	insert(0x74E05925, 0x37FA7B7E, 0x15CC9BB5);
	insert(0xC5FAE987, 0xC5FAE987, 0x1126C263, 0xCDF0C355, 0xABAB2922, 0x1D14F825);
	insert(118, 10, 10, 10, 10, 4);
	insert({ 0 }, { 1 });
	insert(0x48D67CDC, 0x17C37276, 0x216B2745, 0x17C37276, 0xACF4E61C, 0x90E04F21, 0xE3D29421, 0xF379FD8E, 0x1C8026A4, 0x921C71C7, 0x897770DA, 0x4E6AC3E5);
	insert(0x48D67CDC, 0x24EAC80D, 0x060E0098, 0x4FF2EBAB, 0xD1BDA75F, 0x6D7D1072, 0xEEA8BA73, 0x479EB55A, 0x4517E097, 0x3380E107, 0x28F2D85A, 0x0B84CA4D);
	init(eMod::e³¬¼¶½ðºï, "³¬¼¶½ðºï");
	insert(0x237D8B3E, 0x84F9623A, 0x450785A4);
	insert(0x72FE4A7D, 0x72FE4A7D, 0x8DB1469D, 0x7E10D0DB, 0xABAB2922, 0x1D14F825);
	insert(40, 5, 5, 9, 9, 4);
	insert({ 0 }, { 1 });
	insert(0x00001096, 0xED850381, 0xF98BEFBD, 0xED850381, 0x3420E201, 0xB88BC6D0, 0x7D46BAFC, 0x56F17261, 0x439C7952, 0x417163CD, 0x5704BD50, 0xDC846E45);
	insert(0x00001096, 0x5CFB35A4, 0x1115350E, 0x5CFB35A4, 0x2A76AF8E, 0xB26E14F5, 0x12BF6FC0, 0x3F2F6B47, 0xBAF219BA, 0x818B17F7, 0x2E6F465E, 0x2A4A610D);
	init(eMod::e³¬¼¶´óÏó, "³¬¼¶´óÏó");
	insert(0xC284AEC7, 0x32E7F885, 0x479D3DAE);
	insert(0x7436E9E9, 0x7436E9E9, 0x21990613, 0x8C77E82D, 0xABAB2922, 0xFD34EC3D);
	insert(60, 9, 9, 5, 5, 4);
	insert({ 0 }, { 1 });
	insert(0x00001097, 0x3D46505C, 0x62AA4BE1, 0x3D46505C, 0x389845D5, 0x2A44E34D, 0xFF56282B, 0x27DCD80C, 0xE0F602EC, 0x83A877F7, 0xD08E3166, 0xA2135444);
	insert(0x00001097, 0x8E5B6E48, 0x75E91E7D, 0x8E5B6E48, 0xD26F85A4, 0x1752A15D, 0x6EE899E7, 0xBE5CDC49, 0x73C54B13, 0x0EB91A8D, 0x6B012F02, 0xCC62F298);
	init(eMod::e³¬¼¶°×Ôó, "³¬¼¶°×Ôó");
	insert(0x178DEE01, 0x6875C546, 0x5DD2DF02);
	insert(0x86BB0969, 0x86BB0969, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(70, 5, 5, 9, 9, 4);
	insert({ 0 }, { 1 });
	insert(0x00001098, 0x9E17A3F2, 0x0DB7BD78, 0xBBDDA695, 0xDBA0C128, 0x8B3498E6, 0xCD707E8A, 0x6E0A2649, 0x1BAC097C, 0x14DB61B1, 0xC64AEC4D, 0xF9BD7D20);
	insert(0x00001098, 0xDE06522C, 0x216094B0, 0xAA27D3BB, 0xA45E50B2, 0x46229E6F, 0x660C3935, 0xA6C0756E, 0x920B8D0E, 0xB56BA2DF, 0x8786565C, 0xCC60A0B4);
	init(eMod::e³¬¼¶ÁéÂ¹, "³¬¼¶ÁéÂ¹");
	insert(0xD4BBF19C, 0x043FA1FC, 0x36D8B919);
	insert(0x36A153F9, 0x36A153F9, 0x1CB6183D, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(50, 7, 7, 9, 9, 4);
	insert({ 0 }, { 1 });
	insert(0x00001099, 0x20F2C401, 0x8CE0777D, 0x20F2C401, 0x7B97BEC9, 0x9BDBBF00, 0xFD20E25C, 0x7D7FE75B, 0xF0F84EB5, 0xC4B6BEE7, 0xFF69656F, 0x54196AF9);
	insert(0x00001099, 0x49578F89, 0x4E23E18C, 0x49578F89, 0xCAC235C1, 0x40E44F30, 0x8C15E636, 0xCD20A9E1, 0xF776BF6E, 0x5D0BA7D9, 0x5419AFEC, 0x726CCEB2);
	init(eMod::e³¬¼¶³àÑæÊÞ, "³¬¼¶³àÑæÊÞ");
	insert(0xF8D24976, 0x066DFAFB, 0x97D49726);
	insert(0xF344CED7, 0xF344CED7, 0x233B6740, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(48, 6, 6, 6, 6, 4);
	insert({ 0 }, { 1 });
	insert(0x00001100, 0xF3FAEC33, 0x98F7D5EA, 0xF3FAEC33, 0xE58C5E3F, 0x80B546BB, 0x80B546BB, 0x9AA9FFA5, 0x01F4B42D, 0xA6948363, 0x40DBF841, 0xB263ABDC);
	insert(0x00001100, 0x183AB443, 0x2B9DCF67, 0x183AB443, 0xBF41F3FE, 0xD24D54AC, 0x4B1D77C0, 0xD4C96E33, 0xB4A07130, 0xADDB702B, 0x8F5C9F7A, 0x3B3A3B37);
	init(eMod::e³¬¼¶´óÅô, "³¬¼¶´óÅô");
	insert(0xE01F8A25, 0xD7282D50, 0xE54449AD);
	insert(0xC0FED30C, 0xC0FED30C, 0x59F2433F, 0xE1069F55, 0xA6D109A7, 0xDAE4099B);
	insert(50, 4, 4, 11, 11, 4);
	insert({ 0 }, { 1 });
	insert(0x00001101, 0xEB61471A, 0x05DC68B5, 0xC2B61158, 0xBA9681F9, 0x558AA8C4, 0xAD653344, 0xE7D40AFA, 0x4BB4FA5C, 0x4864FC9E, 0x43FE337B, 0x6ED31640);
	insert(0x00001101, 0xBCB5AD39, 0xE16D5890, 0x3AF99E76, 0x8A6EB7CC, 0x0459D0C9, 0x1CE13606, 0xBE426A11, 0x57388E49, 0xF320C91E, 0x250ACC97, 0xE5A2CFC7);
	init(eMod::eÉÆ²ÆÍ¯×Ó, "ÉÆ²ÆÍ¯×Ó");
	insert(0x00000000, 0x12685356, 0x00000000);
	insert(0x86BB0969, 0x86BB0969, 0xD1BFFA42, 0x6F48B653, 0xABAB2922, 0x00000000);
	insert(66, 5, 5, 7, 7, 4);
	insert({ 0, 1 }, { 0, 2 }, { 0, 3 }, { 0, 4 });
	insert(0x00001102, 0x47C517E7, 0xE9339945, 0x7E685F11, 0x60340C5F, 0x5AAB889E, 0xCE5B2F27, 0x1BBE6789, 0xC963B17E, 0x243409A9, 0x8B2C16D3, 0xFC73D014);
	insert(0x00000000, 0x1F281BA9, 0xA2C4FB99, 0x99123D27, 0x201BC95C, 0x367C9EF3, 0xE9A8F8DB, 0x0F06CBC4, 0x7C99D602, 0x8B1D005A, 0x3DD29D69, 0x7232B276);
	insert(0x00000000, 0x0C24C162, 0x76945853, 0x329EB1F7, 0xEDC1D89F, 0x3B45D48F, 0xFEC5B41D, 0x41D56F1A, 0x912D2308, 0x5D231D04, 0x9DEEC6B6, 0x996AAFA0);
	insert(0x00000000, 0x18A4CF2F, 0x14BDAD4B, 0xDC1788E0, 0x480CA071, 0xD7F7FE2A, 0x54B2D695, 0x5738D3AD, 0x98CDFC94, 0xBC5E6DDC, 0xF58BC412, 0xA29F14C5);
	insert(0x00000000, 0x0428BF24, 0x6DF28036, 0xCA6E3D77, 0xDC083E9E, 0x282ED175, 0x043E38E2, 0xCC03DCF5, 0x1419AF93, 0x84482BD8, 0x58ED1802, 0x98D2F25E);
	init(eMod::e³¬¼¶½î¶·ÔÆ, "³¬¼¶½î¶·ÔÆ");
	insert(0xA69F6B2F, 0x00000000, 0x448EC476);
	insert(0xF23AC3E3, 0x564F1090, 0xA8DF3614, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(80, 5, 6, 8, 8, 4);
	insert({ 0 }, { 1 });
	insert(0x00001103, 0x85D20F2E, 0x0DC1C46C, 0x85D20F2E, 0xEEFC5A77, 0x92C5B61C, 0xB80D599D, 0xDD86B4EC, 0x23076AEF, 0x6BB301C5, 0x723CEB57, 0x3B6A0F84);
	insert(0x00001103, 0xFC743DEA, 0x256F1AF4, 0x02379071, 0x256F1AF4, 0x24251EFC, 0x8B2F2F9B, 0xF509F1E1, 0x818FF438, 0x9862F314, 0x7A8436FD, 0x9C6D58E5);
	init(eMod::e³¬¼¶ÈË²ÎÍÞÍÞ, "³¬¼¶ÈË²ÎÍÞÍÞ");
	insert(0x2B6361F6, 0x09FA1385, 0x93D56020);
	insert(0xCE93C455, 0xCE93C455, 0x8BD51EF7, 0x6F48B653, 0xABAB2922, 0x00000000);
	insert(60, 5, 5, 10, 10, 4);
	insert({ 0 }, { 1 });
	insert(0x00001084, 0xD01C7435, 0x11BE9AEF, 0xF69A1184, 0xA1658C7C, 0xF326BA4B, 0xD4B8C139, 0x1698842F, 0x28AE6BC6, 0x749CA3E4, 0x5FDE8EDF, 0xA1658C7C);
	insert(0x00001584, 0x2BC67A5F, 0x06258C20, 0xB3BE1374, 0xD146D0B8, 0x0C42D1D8, 0x000D9783, 0x48684A76, 0x4CDC6BB6, 0x8AF9964F, 0xE7A003F1, 0x00E2342D);
	init(eMod::e³¬¼¶ÉñÅ£, "³¬¼¶ÉñÅ£");
	insert(0xA520757C, 0x00881F84, 0x53EAB6E1);
	insert(0x304822DF, 0x304822DF, 0x37233806, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(80, 13, 13, 11, 11, 4);
	insert({ 0 }, { 1 });
	insert(0x00001104, 0x9F7CB714, 0xC76E74A1, 0x9F7CB714, 0xA00C4404, 0x97FC7FEC, 0x8D6E23F8, 0xEB2108A7, 0xF2555DE4, 0x41749269, 0xEC48D084, 0x340D23D3);
	insert(0x00001104, 0xA9C5802F, 0xBD747215, 0xA9C5802F, 0xB068D594, 0x875D93FE, 0xB97EBFC0, 0xC9B03C6C, 0x7F00FDBB, 0x70327CC1, 0x64043116, 0xC3F5DFB4);
	init(eMod::e³¬¼¶Éñ»¢, "³¬¼¶Éñ»¢");
	insert(0x3017595B, 0xDC24F5D8, 0x9CED4F42);
	insert(0x79D4BAA1, 0x79D4BAA1, 0x3E9FC323, 0x48B2F4AF, 0x65FB00E1, 0x26E14A56);
	insert(70, 9, 9, 9, 9, 4);
	insert({ 0 }, { 1 });
	insert(0x00001105, 0x56688360, 0x5A223551, 0x56688360, 0x645686AD, 0x121B327B, 0xE97AC333, 0xD8E9B5FE, 0x30CA247F, 0x5BCADFD4, 0xADC813B9, 0xDA48C108);
	insert(0x00001105, 0x1174DEC2, 0xDE5B6EB0, 0x1174DEC2, 0xCDBFE2DC, 0xC812DE4B, 0x8452D27F, 0x24F80534, 0x9B50048D, 0xEAFEAE18, 0x16F9A3E7, 0x81E1FDAF);
	init(eMod::e³¬¼¶º£ëà, "³¬¼¶º£ëà");
	insert(0xAABF9D5E, 0xC960684E, 0xEF2AEBB7);
	insert(0x4D7EA2D5, 0x2742826F, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(61, 6, 6, 5, 5, 4);
	insert({ 0 }, { 1 });
	insert(0x00001106, 0xBCC5F712, 0x06EA0E96, 0x8F783300, 0x22D302F4, 0x28B12AE9, 0x2907A178, 0xA28683D4, 0x5FA6F172, 0x1A7BECFF, 0xB319132D, 0x67B1DF01);
	insert(0x00001106, 0x2E9A246C, 0x8FE92E81, 0x4B592393, 0x84D2F6B7, 0x52AB750A, 0x7CAC9222, 0x66B6EDAD, 0x65BCDD9F, 0xF2142000, 0xD03C19EF, 0xC0592E23);
	init(eMod::e³¬¼¶ÉñÍÃ, "³¬¼¶ÉñÍÃ");
	insert(0xA3ADD383, 0x00FB291A, 0xF3881D27);
	insert(0xDCDC131A, 0xFD0CCC82, 0xA395ED8B, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(40, 6, 6, 3, 3, 4);
	insert({ 0 }, { 1 });
	insert(0x00001107, 0x42EEC759, 0xF807415E, 0x4DB5D0B8, 0x8818F11A, 0x02C946FF, 0xF0BBA8AF, 0x242587CA, 0x192B83E6, 0x126AA146, 0x302D6564, 0xDD7B3DDE);
	insert(0x00001107, 0xF9777AA1, 0xDA0CB5D7, 0x77845235, 0x54370885, 0x97F8F299, 0xF5A92C68, 0x53ECC589, 0x3A52E796, 0xAEF12C9A, 0x487C29A2, 0x3EC0F614);
	init(eMod::eÐ¡Ã«Í·, "Ð¡Ã«Í·");
	insert(0xF1CF62EE, 0xC8D41161, 0x4ADB4261);
	insert(0x703162DD, 0x09E67990, 0xDB560413);
	insert(0x4E3E787E, 0x258C426C, 0x694A6A02, 0x4E3E787E, 0xABAB2922, 0xE93442EC);
	insert(50, 8, 8, 5, 5, 4);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	// 0xC55222A4 ²»ÒªÅÀ
	insert(0xA28B2143, 0xC55222A4, 0x5E36834F, 0xC55222A4, 0x5E36834F, 0x47E10EB2, 0x671116E2, 0xFF09569A, 0xD22B41DE, 0x20CE167B, 0xCF782790, 0x4783B752);
	insert(0x00001608, 0xEF2EA3C9, 0x2309BC86, 0x39E7E9E0, 0x4871E647, 0x0AAEB409, 0x653CE672, 0x2E04284C, 0x7225C822, 0xC367584D, 0x1C119390, 0x7D31E8A7);
	insert(0x00000000, 0xDE76D81C, 0x2756B2F0, 0xFFCF7FCE, 0x07E90541, 0x307B4959, 0x17ECF70E, 0x280A275B, 0xE62247D7, 0xC0840002, 0x2A4144EF, 0xADFF3041);
	insert(0x00000000, 0x984D71F7, 0x604A42C3, 0xF1593E02, 0x7563243D, 0xE387DAC9, 0x6B18D3EB, 0x2F2EAC38, 0x213A2794, 0x35BF2568, 0xDD44C8A1, 0xAEA8596F);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xD7562254, 0x934FAB88, 0x88C50DE5, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0xF87327B8, 0xB9135DAC, 0xF87327B8, 0x49E7CA0B, 0x00000000, 0x00000000, 0xE72CFC8C, 0x00000000, 0x6C291277, 0x5CBFCE77, 0x51DD1398);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xC00D94AC, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡Ñ¾Ñ¾, "Ð¡Ñ¾Ñ¾");
	insert(0x9E313CA0, 0xFBE6FF99, 0xA974BA37);
	insert(0x986B4305, 0x1128B477, 0xE5F9DD2E);
	insert(0xE422AE85, 0xE422AE85, 0x6E2AE110, 0x5DB8ECC0, 0xABAB2922, 0xC66E0B78);
	insert(50, 8, 8, 9, 9, 10);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0xAA09BF40, 0xE61E56B9, 0x6B6EDE08, 0xE61E56B9, 0x3CDCC94D, 0xAEACCC79, 0x0821CCDD, 0x7F7D306F, 0x86F8E7AF, 0xA79C1C83, 0x683EFFF8, 0x44CE3D1A);
	insert(0x00001609, 0x28EBA6EC, 0xC7465F35, 0x839F0DE9, 0xDCCF6072, 0xA686A863, 0x8E7357AE, 0xE4D974DF, 0x801B7A23, 0xA44F7347, 0x7F3C5535, 0x45F84F1F);
	insert(0x00000000, 0x7FCDA6EC, 0x3659E5AF, 0x3EBF861B, 0x5FB5452F, 0x4CAB7B53, 0x4DAC46E5, 0xE914B30F, 0x9AB52A6D, 0x26BB2197, 0x00000000, 0x75E42E01);
	insert(0x00000000, 0x67E375F5, 0x3D12578E, 0x951CD72B, 0xF5307E80, 0xBB3CC792, 0x721CE3C9, 0xB56A2CD8, 0x5597075C, 0x6A70226D, 0x00000000, 0x245735EE);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xE135CC7C, 0xE6B82194, 0x06F77D45, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x863E7BD2, 0x1BA16751, 0xF0DB354C, 0x0F2549AC, 0xAF38857D, 0xA74202A7, 0xA482BB1D, 0xF4B4E335, 0xD80EDF73, 0x1AD27C93, 0x4BAB69BA);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA482BB1D, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡ÏÉÁé, "Ð¡ÏÉÁé");
	insert(0x160BAC92, 0xBBFFA377, 0xCC5FD880);
	insert(0x4EA6BA89, 0x1E213199, 0xFB036AE2);
	insert(0x3B940879, 0xF23AC3E3, 0x21EE0152, 0x5DB8ECC0, 0xABAB2922, 0x590FFB01);
	insert(50, 10, 10, 10, 10, 10);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x6BB09644, 0x92F244E3, 0x9330E1CF, 0x92F244E3, 0x8B140C1B, 0xABC5A285, 0xEE884391, 0x841825A2, 0x7DE1B54E, 0x2EB316D9, 0x5068A83F, 0x6C6F6ED3);
	insert(0x00001610, 0xAAB197B3, 0xF0B2B56D, 0xC8954999, 0x5CF3E07A, 0xD25127EA, 0x68324ABA, 0xB1D44AAC, 0x2116F79D, 0x24073589, 0xC590E982, 0x12985D27);
	insert(0x00000000, 0x8534854C, 0x41D13868, 0x677ED2F6, 0x3E79D862, 0x6131112C, 0x52E74BF2, 0xAABF8DE2, 0xFB04C827, 0xE47C69B3, 0x91F5AAD2, 0xA0A83D0F);
	insert(0x00000000, 0x54C71308, 0xD18E0999, 0x24438A29, 0xE212E1CE, 0x0F5BBE09, 0xB2FDB64B, 0xA53ECE97, 0x1C3D7D36, 0xE0884E5C, 0x96D1364B, 0xD1E8EC16);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x438FEA2A, 0xFEDF20AC, 0x5DBB1568, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0xD778C730, 0x5FA25B28, 0xD778C730, 0xA6CC4AEB, 0xE63A6496, 0x015E3BC9, 0xE103A13E, 0x95FF843E, 0xDB3DD97C, 0x68B5F95A, 0x326CBDC8);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x015E3BC9, 0xE103A13E, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡ÏÉÅ®, "Ð¡ÏÉÅ®");
	insert(0xF02B3FE7, 0x778895A7, 0x8641F7A6);
	insert(0x57E3BF6D, 0x996A3EAD, 0xCC1C8AFB);
	insert(0xBE70C7D8, 0xBE70C7D8, 0x686773CF, 0x9269D193, 0xABAB2922, 0x590FFB01);
	insert(50, 9, 9, 17, 17, 10);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0x4CCB52B0, 0x4D70F380, 0xA6401032, 0x4D70F380, 0x1B6A54AB, 0xA46E3F3E, 0xC185E1DB, 0xFEAB5548, 0xBA65BBDC, 0x55C2E4C1, 0x5DE5A635, 0x9CFC1BA4);
	insert(0x00001611, 0xEC756C76, 0x5ED14A95, 0x1D02CCE3, 0xF0156D8A, 0x67B7A7F9, 0xB9CF8B4E, 0x6A2C2397, 0xA1A21E0E, 0x2404289A, 0x4B3F6928, 0x78375433);
	insert(0x00000000, 0x3607920E, 0x52BDD51E, 0xFC92A1FE, 0x228408A0, 0x9899BF83, 0x0C319DDD, 0x42EFB694, 0x733579C7, 0xE10D762E, 0xA5D4D1E8, 0x06B09B59);
	insert(0x00000000, 0xD72C1A82, 0x4615D2FB, 0x5A14512D, 0x2D394A55, 0x51898BBF, 0x4C01CB1B, 0x02B7BB4C, 0x4F98768C, 0x9964C666, 0x5F4847E3, 0xE2D2E5FB);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9AC5F9DB, 0x7E6FED4B, 0x955E84DD, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x159BFEFC, 0xD05D8CB3, 0xE28945CC, 0x74C62658, 0x0C2257AA, 0x585BC7F1, 0x00000000, 0x815DBBA3, 0xD80EDF73, 0x817E5EC4, 0x56B03119);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x1449C3A8, 0xCF38FD3D, 0x7D39A425, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡¾«Áé, "Ð¡¾«Áé");
	insert(0x3560646D, 0xD294A300, 0x8C9213B6);
	insert(0x30F11894, 0x0680B983, 0xD4179DFD);
	insert(0xF8A64313, 0xF8A64313, 0x1A1EDC49, 0x9269D193, 0xABAB2922, 0x35AD9904);
	insert(50, 9, 9, 10, 10, 12);
	insert({ 0, 6 }, { 0, 5, 6 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0xB7C042FD, 0xB26BBE81, 0xF3A9B571, 0xB26BBE81, 0x5DBD0746, 0x8EDF0F05, 0xB1B0CBDC, 0x021740E8, 0x391B9B0B, 0xE88A3B51, 0x28E70334, 0x3FA89B51);
	insert(0x00001612, 0x31696348, 0xABF2208D, 0xA94F9594, 0xFBCF854F, 0xADBDE6A5, 0xC602DD6E, 0x8F4F2B6B, 0x93DBF135, 0x9AF85413, 0xE40BFB88, 0x4AA6811A);
	insert(0x00000000, 0x4B54B857, 0xC2C5E03B, 0xBFD56EE3, 0x3172E4E1, 0xD45CCCDC, 0x5187D850, 0x3B451237, 0x42F7EF05, 0xE092C4C3, 0x8CE3B283, 0xB6409D70);
	insert(0x00000000, 0xD712CA69, 0x8A331A8A, 0x4B8CE846, 0x50550532, 0x060D13FD, 0x0D1346DF, 0x98007EC0, 0x40A6BE6B, 0xD086777C, 0x71D4557F, 0xAC7ECDC0);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xA87F72D7, 0x9D79F43F, 0xF623FEBC, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x294DDD8A, 0x237DCEC2, 0x6F41F854, 0xEDA39762, 0x9B51BB3F, 0xCCE8AD2B, 0x6F37C87B, 0xBDC09972, 0x670AF28E, 0xE0E6F73A, 0xA01AD36E);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9B51BB3F, 0x6F37C87B, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡Ä§Í·, "Ð¡Ä§Í·");
	insert(0xC424DB10, 0xE168C387, 0xBDAA9353);
	insert(0xE0B6D373, 0x1906B5CA, 0x0A40A6C4);
	insert(0xF344CED7, 0xF344CED7, 0xE5EBB797, 0x5DB8ECC0, 0xABAB2922, 0x44DD663F);
	insert(50, 3, 3, 14, 14, 4);
	insert({ 0 }, { 0, 5 }, { 1, 2, 4 }, { 1, 3, 4 });
	insert(0xE1954C9F, 0xF02CE935, 0x611E25CC, 0xF02CE935, 0x0AEEFE57, 0x477AE7F5, 0x6FBBEC96, 0xDF69159F, 0x261BE802, 0x28AB1501, 0x4D890708, 0x0041187B);
	insert(0x00001613, 0xB2FBCCB6, 0xB0DCB149, 0x693F2882, 0x8C23A9AB, 0x7C411FCA, 0xD1752391, 0xCA79F666, 0x9CA9CC05, 0xD3E75814, 0xB61BC442, 0x1B365DDF);
	insert(0x00000000, 0x4827BD31, 0xC812935F, 0x917E1A41, 0xC95F0304, 0x12939FFA, 0x6559DECF, 0x71413EDC, 0xBA49D493, 0xF1D0519C, 0x67845CC0, 0xDF59FF19);
	insert(0x00000000, 0xE9581943, 0x3113C32F, 0x11113770, 0x3444DBDA, 0x1D464575, 0x5453848F, 0x79AA1E39, 0x08DC8A25, 0x40692DE5, 0x21AAF2A3, 0x64329604);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x7D766A65, 0x5E1E29CB, 0xC1810C1D, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x8810E69B, 0xF204E063, 0x8810E69B, 0x45B715ED, 0x00000000, 0xFB5052F3, 0xADA7455A, 0x99CD9B01, 0xF4AC4460, 0x06AB6D01, 0x303EFC31);
	init(eMod::eËïÎò¿Õ, "ËïÎò¿Õ");
	insert(0x00000000, 0xCD603016, 0x3FA3472C);
	insert(0x5380F79F, 0x5380F79F, 0x6C7F397F, 0x9616A05D, 0xCC84FA0E, 0x4E6CB35C);
	insert(104, 8, 8, 8, 8, 4);
	insert(0x00001114, 0x14692807, 0x2C4D8EC8, 0x14692807, 0xCCAC3F69, 0x6C1336EC, 0x6C1336EC, 0xE42F3F94, 0xB3A2B015, 0x5DE938BA, 0x6FF03AB0, 0x31B2CA29);
	init(eMod::eÉ³ºÍÉÐ, "É³ºÍÉÐ");
	insert(0x00000000, 0x69042416, 0x40488B18);
	insert(0xC17FB95F, 0xC17FB95F, 0x88BC4312, 0xC7166FC1, 0x2E02C410, 0xCE19FCE4);
	insert(100, 7, 7, 7, 7, 4);
	insert(0x00001115, 0x9E8754B2, 0xF58104E2, 0x9E8754B2, 0x13550448, 0x1D90BAA0, 0x1D90BAA0, 0xBB5DC671, 0x63DF2FE0, 0xFAADCE7F, 0xDAFF6024, 0x1E40F132);
	init(eMod::eò¿ÓÈ, "ò¿ÓÈ");
	insert(0xD0C8C11A, 0xA56931AA, 0x5822CC97);
	insert(0x5527B727, 0x7D68A42E, 0x7E6935F0, 0x3E86CF17, 0xABAB2922, 0x622FA242);
	insert(149, 13, 13, 13, 13, 12);
	insert({ 0 }, { 1 });
	insert(0x00001116, 0x00000220, 0x00000224, 0x00000221, 0x00000226, 0x00000217, 0x00000217, 0x00000222, 0x00000219, 0x00000225, 0x00000218, 0x00000223);
	insert(0x00001616, 0x5D1C654C, 0x62F5CF03, 0xB547D6C5, 0x84E89BDB, 0x37CC913E, 0x9938240A, 0xB95AC7D1, 0xA96AF127, 0x0C53745F, 0xCF27623F, 0x0E352C9C);
	init(eMod::eÖí°Ë½ä, "Öí°Ë½ä");
	insert(0x00000000, 0xBAFDAD60, 0x93557CA2);
	insert(0xE0FF30A7, 0xE0FF30A7, 0xB5E68A1E, 0x07578DD9, 0x45E8B59A, 0xA5794120);
	insert(122, 9, 9, 9, 9, 4);
	insert(0x00001117, 0x046ADE41, 0x85C12349, 0x046ADE41, 0xDE64A152, 0x1D7E5D02, 0x1D7E5D02, 0xAFF97BB0, 0x00C8DD73, 0x94C75679, 0xFD013477, 0x522B9A47);
	init(eMod::eºüÀê¾«, "ºüÀê¾«");
	insert(0xAFAD55A4, 0x9AB2C1B6, 0xE2BDA627);
	insert(0xD9AD51C9, 0xD9AD51C9, 0x86771CAE, 0xD2E58CBF, 0x1AA9CA9D, 0x2532917D);
	insert(74, 8, 8, 8, 8, 4);
	insert(0x5EEB9C73, 0xF20F8357, 0x106839A5, 0xF20F8357, 0xC7535935, 0xB4E430EF, 0xB4E430EF, 0xAF5DD531, 0xC6D7CC10, 0x70760D7C, 0x42D06952, 0xF250E0A3);
	init(eMod::e»ÆÃ¼¹Ö, "»ÆÃ¼¹Ö");
	insert(0x00000000, 0x00000000, 0xE300F089);
	insert(0x04AE10A2, 0xC6ECAB78, 0x82C78C10, 0x55AE0BEC, 0xABAB2922, 0x00000000);
	insert(116, 5, 7, 5, 12, 4);
	insert(0x00001119, 0x790BD1B7, 0x05B6E64F, 0x790BD1B7, 0x34713A17, 0x34C5779E, 0x34C5779E, 0xA49609CA, 0x03847C1E, 0xE425B3FE, 0x2BAD174A, 0x93117A64);
	init(eMod::eÅÝÅÝ, "ÅÝÅÝ");
	insert(0xF1706FCB, 0x035617B0, 0xFF17FA58);
	insert(0xE7086A2C, 0xE7086A2C, 0xF1B999FA, 0x8A752A12, 0x06BB2040, 0x7B5D7C46);
	insert(64, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x00001120, 0xA008B525, 0x7FBBA65B, 0xA008B525, 0x862AF120, 0xDA4C1796, 0xDA4C1796, 0xD357C75B, 0x68C7CDF5, 0x85C294BA, 0x9183EAD3, 0x4A4C8BCD);
	insert(0x00000000, 0xD98F0E8D, 0x58376F0E, 0xD98F0E8D, 0x2EE1F9EB, 0x74880C0F, 0x74880C0F, 0xB7A81712, 0x85B9593B, 0xD1A1B1D9, 0xD0F1C46A, 0x98F0F97F);
	init(eMod::eõùõ÷, "õùõ÷");
	insert(0x00000000, 0x00000000, 0x49A7562B);
	insert(0x048EB301, 0x048EB301, 0x5B58AAB2, 0xCB7EF3D1, 0xABAB2922, 0x00000000);
	insert(110, 4, 8, 4, 8, 4);
	insert(0x00001120, 0xD252E998, 0xF70F4844, 0xD252E998, 0x0EC64162, 0xC1816D39, 0xC1816D39, 0x048CC7DD, 0x0CC07284, 0x2E8C40EC, 0xD225AEF5, 0x4D10286A);
	init(eMod::eÖÜ½ÜÂ×, "ÖÜ½ÜÂ×");
	insert(0x00000000, 0x00000000, 0x962BD68A);
	insert(0x69DECDF8, 0x69DECDF8, 0x82C78C10, 0x318685B7, 0xABAB2922, 0x00000000);
	insert(92, 6, 6, 3, 3, 4);
	insert(0x00001121, 0x5DACE991, 0x1E12FFC4, 0xA81EA7D2, 0x3EBB092D, 0xAA5313BB, 0x7B6CA3D6, 0xAD73D867, 0xB67D1163, 0x31B65A0A, 0xB9C13DAB, 0xF2AE7F68);
	init(eMod::e³¬¼¶ÉñÁú, "³¬¼¶ÉñÁú");
	insert(0x34766E90, 0xAF34F9DE, 0xF9F462EF);
	insert(0xC6ECAB78, 0xC6ECAB78, 0x82C78C10, 0x318685B7, 0xABAB2922, 0x00000000);
	insert(80, 7, 7, 7, 7, 4);
	insert({ 0 }, { 1 });
	insert(0x00001122, 0x2D13702B, 0x00A896B4, 0x7B124653, 0x8EF2B2EA, 0xDFA6DE9E, 0x66228768, 0x4BDF7C85, 0x78251D69, 0x79C51CA1, 0xDF0E983C, 0x239308B1);
	insert(0x00001122, 0x5FF3EEFD, 0xDC2C33F6, 0x5949EC31, 0x3B42F8B4, 0x6F1EE22E, 0x83D92AE3, 0x165542AE, 0x97AD4D51, 0x4A238044, 0x0E167636, 0xF49E974E);
	init(eMod::eÕÂÓã, "ÕÂÓã");
	insert(0x8CB06DED, 0xC701081D, 0x4111B83B);
	insert(0x0324EFA2, 0x0324EFA2, 0x82C78C10, 0x0071B681, 0xABAB2922, 0x00000000);
	insert(68, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x00001124, 0x186A43E9, 0xA09FA982, 0x3213A07E, 0xC5B7EF91, 0x10D23AFA, 0x10D23AFA, 0xDD61EA80, 0x0DFB1D14, 0x60B693AB, 0x17F264C3, 0x43F80D95);
	insert(0x00000000, 0xA22162BA, 0x14F8423B, 0x755DEDBC, 0xA33259ED, 0x599CD8B9, 0x599CD8B9, 0x101CA1CB, 0xBA7F6112, 0xCC5BF54D, 0x88BF6138, 0x891B6514);
	init(eMod::eÀê, "Àê");
	insert(0x20ED8F8F, 0xBD62D8A1, 0xFDDAB4FC);
	insert(0xB519CF62, 0xB519CF62, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(77, 5, 5, 5, 5, 4);
	insert({ 0 }, { 0, 1 });
	insert(0x00001125, 0x3CDBAFB2, 0x0E6210D6, 0xAA452502, 0xD1153369, 0xB6DB9CCB, 0xB6DB9CCB, 0x897A5492, 0xF0ACEB35, 0x2112F5F7, 0xFF27CA9E, 0xF26E81DC);
	insert(0x00000000, 0x528BFDC0, 0x1F1B1BC1, 0x4ABA3E1D, 0x42D6AE71, 0xC76FBB00, 0xC76FBB00, 0xF4EBB0E4, 0xCA669286, 0xCB40BEC3, 0x8A931E88, 0x3EF32EA9);
	init(eMod::eº£ÐÇ, "º£ÐÇ");
	insert(0xF903F3A5, 0xF6FC4C5E, 0xDDB1800D);
	insert(0x020E840D, 0x020E840D, 0x82C78C10, 0x55AE0BEC, 0xABAB2922, 0x00000000);
	insert(50, 7, 7, 6, 6, 4);
	insert(0x00001126, 0x7260A22B, 0x71253EE7, 0x19F4F169, 0x9700A3F8, 0xAE5C76F4, 0x55BA236D, 0x30FC49F4, 0xB1E2C93E, 0x4F0800B0, 0x4AA0CD72, 0x0ADE0507);
	init(eMod::e»ðÐÇÈË, "»ðÐÇÈË");
	insert(0xC6ECAB78, 0xC6ECAB78, 0x82C78C10, 0x55AE0BEC, 0xABAB2922, 0x00000000);
	insert(15, 7, 7, 7, 7, 4);
	insert(0x00001127, 0xBFCA22B3, 0xC69C5C9B, 0xBFCA22B3, 0x0CD46D49, 0xA2A59267, 0xA2A59267, 0xC21FDC40, 0xF7A4F1E2, 0x54164C29, 0x046D74A8, 0x6144B148);
	init(eMod::e×ªÂÖÍõ, "×ªÂÖÍõ");
	insert(0x00000000, 0x00000000, 0x266D7180);
	insert(0xFFA06CFD, 0xFFA06CFD, 0x82C78C10, 0x318685B7, 0xABAB2922, 0x00000000);
	insert(61, 6, 6, 6, 6, 4);
	insert(0x00001128, 0xA5B436EE, 0x558B14D5, 0xA5B436EE, 0xE5AB6916, 0x15F50CFF, 0x15F50CFF, 0x21B6E8AA, 0x9402033C, 0x455697FE, 0x09152660, 0x883B1581);
	init(eMod::e¾ÅÍ·¾«¹Ö, "¾ÅÍ·¾«¹Ö");
	insert(0x00000000, 0x00000000, 0xFB43BB92);
	insert(0x4B2192DE, 0x4B2192DE, 0xA2DF0A8C, 0xCD5DB9B5, 0x599302F7, 0xDEC5C927);
	insert(100, 8, 8, 8, 8, 4);
	insert(0x00001129, 0x7CAF3ABB, 0x0B8285F9, 0x7CAF3ABB, 0x6C396AD2, 0xC9EC64BB, 0xC9EC64BB, 0xBB56EF5A, 0x540D1100, 0xCEF45818, 0x92F0C045, 0x5B2FE6A5);
	init(eMod::eÌÚÉß, "ÌÚÉß");
	insert(0x1554198D, 0xB118ECE8, 0x66F2BEB4);
	insert(0xF23AC3E3, 0xF23AC3E3, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(106, 5, 5, 5, 5, 4);
	insert(0x00001130, 0x277A9966, 0x06F52F0B, 0xBEB42B08, 0x8CFB271D, 0x2D55C711, 0x2D55C711, 0x212B61B8, 0xF4DDF4C7, 0x0ADF554C, 0x194B0A66, 0x14D8E03F);
	init(eMod::e¶«º£ÁúÍõ, "¶«º£ÁúÍõ");
	insert(0x00000000, 0x00000000, 0xECF36B2F);
	insert(0x4D7EA2D5, 0x2742826F, 0x82C78C10, 0x4EF4DFD8, 0xABAB2922, 0x00000000);
	insert(45, 6, 6, 5, 5, 4);
	insert(0x00001131, 0x810E3469, 0x77748072, 0x263C28F5, 0xEA1FB934, 0x12062DFD, 0xA730EB06, 0xD8AC6ADA, 0x0623BF6C, 0xB45AC1CB, 0xA9135905, 0x325826A0);
	init(eMod::eËïÆÅÆÅ, "ËïÆÅÆÅ");
	insert(0x00000000, 0x00000000, 0xEEB6DF92);
	insert(0xC257A5FC, 0xC257A5FC, 0x579A2C22, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(76, 5, 5, 6, 6, 4);
	insert(0x00001132, 0x81F4F89D, 0x600BA182, 0xFBB05C33, 0x6F41C860, 0x44EE03AD, 0x8ACDDCAE, 0x7E2E23A0, 0x60F5A1CF, 0xEED0BF37, 0x06F4EEC5, 0xAA845245);
	init(eMod::eÅ£Ä§Íõ, "Å£Ä§Íõ");
	insert(0x44829CE3, 0x00000000, 0x83547F15);
	insert(0x7367F92D, 0x7367F92D, 0xD83F2F50, 0x2E4AD8BD, 0xABAB2922, 0x5466C5FF);
	insert(92, 8, 8, 8, 8, 4);
	insert(0x00001133, 0x5867F741, 0xFBB7A2A2, 0x0B69B44D, 0xD8CFAC15, 0xC18A0B9F, 0xDFAB4445, 0x65EB0501, 0xC096C013, 0x90BB1A9E, 0x113CB79E, 0x543D78D5);
	insert(0x00000000, 0x1D540BCC, 0xB634FF7C, 0x64E51B02, 0x393490E0, 0x2046CB95, 0x7EB345C1, 0x703CE097, 0xEA2D469F, 0x7DC329CE, 0x96B0A572, 0xC73ADA17);
	init(eMod::eÕòÔª´óÏÉ, "ÕòÔª´óÏÉ");
	insert(0x00000000, 0x00000000, 0x648449CE);
	insert(0xF23AC3E3, 0xF23AC3E3, 0x558E3DEF, 0x0071B681, 0xABAB2922, 0x00000000);
	insert(62, 8, 8, 10, 10, 4);
	insert(0x00001134, 0x22406E66, 0x5E8CC3F3, 0x75CDF97C, 0x578BA3B5, 0x9E9D4886, 0x9F64FB32, 0x16385B4D, 0xAE592351, 0x5AD58D24, 0x054F4C87, 0x9517238B);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0A927EB1, 0x00000000, 0x8C59AB3B, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÆÐÌá×æÊ¦, "ÆÐÌá×æÊ¦");
	insert(0x00000000, 0x00000000, 0x8D656188);
	insert(0x86BB0969, 0x86BB0969, 0x30891C35, 0x5B58AAB2, 0xABAB2922, 0x00000000);
	insert(57, 10, 10, 9, 9, 4);
	insert(0x00001135, 0x2073F650, 0x31B5E0BE, 0x2073F650, 0x88BE1E61, 0xBF5273C3, 0x0A0ED7C6, 0xFC7EAE69, 0x0ACD5800, 0xE84C322A, 0xEF5514E5, 0x1331085B);
	init(eMod::e°×¾§¾§, "°×¾§¾§");
	insert(0x00000000, 0x00000000, 0xDA313059);
	insert(0xFF5D1930, 0xFF5D1930, 0x6642FAB0, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(69, 4, 4, 14, 14, 4);
	insert(0x00001136, 0xF5D47E2E, 0x9957A256, 0xF5D47E2E, 0x2B6371A2, 0x7963E3C2, 0xE1D303C3, 0x0D45D160, 0xEF4D4EBB, 0x7FE8694C, 0xE702BDC7, 0x164C2F9C);
	init(eMod::eÓÄÓ©ÍÞÍÞ, "ÓÄÓ©ÍÞÍÞ");
	insert(0x85A4CDA2, 0x74988FAA, 0x9CAD68C1);
	insert(0x9C1DCFE6, 0xFF1A6ACE, 0x9AE1E54D);
	insert(0x7CF4CEBF, 0x7CF4CEBF, 0xD1BFFA42, 0x6F48B653, 0xABAB2922, 0x00000000);
	insert(86, 6, 6, 6, 6, 4);
	insert({ 0 }, { 0, 1 }, { 2, 4 }, { 2, 3, 4 });
	insert(0x00001137, 0xFECECDED, 0x7FFE52A5, 0xE4992631, 0x5A9478EF, 0x92A04679, 0xF3AB0463, 0x440F8F46, 0x3288E292, 0x199C1663, 0xF37D30C4, 0x140C0320);
	insert(0x00000000, 0x34DFB0CD, 0xC8E92DFF, 0x115CA397, 0xED326C67, 0xB8CDD6FC, 0x886E00E2, 0x9C38A07B, 0x1FD55467, 0x865C4912, 0x04B2E753, 0x71476824);
	insert(0x00001637, 0x11FF6780, 0x3A093FAF, 0x70E6A2AE, 0x95212E44, 0x7554F1D9, 0xDEE2BA96, 0x2D71552F, 0xDEEF16AF, 0x307C8AB4, 0xAA744C4F, 0x0E48C1C1);
	insert(0x00000000, 0x666A621F, 0x4EDE2B23, 0xC87600B8, 0x52621DA0, 0x302B3BFF, 0xF03EE259, 0xDEA47D67, 0x242717E2, 0xBE6CE314, 0x83DE3D7A, 0xDB5D647C);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xE9581101, 0xA71DFBA1, 0x2314C566, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÀî¾¸, "Àî¾¸");
	insert(0x00000000, 0x00000000, 0xDAE855F8);
	insert(0x027E9843, 0x027E9843, 0x5B58AAB2, 0x318685B7, 0xABAB2922, 0x00000000);
	insert(60, 7, 7, 7, 7, 4);
	insert(0x00001138, 0x2596EC14, 0x431A24FA, 0xB760B5CC, 0x67AA2B8A, 0x6A0DEC0F, 0x90682983, 0x14867FC2, 0xA14063D6, 0x8996BF86, 0xBDA4348A, 0x164CD389);
	insert(0x00000000, 0x492EEF88, 0x9FCB54F2, 0x492EEF88, 0xDAB186E4, 0x704B4C72, 0x79763AD1, 0x960983B8, 0xFD2C04F1, 0x16504675, 0xD7FDDE24, 0xB003CCC2);
	init(eMod::e³ÌÒ§½ð, "³ÌÒ§½ð");
	insert(0x00000000, 0x00000000, 0x58A56B36);
	insert(0x04C8EF50, 0x04C8EF50, 0x82C78C10, 0xCB7EF3D1, 0xABAB2922, 0x00000000);
	insert(73, 11, 11, 9, 9, 4);
	insert(0x00001139, 0xE1A120FF, 0x58F4B663, 0xE1A120FF, 0xD99529D8, 0xEE96905A, 0xD3E3A473, 0x15125FC7, 0x87EF3814, 0x5868EDBE, 0xB41DCF3F, 0x594994E9);
	init(eMod::eµØ²ØÍõ, "µØ²ØÍõ");
	insert(0x00000000, 0xDABD9C04, 0xE9F0579D);
	insert(0x60BDCBCB, 0x60BDCBCB, 0x82C78C10, 0xCB7EF3D1, 0xABAB2922, 0x00000000);
	insert(90, 4, 4, 8, 8, 4);
	insert(0x00001140, 0x3A11C300, 0x32C68CC9, 0x3A11C300, 0xD13E1FFF, 0xD572D8E4, 0xDBC25AB2, 0x1A7C6CAC, 0x4E4C9223, 0xA8312FDB, 0x7AD0002B, 0x3FD0D0BD);
	init(eMod::e¹ÛÒô½ã½ã, "¹ÛÒô½ã½ã");
	insert(0x00000000, 0x00000000, 0x8C4AEEA9);
	insert(0x4B1E3E30, 0x4B1E3E30, 0x952C5951, 0xDA484977, 0xABAB2922, 0x00000000);
	insert(75, 7, 7, 7, 7, 4);
	insert(0x00001141, 0x0405C585, 0xF9F80A42, 0x0405C585, 0xF45349EA, 0x93DC0379, 0xABC48778, 0x2ECAAEEF, 0xD503EE2F, 0x5D49F27C, 0x471104A5, 0x5D4BC070);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x94596B0C, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¿Õ¶ÈìøÊ¦, "¿Õ¶ÈìøÊ¦");
	insert(0x00000000, 0x00000000, 0xA248A88A);
	insert(0x72FE4A7D, 0x72FE4A7D, 0xB41F1836, 0x7E10D0DB, 0xABAB2922, 0x1D14F825);
	insert(46, 5, 5, 8, 8, 4);
	insert(0x00001142, 0xB73531B1, 0x06EA6E77, 0xB73531B1, 0x987B611D, 0x3674178B, 0xD5F72B15, 0x5B721A00, 0xBD41CBB0, 0x4308F507, 0xAC761E66, 0xD1C64CB1);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xCA02D49E, 0xACB80E59, 0xB2458366, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e´ó´óÍõ, "´ó´óÍõ");
	insert(0x00000000, 0x00000000, 0x1CDF6FF5);
	insert(0x79D4BAA1, 0x79D4BAA1, 0x3E9FC323, 0x48B2F4AF, 0x65FB00E1, 0x26E14A56);
	insert(65, 8, 9, 4, 4, 4);
	insert(0x00001143, 0xCE62A786, 0xAD23D962, 0xCE62A786, 0xBE283FFC, 0x99871326, 0xBD490B9E, 0xD5A6A3B1, 0xF8EE8A5D, 0x5E8396A5, 0xD9B62122, 0x8F75AEC7);
	init(eMod::eÐ¥ÌìÈ®, "Ð¥ÌìÈ®");
	insert(0x00000000, 0x00000000, 0x6F7E5529);
	insert(0xC5A7004A, 0xC5A7004A, 0xBAC4BDED, 0xE50E1812, 0x1C554554, 0xA16A8716);
	insert(46, 8, 8, 7, 7, 4);
	insert({ 0 }, { 1 });
	insert(0x00001144, 0xE2F56A21, 0xEE55164B, 0x39796CC6, 0xE873A88F, 0x67B9A21D, 0xAEC5D0D9, 0xEC8A08AA, 0xFB2593E3, 0x1D94428C, 0xD926D7D7, 0x892CF6CE);
	insert(0x00001149, 0x09351393, 0x8A284760, 0xDE1355D4, 0x603FCBF9, 0xAA0683ED, 0xE06F5D8A, 0xEBB6057C, 0x80599206, 0x9856C8FF, 0xFB7E93DE, 0x02572BF6);
	init(eMod::eµØÓ¿·òÈË, "µØÓ¿·òÈË");
	insert(0x00000000, 0x00000000, 0x4B343272);
	insert(0x9B2AAE02, 0x9B2AAE02, 0xCD056677, 0xC72BDF69, 0xABAB2922, 0x467012A9);
	insert(60, 4, 4, 4, 4, 4);
	insert(0x00001145, 0xCA07B7B2, 0xE46EA6C3, 0x2EDEAF19, 0xA69241A0, 0x3AE7A8F2, 0x78F227D8, 0x65192B88, 0x5E0EFF3A, 0xC4FD3D4D, 0xD4124C46, 0x53DDB16A);
	init(eMod::e¶þÀÉÉñ, "¶þÀÉÉñ");
	insert(0x00000000, 0x00000000, 0x57CCD052);
	insert(0x81B89F88, 0x81B89F88, 0x2E7C9873, 0xD0566D8B, 0xABAB2922, 0x00000000);
	insert(90, 5, 5, 5, 5, 4);
	insert(0x00001146, 0x1F5F4404, 0xF87DE3EF, 0x894CBF63, 0x829CFEA0, 0x3C04B467, 0x0AF3DDAD, 0x3304B122, 0xFDEB3130, 0xCFD07D68, 0x506FB295, 0x4D6B7663);
	init(eMod::eÕ¼²·Ê¦, "Õ¼²·Ê¦");
	insert(0xD5941BB1, 0x00000000, 0x2F728796);
	insert(0x8877C021, 0x5AAB57AF, 0xB776A1D2, 0x0A92893B, 0xEE46BA84, 0x271EA0C7);
	insert(53, 5, 5, 5, 5, 4);
	insert(0x00001147, 0xB692F3E2, 0xD569F35B, 0x3C76D8F5, 0xE2F35B90, 0x51493CA4, 0x51493CA4, 0xA5AE9914, 0x5DACB03A, 0x57C06F84, 0x3667C87D, 0x53845609);
	init(eMod::eÎ×¿ü»¢, "Î×¿ü»¢");
	insert(0x00000000, 0x00000000, 0x7ABE5099);
	insert(0x18122891, 0x18122891, 0xBB6F0444, 0x5B58AAB2, 0xABAB2922, 0x00000000);
	insert(87, 7, 7, 3, 3, 4);
	insert(0x00001148, 0x062150F6, 0x922CB5F2, 0xA9DD17BC, 0x4BC4A592, 0xAB3F493A, 0x3D7718F1, 0x0D6E6F43, 0x4286FB27, 0xA1C77A74, 0x6DED77DA, 0xE217FC34);
	init(eMod::e³¬¼¶ÓñÍÃ, "³¬¼¶ÓñÍÃ");
	insert(0x00F276B5, 0x00F276B4, 0x00F276B6);
	insert(0x0023CACE, 0x054C5638, 0x0006F855, 0x0034BF15, 0xABAB2922, 0x0023CACE);
	insert(70, 9, 9, 12, 12, 4);
	insert({ 0, 3 }, { 0, 1, 3 }, { 0, 2, 3 }, { 0, 2, 3 });
	insert(0x00001127, 0x1DA4FE4F, 0x7E1310CA, 0x42C85368, 0x254E8F14, 0xB9EB5837, 0x4FE172A9, 0xDA0F4915, 0xFBF07F14, 0xA0EBB5DA, 0x6C8E114F, 0x5DB85CBF);
	insert(0x00000000, 0x2C3548B5, 0x89223D7B, 0x5D5BC343, 0x82907F23, 0xFB9CB18B, 0xDF580E89, 0xF8009E32, 0x9A113FAE, 0xFC108242, 0xC076D1B9, 0xCF40AF91);
	insert(0x00000000, 0xDED8A2F2, 0x3E1249F4, 0xE3B00B39, 0xDC456DCB, 0x4FF7576B, 0x55218670, 0x34244C6D, 0x3ED935C2, 0x3AC224DB, 0x1F9F5652, 0xE2A80FF3);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x54AB99C8, 0x5F8D0A1F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00001127, 0x5A396A2F, 0x5A396A30, 0x5A396A2B, 0x5A396A32, 0x5A396A2E, 0x5A396A34, 0x5A396A33, 0x5A396A2D, 0x5A396A2A, 0x5A396A2C, 0x5A396A31);
	init(eMod::e³¬¼¶¿×È¸, "³¬¼¶¿×È¸");
	insert(0x4AC8F5DE, 0x443DEFFC, 0xF0085B15);
	insert(0xF40B5A22, 0xF40B5A22, 0x2921D342, 0x68D2E918, 0xABAB2922, 0xD4AE1744);
	insert(70, 8, 8, 3, 3, 4);
	insert({ 0 }, { 1 });
	insert(0x00001150, 0xF225F2D5, 0x1D87262C, 0xBD7EF6B7, 0xAAA22A21, 0x51ABC63B, 0x6B382C76, 0x4444BECA, 0xD0829F8F, 0x4E033690, 0x3A6A756E, 0x5F77749E);
	insert(0x00001150, 0x6A788030, 0x6F734AC2, 0xC5BD436C, 0xDD1B6B4A, 0xF3C41015, 0x0504A51B, 0xD05DC9EB, 0xB553702F, 0x6B62E486, 0x8378F293, 0x40C0030B);
	init(eMod::e³¬¼¶Áéºü, "³¬¼¶Áéºü");
	insert(0x3B5A1A91, 0xA84A8DA4, 0xF44C4B78);
	insert(0x2A06235C, 0xC2152ECF, 0x82C78C10, 0x54B8E946, 0x9888D80D, 0x00000000);
	insert(80, 7, 7, 6, 6, 4);
	insert({ 0 }, { 1 });
	insert(0x00001151, 0x4FDE0C86, 0x90E6F577, 0xAE6FFCA4, 0xBE8856EE, 0x30CA6EF0, 0x5AC8F9C2, 0xAEB15C0B, 0x046E69D3, 0x6945703C, 0x3CE12B04, 0xC4AA0EF2);
	insert(0x00001151, 0xB45739B6, 0x667BFD7B, 0x83B6301C, 0x7E850C9B, 0xAC07EE00, 0x9D3B0167, 0xD11C3E29, 0x12B7F915, 0x094B19E8, 0xE66363B4, 0xEBDBC670);
	init(eMod::e³¬¼¶ÉñÉß, "³¬¼¶ÉñÉß");
	insert(0x5C1C53DF, 0x13F12535, 0xBB449983);
	insert(0x86BB0969, 0x86BB0969, 0x82C78C10, 0x4EF4DFD8, 0xABAB2922, 0x00000000);
	insert(100, 4, 4, 8, 8, 15);
	insert({ 0 }, { 1 });
	insert(0x00001152, 0x5B9D0DCC, 0xDD52C93A, 0x6E041547, 0xDD52C93A, 0x620DD7B0, 0x3095AC63, 0x0D8E10A7, 0x683DDDAE, 0xC87B8D00, 0x7F0704A7, 0x2D523061);
	insert(0x00001152, 0xB94403FE, 0x94E21235, 0x6EA5597F, 0x9911DED2, 0x7AD386DF, 0xA6BA684D, 0xB255F50B, 0x6CDDC04D, 0x55E342FC, 0x7BBEC060, 0x2B8CCB15);
	init(eMod::e³¬¼¶ÉñÂí, "³¬¼¶ÉñÂí");
	insert(0x212B8B39, 0xFB118648, 0x3AB6C3F3);
	insert(0x578991A9, 0x578991A9, 0xF32FAB3A, 0x2E89E4D6, 0x2190FDCA, 0x205F1F2C);
	insert(93, 5, 5, 5, 5, 4);
	insert({ 0 }, { 1 });
	insert(0x00001153, 0x39FD22ED, 0xABEBBD99, 0x29221139, 0xA5FA9B14, 0xAD05ACB0, 0xDAFF18F4, 0x0C62BBCC, 0x45A40E19, 0x56733013, 0x2E58A599, 0x9047C01C);
	insert(0x00001153, 0x7F354CC7, 0xEB15762A, 0x0B9AC09C, 0xC198AE91, 0xFAE30A85, 0x54E2C4FC, 0xBB81A407, 0xCDEE504D, 0x2803B38C, 0x815821B5, 0x327D72A7);
	init(eMod::e³¬¼¶Çàð½, "³¬¼¶Çàð½");
	insert(0xD085CF36, 0x09C4A188, 0xC0A7E9B1);
	insert(0xD279B0C7, 0xD279B0C7, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(95, 6, 6, 4, 4, 4);
	insert({ 0 }, { 1 });
	insert(0x00001154, 0xE10AB87A, 0xAEEFFEB2, 0x780A7A13, 0x43ACA988, 0x1ACC1EEA, 0x31119883, 0x381F5E32, 0xC5CF4D09, 0x16F3413F, 0x46A1DC93, 0x1E39D673);
	insert(0x00001154, 0xC1E9A273, 0x5A74E42F, 0x22ADF5E1, 0xC369D5F9, 0x4E372650, 0xD2494FBC, 0x35EFB4DC, 0x99A6AED4, 0x7013F056, 0x136F530A, 0x3CA1C679);
	init(eMod::e³¬¼¶÷è÷ë, "³¬¼¶÷è÷ë");
	insert(0xCD8DC32B, 0xF0CF707B, 0x2AFEF029);
	insert(0xAB099CAF, 0xAB099CAF, 0xC310E17D, 0x2626293E, 0x82A962F2, 0x8D63F17B);
	insert(72, 6, 6, 5, 5, 4);
	insert({ 0 }, { 1 });
	insert(0x00001155, 0xC7EAC3F1, 0xD719314F, 0x5DC917BD, 0xC120C56F, 0xD6F16CB5, 0xEBE564E7, 0x1F33C964, 0xB7E3B65C, 0xBF82889B, 0x6728CEFF, 0x46851BDF);
	insert(0x00001155, 0xFF1A400D, 0x22AB1D22, 0x481CF06B, 0x3F2F2665, 0x8B975642, 0x9CEBC627, 0x51E4D7C2, 0xFE90C7E8, 0x04B94943, 0x6CF41D88, 0xE660B37D);
	init(eMod::e¾ÅÉ«Â¹, "¾ÅÉ«Â¹");
	insert(0xDD000E7B, 0x7E77B841, 0x851ED1C6);
	insert(0x36A153F9, 0x36A153F9, 0x1CB6183D, 0x4EF4DFD8, 0xABAB2922, 0x00000000);
	insert(62, 9, 9, 7, 7, 4);
	insert(0x00001156, 0x746AC442, 0x3973278F, 0x746AC442, 0x22518607, 0x25286A3A, 0x5959A126, 0x676EB44D, 0xFF13CB78, 0xEB9B2D80, 0x0EC48D75, 0x5C2D78CF);
	init(eMod::e³Ö¹úÑ²ÊØ, "³Ö¹úÑ²ÊØ");
	insert(0x8F038D77, 0xDC166219, 0xA684CDBD);
	insert(0xD5DF37EC, 0x3C633096, 0x8E0E0A44);
	insert(0xBC86BD0A, 0xBC86BD0A, 0x5B58AAB2, 0xCB7EF3D1, 0xABAB2922, 0x4A973C8E);
	insert(80, 8, 8, 8, 8, 7);
	insert({ 0, 1, 5 }, { 0, 2, 5 }, { 3, 6 }, { 3, 4, 6 });
	insert(0x00001157, 0x98BDB61A, 0x3A55967E, 0x784101C7, 0x86FB90B6, 0x84CB0E62, 0x8EEFF02C, 0x917EAD51, 0xBA687362, 0xC73246A6, 0xB367E3EE, 0x60BF7629);
	insert(0x00000000, 0xDBDE3C54, 0x10593FDB, 0x808D7DB0, 0x2285D8DA, 0x4BDEC579, 0x7062939A, 0x1CC2CC7F, 0x62BBBE35, 0x693B6570, 0x5F8742D4, 0x810AC543);
	insert(0x00000000, 0xF92CDC30, 0xDA8E452B, 0x28F2180E, 0x65CFF2A5, 0x1D16D5B6, 0xAF59E387, 0xA0B1F1DF, 0xD3805DD8, 0x25B3888E, 0xD4BC4D3F, 0xEEFFD6B5);
	insert(0x00001657, 0x990FC5A1, 0xA5E9EF08, 0x45763667, 0xCCC693A8, 0xACCB92CC, 0x1FD31FF6, 0x5CFD0CC0, 0xCF762FBB, 0x6F97964A, 0x5AC5EAC2, 0xD447E4B2);
	insert(0x00000000, 0x69890EBD, 0x1672D173, 0x7DB786D9, 0xC1032970, 0x6FDB5ACC, 0x9F3C7E23, 0x56916F3B, 0x49031A87, 0x12945E04, 0x15D11B5C, 0xA141E667);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xEA995304, 0xF2662308, 0xA1041D6D, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xFA30944C, 0xDDC3E82D, 0xB2045A0A, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶ÉñÑò, "³¬¼¶ÉñÑò");
	insert(0x85603ADA, 0xE8841FF2, 0xDBFBE4AD);
	insert(0x95FC915C, 0x95FC915C, 0x463A9D7C, 0x46296C68, 0x9E9EF723, 0x1312C9DC);
	insert(70, 3, 3, 7, 7, 6);
	insert({ 0, 2 }, { 1, 3 });
	insert(0x00001158, 0x994182A0, 0x7C69EEEC, 0xCB933F83, 0x4B3532CD, 0x67D9B9A1, 0xCD16A816, 0x68DC7ED6, 0x89C82925, 0x488007D0, 0x3C9CAF3D, 0x6ED89C42);
	insert(0x00001158, 0x2296B535, 0x4441ECB7, 0x68BC67E8, 0xBF961C95, 0x116605E1, 0x7E60BB6C, 0x26A9EF1F, 0x4312B448, 0x139C8FF3, 0xC162B3F3, 0x874CFA47);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x5C40C9CE, 0x2451D0C2, 0x35DD725B, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x63D5219A, 0x5FB77EDF, 0x35DD725B, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶Áù¶úâ¨ºï, "³¬¼¶Áù¶úâ¨ºï");
	insert(0x2DEC09F9, 0x4EDDACD0, 0x41C69D1E);
	insert(0x5380F79F, 0x5380F79F, 0x6C7F397F, 0x9616A05D, 0xCC84FA0E, 0x4E6CB35C);
	insert(60, 12, 12, 13, 13, 5);
	insert(0x00001159, 0x0D9EBABC, 0x6EC709E1, 0x5AE939F4, 0xDE8F6E5A, 0x658531AB, 0xBFB3306A, 0x68108E38, 0xDE8FCD95, 0xE93C3E81, 0xF45D1F93, 0xACD2514F);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x21D839A3, 0x296BD86B, 0xE762A017, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÅþÉáÍ¯×Ó, "ÅþÉáÍ¯×Ó");
	insert(0x47FA6C7C, 0x29C2068F, 0xDEE48C77);
	insert(0x898D54DA, 0xCE1979FF, 0x10B40E5B);
	insert(0x2A06235C, 0x2A06235C, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(80, 6, 6, 10, 10, 5);
	insert({ 0, 5 }, { 0, 1, 5 }, { 2, 3, 6 }, { 2, 4, 6 });
	insert(0x00001160, 0x9B022221, 0x3AEB838B, 0x60D45B9C, 0x71BFCD9C, 0xF449F7B5, 0x15A6778D, 0x371990E9, 0xFC2044B9, 0xF63A1857, 0x3976A73D, 0xE7DD6CBE);
	insert(0x00000000, 0xFC953B22, 0x02302EA1, 0xB24353BD, 0x84328085, 0x54297F83, 0x3994DA3A, 0xAC92D991, 0x79EC5379, 0x21F96FC4, 0x616C7807, 0x349C5F8A);
	insert(0x00001660, 0x16AF10BA, 0xBA4E18FC, 0x7C15F7DE, 0x1C29D8BC, 0x1A04C90E, 0x0AF863CF, 0x1CB769CA, 0x42A2E9E0, 0x40D008F4, 0xCCDDD94C, 0x1374B7F4);
	insert(0x00000000, 0xB953D04F, 0xE0DFAA3B, 0x2090CD58, 0xF3809653, 0x5EB5809C, 0xEC33FC29, 0xEC27B7C7, 0xBA313F1D, 0xD2096B29, 0xB97A1FB7, 0x035D3377);
	insert(0x00000000, 0x2E667B16, 0xB4B98E34, 0xD8889A17, 0xDA5B6CF9, 0x7617EB84, 0x9F573325, 0x820B8C89, 0x704014FD, 0xB931B053, 0xA052100D, 0x1A00A800);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x9871D7CD, 0x725F1DF7, 0x13AF98E4, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xF75396E5, 0x1763975B, 0xED474523, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÕæÍÓ»¤·¨, "ÕæÍÓ»¤·¨");
	insert(0xFD534DBF, 0xD76F4018, 0xFFBCDA90);
	insert(0x3BF2EE43, 0xD9E7E041, 0x448482C6);
	insert(0x2A06235C, 0x2A06235C, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(70, 6, 6, 9, 9, 9);
	insert({ 0, 1, 6 }, { 0, 2, 6 }, { 3, 4, 7 }, { 3, 5, 7 });
	insert(0x00001161, 0x9F386CE9, 0xA0A4FCCE, 0x6C19FF7F, 0xF227C233, 0xD433484F, 0xC48F78A0, 0x5AB8D8B7, 0x281836EE, 0x83B1AB72, 0x439AD1EF, 0x5B45325A);
	insert(0x00000000, 0x3AC2C970, 0x0155F7E6, 0x7ECE7677, 0x773C6119, 0xFAE8742D, 0x2E9DD597, 0x1E0B54B2, 0x8E37564F, 0x0B9071A9, 0xA56CC3EF, 0xFCFA492C);
	insert(0x00000000, 0x7F27F1A9, 0xB55EAE46, 0x119A18A5, 0xE2DD0587, 0x38A10DBC, 0xD232A413, 0xEDCDDD44, 0x546B6920, 0xD62BA99E, 0x85358EF6, 0xAE69DB79);
	insert(0x00001661, 0x06B907B8, 0x0E6CDB9E, 0x56F4A8CE, 0x2D2984EB, 0xA20D1FB9, 0x2DDCB61A, 0xE9AAD573, 0x8F0BE3CC, 0x31ABF075, 0x2070E3B1, 0x6F06DCB7);
	insert(0x00000000, 0x25CA9002, 0x668A49E3, 0x6EA65783, 0xD85DECF6, 0xF7088AA8, 0x696DC25C, 0xB3F86A1F, 0x1F17C455, 0x48182F46, 0x013EEA44, 0x55BDE154);
	insert(0x00000000, 0xF1671D1E, 0xA8D36880, 0x0D94451F, 0xA6273DC4, 0x399934F0, 0xF656CE7D, 0x37D65A3E, 0x0367F80B, 0x2DDC9C00, 0xB76C8B0B, 0x94641A55);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xEC025A5E, 0x9816F95D, 0xDE773AC7, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x1ECF6D90, 0xF9F0399D, 0x0C453A2F, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e¾µÑý, "¾µÑý");
	insert(0x00000000, 0x2632B907, 0x657FBBE2);
	insert(0x00000000, 0x36D0A7F0, 0x123C6106);
	insert(50, 6, 6, 6, 6, 5);
	insert({ 0 }, { 0, 2 }, { 1, 3, 4 }, { 1, 3, 4 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÀáÑý, "ÀáÑý");
	insert(0x9095F45E, 0x007CCCDB, 0x2E032526);
	insert(0xAE67D62E, 0xD92AAE2F, 0x4A4BCD11);
	insert(50, 7, 7, 7, 7, 5);
	insert({ 0, 3 }, { 0, 2, 3 }, { 1, 4 }, { 1, 2, 4 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÇÙÏÉ, "ÇÙÏÉ");
	insert(0x767B5ADF, 0x0D26E185, 0x37AB386F);
	insert(0x00000000, 0x00000000, 0x14E19BCE);
	insert(70, 6, 6, 7, 7, 5);
	insert({ 0, 2 }, { 1, 3 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e½ðîóÉ®, "½ðîóÉ®");
	insert(0x00000000, 0x4F7F6856, 0x56EC97B7);
	insert(0xAF9B8C7A, 0x7D03C394, 0x82EA677D);
	insert(70, 7, 7, 5, 5, 5);
	insert({ 0, 2, 6 }, { 0, 4, 7 }, { 1, 3, 6 }, { 1, 5, 7 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁéµÆÊÌÕß, "ÁéµÆÊÌÕß");
	insert(0x00000000, 0x4883A916, 0x5365A558);
	insert(0x00000000, 0xB356762F, 0xA80F234A);
	insert(70, 9, 9, 7, 7, 5);
	insert({ 0, 2 }, { 0, 3 }, { 1, 4, 6 }, { 1, 4, 5, 6 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÔö³¤Ñ²ÊØ, "Ôö³¤Ñ²ÊØ");
	insert(0xD5C9E162, 0x618A19B3, 0x35F2BD1E);
	insert(0x736BF280, 0x4F47A21E, 0x1EA94960);
	insert(70, 5, 5, 5, 5, 5);
	insert({ 0, 3, 6 }, { 0, 4, 6 }, { 1, 2, 7, 6 }, { 1, 2, 5, 6 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e°ãÈôÌìÅ®, "°ãÈôÌìÅ®");
	insert(0x1D585652, 0xA4E9EA96, 0x72763F59);
	insert(0x00000000, 0x00000000, 0xD0EF876C);
	insert(50, 7, 7, 7, 7, 5);
	insert({ 0, 2 }, { 0, 3 }, { 1, 4, 7 }, { 1, 5, 6, 7 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÑ©ÈË, "Ñ©ÈË");
	insert(0x00000000, 0x578FCE99, 0x00000000);
	insert(70, 7, 7, 7, 7, 3);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡°×Ôó, "Ð¡°×Ôó");
	insert(0x178DEE01, 0x6875C546, 0x5DD2DF02);
	insert(0x86BB0969, 0x86BB0969, 0x82C78C10, 0x9269D193, 0xABAB2922, 0x00000000);
	insert(50, 10, 10, 10, 10, 5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡Ïó, "Ð¡Ïó");
	insert(0xC284AEC7, 0x32E7F885, 0x479D3DAE);
	insert(0x7436E9E9, 0x7436E9E9, 0x21990613, 0x8C77E82D, 0xABAB2922, 0xFD34EC3D);
	insert(30, 10, 10, 10, 10, 5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÐ¡ÅÝÅÝ, "Ð¡ÅÝÅÝ");
	insert(0xF1706FCB, 0x035617B0, 0xFF17FA58);
	insert(0xE7086A2C, 0xE7086A2C, 0xF1B999FA, 0x8A752A12, 0x06BB2040, 0x7B5D7C46);
	insert(50, 5, 5, 5, 5, 5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶Éñºï, "³¬¼¶Éñºï");
	// 0xFA16B987 Á½¸öÐ¡
	insert(0xFA16B987, 0x50C0FCB1, 0x3F155EFA);
	insert(70, 5, 5, 7, 7, 5);
	insert({ 0, 2 }, { 1, 2 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶Éñ¼¦, "³¬¼¶Éñ¼¦");
	insert(0xC30F84BF, 0x6A8966BE, 0x5075BFD4);
	insert(40, 7, 7, 17, 17, 5);
	insert({ 0, 2 }, { 1, 2 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::e³¬¼¶ÍÁµØ¹«¹«, "³¬¼¶ÍÁµØ¹«¹«");
	insert(0x85512FAA, 0x5D4FACC0, 0x2361D268);
	insert(70, 7, 7, 30, 33, 6);
	insert({ 0, 2, 3 }, { 1, 2 });
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÁúÂí, "ÁúÂí");
	insert(0xB1E73C63, 0x62ADD87C, 0xF2D36051);
	insert(50, 8, 8, 8, 8, 4);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eÉ§ÀË½£, "É§ÀË½£");
	insert(0x97DDF348, 0x97DDF348, 0x4E6C91E0, 0xB58CF23C, 0xABAB2922, 0xC284D9CC);
	insert(90, 6, 6, 6, 6, 2);
	insert({ 0, 1 }, { 2, 3 }, { 4, 5 }, { 6, 7 });
	insert(0x00000000, 0xFCB4A08E, 0x59207938, 0x1F503F23, 0x219210C2, 0xE9C8CEB8, 0x00000000, 0x38875CCF, 0xDEC859C9, 0x7DD07B41, 0xA2B30DEC, 0x07B27AB7);
	insert(0x00000000, 0x39BAEA10, 0xE9D644EA, 0x4E6EC869, 0xC97F7C81, 0x06A93432, 0x00000000, 0xF42E3CBA, 0xB8C152E4, 0xC783B5E6, 0xA5B2E5F4, 0x4CE1FF4C);
	insert(0x00000000, 0x8AD7AD90, 0x0193E0A5, 0x15761F33, 0xC97A015E, 0x51920636, 0x00000000, 0x1EDD2B87, 0xFBA36656, 0x0BA5689F, 0x3FB65FEA, 0xB8F5BE10);
	insert(0x00000000, 0x439811D3, 0x6DE2CCCB, 0xE736E8A7, 0x9E59C6C0, 0xF5BD4003, 0x00000000, 0x6B458593, 0xE195D52B, 0x1542622E, 0x026178E6, 0x61D49BEE);
	insert(0x00000000, 0x241DF4E3, 0x3DDB7FF0, 0x58B55F16, 0x69DCFB54, 0xD34E3B61, 0x00000000, 0xAFF3EFD9, 0x6A4DEB74, 0x23C13588, 0x09639ED0, 0x3C57AB63);
	insert(0x00000000, 0xB532E559, 0x55AA2A03, 0x595C216B, 0xCE7DD44C, 0xF155E97E, 0x00000000, 0xB94B5FFF, 0x0576AB01, 0x764DBB9E, 0xB03FD1B7, 0x67417EB8);
	insert(0x00000000, 0xDF749306, 0x1BEC0D8A, 0x2928EE5B, 0xC241C3B4, 0x89352821, 0x00000000, 0x27080BB2, 0xEF986A6C, 0xC2CF850F, 0x61E42EFE, 0x3AF71E8F);
	insert(0x00000000, 0xB4374403, 0xDDE1A3FD, 0x69480D5F, 0xAFBBFB55, 0xD0ABD933, 0x00000000, 0x480449BF, 0xF5A3893E, 0x21F1B72B, 0xCBD027C3, 0x3AC550BE);
	init(eMod::eÎÞºÛ, "ÎÞºÛ");
	insert(0x78FD19DB, 0xD785E500, 0x540BC221);
	insert(0x9553F95B, 0xA35A9D3E, 0x2DEAD602);
	insert(0x17E18D73, 0x00000000, 0x093F94E4, 0x131B52D5, 0x07E26E1D, 0x4F1D43F8);
	insert(90, 4, 4, 4, 4, 2);
	insert({ 0, 1 }, { 0, 2 }, { 0, 3 }, { 0, 4 });
	insert(0x00002000, 0x49386FCE, 0x54F3FC94, 0x42DC698F, 0x2506639C, 0xB740CED5, 0x00000000, 0x29D55AD9, 0x9A03D562, 0x883EE3DA, 0x3B1B7EDE, 0x2EA1A54D);
	insert(0x00000000, 0x85D0D994, 0x50DA4A82, 0x97277986, 0x274498A8, 0xEAFBC7A1, 0x00000000, 0x580DD414, 0xD42183F5, 0xC1F95358, 0xA397A012, 0x0BE3220F);
	insert(0x00000000, 0xC68B564D, 0x922E909A, 0xA8A90594, 0x56AF015E, 0x0B59A408, 0x00000000, 0xD3338931, 0xE4CF7845, 0x56769945, 0x74E6492F, 0x32668FD2);
	insert(0x00000000, 0xE6AD88AE, 0x6ED6B121, 0xB96FB2E6, 0x4C99E6E9, 0xD76B70C3, 0x00000000, 0x5413F763, 0x09A97790, 0x632A945E, 0x0D3D8C54, 0x442EFFF7);
	insert(0x00000000, 0x0EFA39F2, 0x16FE7AF5, 0xB0BBAB94, 0x0D56DFC8, 0xC8AE77EB, 0x00000000, 0xDC37D837, 0x193FB757, 0x35C64622, 0x96AA8584, 0x0B463632);
	init(eMod::e»Ûº£, "»Ûº£");
	insert(0x00000000, 0x00000000, 0x8BB5A31A);
	insert(50, 7, 7, 7, 7, 5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eïÚÍ·, "ïÚÍ·");
	insert(0x00000000, 0x00000000, 0xDA66E6C8);
	insert(50, 6, 6, 6, 6, 5);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);
	init(eMod::eòÚò¼¾«, "òÚò¼¾«");
	insert(0, 7, 7, 7, 7, 5);
	insert(0x00000000, 0x2B59854C, 0x2B59854C, 0x2B59854C, 0x2B59854C, 0x1279E93F, 0x10E66935, 0x93EB5E15, 0x9C39B91D, 0x18CC3124, 0x6BA99908, 0x2B59854C);
	init(eMod::e×ÔÔÚÌìÄ§, "×ÔÔÚÌìÄ§");
	insert(70, 10, 10, 10, 10, 16);
	insert(0x00000000, 0xF207F1A0, 0xF207F1A0, 0xF207F1A0, 0xF207F1A0, 0x679F3915, 0x141FF4C2, 0xBF358FFE, 0x2FE25A8B, 0x2FE25A8B, 0x6F8C61B8, 0xF207F1A0);
	insert(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xC71EC94E, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000);


	for (auto& pet : _tables)
	{
		auto& jjs = pet.second.jinjies;
		if (jjs.empty())
		{
			jjs.resize(1);
			for (int k = 0, size = pet.second.actions.size(); k < size; ++k)
			{
				jjs.at(0).push_back(k);
			}
		}
	}
	for (eMod e = eMod::ePet0; e <= eMod::ePetEnd; e = (eMod)((int)e + 1))
	{
		// ÓÃµÄÊ±ºòÔÙÅÐ¶Ï
		break;
	}
};